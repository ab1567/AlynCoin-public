// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sync_protos.proto
// Protobuf C++ Version: 5.29.3

#ifndef sync_5fprotos_2eproto_2epb_2eh
#define sync_5fprotos_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "block_protos.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_sync_5fprotos_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_sync_5fprotos_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_sync_5fprotos_2eproto;
namespace alyncoin {
class BlockRequestProto;
struct BlockRequestProtoDefaultTypeInternal;
extern BlockRequestProtoDefaultTypeInternal _BlockRequestProto_default_instance_;
class BlockchainSyncProto;
struct BlockchainSyncProtoDefaultTypeInternal;
extern BlockchainSyncProtoDefaultTypeInternal _BlockchainSyncProto_default_instance_;
class SnapshotProto;
struct SnapshotProtoDefaultTypeInternal;
extern SnapshotProtoDefaultTypeInternal _SnapshotProto_default_instance_;
class StateProofProto;
struct StateProofProtoDefaultTypeInternal;
extern StateProofProtoDefaultTypeInternal _StateProofProto_default_instance_;
class SyncRequestProto;
struct SyncRequestProtoDefaultTypeInternal;
extern SyncRequestProtoDefaultTypeInternal _SyncRequestProto_default_instance_;
class SyncResponseProto;
struct SyncResponseProtoDefaultTypeInternal;
extern SyncResponseProtoDefaultTypeInternal _SyncResponseProto_default_instance_;
class TailBlocksProto;
struct TailBlocksProtoDefaultTypeInternal;
extern TailBlocksProtoDefaultTypeInternal _TailBlocksProto_default_instance_;
}  // namespace alyncoin
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace alyncoin {

// ===================================================================


// -------------------------------------------------------------------

class SyncResponseProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:alyncoin.SyncResponseProto) */ {
 public:
  inline SyncResponseProto() : SyncResponseProto(nullptr) {}
  ~SyncResponseProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SyncResponseProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SyncResponseProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SyncResponseProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline SyncResponseProto(const SyncResponseProto& from) : SyncResponseProto(nullptr, from) {}
  inline SyncResponseProto(SyncResponseProto&& from) noexcept
      : SyncResponseProto(nullptr, std::move(from)) {}
  inline SyncResponseProto& operator=(const SyncResponseProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncResponseProto& operator=(SyncResponseProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncResponseProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncResponseProto* internal_default_instance() {
    return reinterpret_cast<const SyncResponseProto*>(
        &_SyncResponseProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SyncResponseProto& a, SyncResponseProto& b) { a.Swap(&b); }
  inline void Swap(SyncResponseProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncResponseProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncResponseProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SyncResponseProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SyncResponseProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SyncResponseProto& from) { SyncResponseProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SyncResponseProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "alyncoin.SyncResponseProto"; }

 protected:
  explicit SyncResponseProto(::google::protobuf::Arena* arena);
  SyncResponseProto(::google::protobuf::Arena* arena, const SyncResponseProto& from);
  SyncResponseProto(::google::protobuf::Arena* arena, SyncResponseProto&& from) noexcept
      : SyncResponseProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // string status = 1;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // string data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:alyncoin.SyncResponseProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SyncResponseProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sync_5fprotos_2eproto;
};
// -------------------------------------------------------------------

class SyncRequestProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:alyncoin.SyncRequestProto) */ {
 public:
  inline SyncRequestProto() : SyncRequestProto(nullptr) {}
  ~SyncRequestProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SyncRequestProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SyncRequestProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SyncRequestProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline SyncRequestProto(const SyncRequestProto& from) : SyncRequestProto(nullptr, from) {}
  inline SyncRequestProto(SyncRequestProto&& from) noexcept
      : SyncRequestProto(nullptr, std::move(from)) {}
  inline SyncRequestProto& operator=(const SyncRequestProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncRequestProto& operator=(SyncRequestProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncRequestProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncRequestProto* internal_default_instance() {
    return reinterpret_cast<const SyncRequestProto*>(
        &_SyncRequestProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SyncRequestProto& a, SyncRequestProto& b) { a.Swap(&b); }
  inline void Swap(SyncRequestProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncRequestProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncRequestProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SyncRequestProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SyncRequestProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SyncRequestProto& from) { SyncRequestProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SyncRequestProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "alyncoin.SyncRequestProto"; }

 protected:
  explicit SyncRequestProto(::google::protobuf::Arena* arena);
  SyncRequestProto(::google::protobuf::Arena* arena, const SyncRequestProto& from);
  SyncRequestProto(::google::protobuf::Arena* arena, SyncRequestProto&& from) noexcept
      : SyncRequestProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestTypeFieldNumber = 1,
    kBlockHeightFieldNumber = 2,
  };
  // string request_type = 1;
  void clear_request_type() ;
  const std::string& request_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_type(Arg_&& arg, Args_... args);
  std::string* mutable_request_type();
  PROTOBUF_NODISCARD std::string* release_request_type();
  void set_allocated_request_type(std::string* value);

  private:
  const std::string& _internal_request_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_type(
      const std::string& value);
  std::string* _internal_mutable_request_type();

  public:
  // int32 block_height = 2;
  void clear_block_height() ;
  ::int32_t block_height() const;
  void set_block_height(::int32_t value);

  private:
  ::int32_t _internal_block_height() const;
  void _internal_set_block_height(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:alyncoin.SyncRequestProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SyncRequestProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr request_type_;
    ::int32_t block_height_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sync_5fprotos_2eproto;
};
// -------------------------------------------------------------------

class StateProofProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:alyncoin.StateProofProto) */ {
 public:
  inline StateProofProto() : StateProofProto(nullptr) {}
  ~StateProofProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StateProofProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StateProofProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StateProofProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline StateProofProto(const StateProofProto& from) : StateProofProto(nullptr, from) {}
  inline StateProofProto(StateProofProto&& from) noexcept
      : StateProofProto(nullptr, std::move(from)) {}
  inline StateProofProto& operator=(const StateProofProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateProofProto& operator=(StateProofProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StateProofProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const StateProofProto* internal_default_instance() {
    return reinterpret_cast<const StateProofProto*>(
        &_StateProofProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(StateProofProto& a, StateProofProto& b) { a.Swap(&b); }
  inline void Swap(StateProofProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StateProofProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StateProofProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StateProofProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StateProofProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StateProofProto& from) { StateProofProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StateProofProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "alyncoin.StateProofProto"; }

 protected:
  explicit StateProofProto(::google::protobuf::Arena* arena);
  StateProofProto(::google::protobuf::Arena* arena, const StateProofProto& from);
  StateProofProto(::google::protobuf::Arena* arena, StateProofProto&& from) noexcept
      : StateProofProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStateRootFieldNumber = 2,
    kZkProofFieldNumber = 3,
    kBlockHeightFieldNumber = 1,
  };
  // string state_root = 2;
  void clear_state_root() ;
  const std::string& state_root() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state_root(Arg_&& arg, Args_... args);
  std::string* mutable_state_root();
  PROTOBUF_NODISCARD std::string* release_state_root();
  void set_allocated_state_root(std::string* value);

  private:
  const std::string& _internal_state_root() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state_root(
      const std::string& value);
  std::string* _internal_mutable_state_root();

  public:
  // bytes zk_proof = 3;
  void clear_zk_proof() ;
  const std::string& zk_proof() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_zk_proof(Arg_&& arg, Args_... args);
  std::string* mutable_zk_proof();
  PROTOBUF_NODISCARD std::string* release_zk_proof();
  void set_allocated_zk_proof(std::string* value);

  private:
  const std::string& _internal_zk_proof() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_zk_proof(
      const std::string& value);
  std::string* _internal_mutable_zk_proof();

  public:
  // int32 block_height = 1;
  void clear_block_height() ;
  ::int32_t block_height() const;
  void set_block_height(::int32_t value);

  private:
  ::int32_t _internal_block_height() const;
  void _internal_set_block_height(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:alyncoin.StateProofProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StateProofProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr state_root_;
    ::google::protobuf::internal::ArenaStringPtr zk_proof_;
    ::int32_t block_height_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sync_5fprotos_2eproto;
};
// -------------------------------------------------------------------

class BlockchainSyncProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:alyncoin.BlockchainSyncProto) */ {
 public:
  inline BlockchainSyncProto() : BlockchainSyncProto(nullptr) {}
  ~BlockchainSyncProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BlockchainSyncProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BlockchainSyncProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockchainSyncProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlockchainSyncProto(const BlockchainSyncProto& from) : BlockchainSyncProto(nullptr, from) {}
  inline BlockchainSyncProto(BlockchainSyncProto&& from) noexcept
      : BlockchainSyncProto(nullptr, std::move(from)) {}
  inline BlockchainSyncProto& operator=(const BlockchainSyncProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockchainSyncProto& operator=(BlockchainSyncProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockchainSyncProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockchainSyncProto* internal_default_instance() {
    return reinterpret_cast<const BlockchainSyncProto*>(
        &_BlockchainSyncProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BlockchainSyncProto& a, BlockchainSyncProto& b) { a.Swap(&b); }
  inline void Swap(BlockchainSyncProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockchainSyncProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockchainSyncProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BlockchainSyncProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockchainSyncProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockchainSyncProto& from) { BlockchainSyncProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BlockchainSyncProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "alyncoin.BlockchainSyncProto"; }

 protected:
  explicit BlockchainSyncProto(::google::protobuf::Arena* arena);
  BlockchainSyncProto(::google::protobuf::Arena* arena, const BlockchainSyncProto& from);
  BlockchainSyncProto(::google::protobuf::Arena* arena, BlockchainSyncProto&& from) noexcept
      : BlockchainSyncProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestTypeFieldNumber = 1,
  };
  // string request_type = 1;
  void clear_request_type() ;
  const std::string& request_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_type(Arg_&& arg, Args_... args);
  std::string* mutable_request_type();
  PROTOBUF_NODISCARD std::string* release_request_type();
  void set_allocated_request_type(std::string* value);

  private:
  const std::string& _internal_request_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_type(
      const std::string& value);
  std::string* _internal_mutable_request_type();

  public:
  // @@protoc_insertion_point(class_scope:alyncoin.BlockchainSyncProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlockchainSyncProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr request_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sync_5fprotos_2eproto;
};
// -------------------------------------------------------------------

class BlockRequestProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:alyncoin.BlockRequestProto) */ {
 public:
  inline BlockRequestProto() : BlockRequestProto(nullptr) {}
  ~BlockRequestProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BlockRequestProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BlockRequestProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockRequestProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlockRequestProto(const BlockRequestProto& from) : BlockRequestProto(nullptr, from) {}
  inline BlockRequestProto(BlockRequestProto&& from) noexcept
      : BlockRequestProto(nullptr, std::move(from)) {}
  inline BlockRequestProto& operator=(const BlockRequestProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockRequestProto& operator=(BlockRequestProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockRequestProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockRequestProto* internal_default_instance() {
    return reinterpret_cast<const BlockRequestProto*>(
        &_BlockRequestProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BlockRequestProto& a, BlockRequestProto& b) { a.Swap(&b); }
  inline void Swap(BlockRequestProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockRequestProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockRequestProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BlockRequestProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockRequestProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockRequestProto& from) { BlockRequestProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BlockRequestProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "alyncoin.BlockRequestProto"; }

 protected:
  explicit BlockRequestProto(::google::protobuf::Arena* arena);
  BlockRequestProto(::google::protobuf::Arena* arena, const BlockRequestProto& from);
  BlockRequestProto(::google::protobuf::Arena* arena, BlockRequestProto&& from) noexcept
      : BlockRequestProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestTypeFieldNumber = 1,
    kBlockIndexFieldNumber = 2,
  };
  // string request_type = 1;
  void clear_request_type() ;
  const std::string& request_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_type(Arg_&& arg, Args_... args);
  std::string* mutable_request_type();
  PROTOBUF_NODISCARD std::string* release_request_type();
  void set_allocated_request_type(std::string* value);

  private:
  const std::string& _internal_request_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_type(
      const std::string& value);
  std::string* _internal_mutable_request_type();

  public:
  // int32 block_index = 2;
  void clear_block_index() ;
  ::int32_t block_index() const;
  void set_block_index(::int32_t value);

  private:
  ::int32_t _internal_block_index() const;
  void _internal_set_block_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:alyncoin.BlockRequestProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      47, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlockRequestProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr request_type_;
    ::int32_t block_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sync_5fprotos_2eproto;
};
// -------------------------------------------------------------------

class TailBlocksProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:alyncoin.TailBlocksProto) */ {
 public:
  inline TailBlocksProto() : TailBlocksProto(nullptr) {}
  ~TailBlocksProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TailBlocksProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TailBlocksProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TailBlocksProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline TailBlocksProto(const TailBlocksProto& from) : TailBlocksProto(nullptr, from) {}
  inline TailBlocksProto(TailBlocksProto&& from) noexcept
      : TailBlocksProto(nullptr, std::move(from)) {}
  inline TailBlocksProto& operator=(const TailBlocksProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TailBlocksProto& operator=(TailBlocksProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TailBlocksProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const TailBlocksProto* internal_default_instance() {
    return reinterpret_cast<const TailBlocksProto*>(
        &_TailBlocksProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(TailBlocksProto& a, TailBlocksProto& b) { a.Swap(&b); }
  inline void Swap(TailBlocksProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TailBlocksProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TailBlocksProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TailBlocksProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TailBlocksProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TailBlocksProto& from) { TailBlocksProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TailBlocksProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "alyncoin.TailBlocksProto"; }

 protected:
  explicit TailBlocksProto(::google::protobuf::Arena* arena);
  TailBlocksProto(::google::protobuf::Arena* arena, const TailBlocksProto& from);
  TailBlocksProto(::google::protobuf::Arena* arena, TailBlocksProto&& from) noexcept
      : TailBlocksProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlocksFieldNumber = 1,
  };
  // repeated .alyncoin.BlockProto blocks = 1;
  int blocks_size() const;
  private:
  int _internal_blocks_size() const;

  public:
  void clear_blocks() ;
  ::alyncoin::BlockProto* mutable_blocks(int index);
  ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>* mutable_blocks();

  private:
  const ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>& _internal_blocks() const;
  ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>* _internal_mutable_blocks();
  public:
  const ::alyncoin::BlockProto& blocks(int index) const;
  ::alyncoin::BlockProto* add_blocks();
  const ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>& blocks() const;
  // @@protoc_insertion_point(class_scope:alyncoin.TailBlocksProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TailBlocksProto& from_msg);
    ::google::protobuf::RepeatedPtrField< ::alyncoin::BlockProto > blocks_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sync_5fprotos_2eproto;
};
// -------------------------------------------------------------------

class SnapshotProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:alyncoin.SnapshotProto) */ {
 public:
  inline SnapshotProto() : SnapshotProto(nullptr) {}
  ~SnapshotProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SnapshotProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SnapshotProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SnapshotProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline SnapshotProto(const SnapshotProto& from) : SnapshotProto(nullptr, from) {}
  inline SnapshotProto(SnapshotProto&& from) noexcept
      : SnapshotProto(nullptr, std::move(from)) {}
  inline SnapshotProto& operator=(const SnapshotProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SnapshotProto& operator=(SnapshotProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SnapshotProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SnapshotProto* internal_default_instance() {
    return reinterpret_cast<const SnapshotProto*>(
        &_SnapshotProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SnapshotProto& a, SnapshotProto& b) { a.Swap(&b); }
  inline void Swap(SnapshotProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SnapshotProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SnapshotProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SnapshotProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SnapshotProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SnapshotProto& from) { SnapshotProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SnapshotProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "alyncoin.SnapshotProto"; }

 protected:
  explicit SnapshotProto(::google::protobuf::Arena* arena);
  SnapshotProto(::google::protobuf::Arena* arena, const SnapshotProto& from);
  SnapshotProto(::google::protobuf::Arena* arena, SnapshotProto&& from) noexcept
      : SnapshotProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlocksFieldNumber = 2,
    kMerkleRootFieldNumber = 3,
    kHeightFieldNumber = 1,
  };
  // repeated .alyncoin.BlockProto blocks = 2;
  int blocks_size() const;
  private:
  int _internal_blocks_size() const;

  public:
  void clear_blocks() ;
  ::alyncoin::BlockProto* mutable_blocks(int index);
  ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>* mutable_blocks();

  private:
  const ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>& _internal_blocks() const;
  ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>* _internal_mutable_blocks();
  public:
  const ::alyncoin::BlockProto& blocks(int index) const;
  ::alyncoin::BlockProto* add_blocks();
  const ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>& blocks() const;
  // string merkle_root = 3;
  void clear_merkle_root() ;
  const std::string& merkle_root() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_merkle_root(Arg_&& arg, Args_... args);
  std::string* mutable_merkle_root();
  PROTOBUF_NODISCARD std::string* release_merkle_root();
  void set_allocated_merkle_root(std::string* value);

  private:
  const std::string& _internal_merkle_root() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_merkle_root(
      const std::string& value);
  std::string* _internal_mutable_merkle_root();

  public:
  // int32 height = 1;
  void clear_height() ;
  ::int32_t height() const;
  void set_height(::int32_t value);

  private:
  ::int32_t _internal_height() const;
  void _internal_set_height(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:alyncoin.SnapshotProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      42, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SnapshotProto& from_msg);
    ::google::protobuf::RepeatedPtrField< ::alyncoin::BlockProto > blocks_;
    ::google::protobuf::internal::ArenaStringPtr merkle_root_;
    ::int32_t height_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sync_5fprotos_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SyncRequestProto

// string request_type = 1;
inline void SyncRequestProto::clear_request_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.ClearToEmpty();
}
inline const std::string& SyncRequestProto::request_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.SyncRequestProto.request_type)
  return _internal_request_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SyncRequestProto::set_request_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.SyncRequestProto.request_type)
}
inline std::string* SyncRequestProto::mutable_request_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_type();
  // @@protoc_insertion_point(field_mutable:alyncoin.SyncRequestProto.request_type)
  return _s;
}
inline const std::string& SyncRequestProto::_internal_request_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_type_.Get();
}
inline void SyncRequestProto::_internal_set_request_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.Set(value, GetArena());
}
inline std::string* SyncRequestProto::_internal_mutable_request_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_type_.Mutable( GetArena());
}
inline std::string* SyncRequestProto::release_request_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.SyncRequestProto.request_type)
  return _impl_.request_type_.Release();
}
inline void SyncRequestProto::set_allocated_request_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_type_.IsDefault()) {
    _impl_.request_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.SyncRequestProto.request_type)
}

// int32 block_height = 2;
inline void SyncRequestProto::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = 0;
}
inline ::int32_t SyncRequestProto::block_height() const {
  // @@protoc_insertion_point(field_get:alyncoin.SyncRequestProto.block_height)
  return _internal_block_height();
}
inline void SyncRequestProto::set_block_height(::int32_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:alyncoin.SyncRequestProto.block_height)
}
inline ::int32_t SyncRequestProto::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void SyncRequestProto::_internal_set_block_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// -------------------------------------------------------------------

// SyncResponseProto

// string status = 1;
inline void SyncResponseProto::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& SyncResponseProto::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.SyncResponseProto.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SyncResponseProto::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.SyncResponseProto.status)
}
inline std::string* SyncResponseProto::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:alyncoin.SyncResponseProto.status)
  return _s;
}
inline const std::string& SyncResponseProto::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void SyncResponseProto::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* SyncResponseProto::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* SyncResponseProto::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.SyncResponseProto.status)
  return _impl_.status_.Release();
}
inline void SyncResponseProto::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.SyncResponseProto.status)
}

// string data = 2;
inline void SyncResponseProto::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& SyncResponseProto::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.SyncResponseProto.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SyncResponseProto::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.SyncResponseProto.data)
}
inline std::string* SyncResponseProto::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:alyncoin.SyncResponseProto.data)
  return _s;
}
inline const std::string& SyncResponseProto::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void SyncResponseProto::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* SyncResponseProto::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* SyncResponseProto::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.SyncResponseProto.data)
  return _impl_.data_.Release();
}
inline void SyncResponseProto::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.SyncResponseProto.data)
}

// -------------------------------------------------------------------

// BlockRequestProto

// string request_type = 1;
inline void BlockRequestProto::clear_request_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.ClearToEmpty();
}
inline const std::string& BlockRequestProto::request_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.BlockRequestProto.request_type)
  return _internal_request_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlockRequestProto::set_request_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.BlockRequestProto.request_type)
}
inline std::string* BlockRequestProto::mutable_request_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_type();
  // @@protoc_insertion_point(field_mutable:alyncoin.BlockRequestProto.request_type)
  return _s;
}
inline const std::string& BlockRequestProto::_internal_request_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_type_.Get();
}
inline void BlockRequestProto::_internal_set_request_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.Set(value, GetArena());
}
inline std::string* BlockRequestProto::_internal_mutable_request_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_type_.Mutable( GetArena());
}
inline std::string* BlockRequestProto::release_request_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.BlockRequestProto.request_type)
  return _impl_.request_type_.Release();
}
inline void BlockRequestProto::set_allocated_request_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_type_.IsDefault()) {
    _impl_.request_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.BlockRequestProto.request_type)
}

// int32 block_index = 2;
inline void BlockRequestProto::clear_block_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_index_ = 0;
}
inline ::int32_t BlockRequestProto::block_index() const {
  // @@protoc_insertion_point(field_get:alyncoin.BlockRequestProto.block_index)
  return _internal_block_index();
}
inline void BlockRequestProto::set_block_index(::int32_t value) {
  _internal_set_block_index(value);
  // @@protoc_insertion_point(field_set:alyncoin.BlockRequestProto.block_index)
}
inline ::int32_t BlockRequestProto::_internal_block_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_index_;
}
inline void BlockRequestProto::_internal_set_block_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_index_ = value;
}

// -------------------------------------------------------------------

// BlockchainSyncProto

// string request_type = 1;
inline void BlockchainSyncProto::clear_request_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.ClearToEmpty();
}
inline const std::string& BlockchainSyncProto::request_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.BlockchainSyncProto.request_type)
  return _internal_request_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlockchainSyncProto::set_request_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.BlockchainSyncProto.request_type)
}
inline std::string* BlockchainSyncProto::mutable_request_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_type();
  // @@protoc_insertion_point(field_mutable:alyncoin.BlockchainSyncProto.request_type)
  return _s;
}
inline const std::string& BlockchainSyncProto::_internal_request_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_type_.Get();
}
inline void BlockchainSyncProto::_internal_set_request_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.Set(value, GetArena());
}
inline std::string* BlockchainSyncProto::_internal_mutable_request_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_type_.Mutable( GetArena());
}
inline std::string* BlockchainSyncProto::release_request_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.BlockchainSyncProto.request_type)
  return _impl_.request_type_.Release();
}
inline void BlockchainSyncProto::set_allocated_request_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_type_.IsDefault()) {
    _impl_.request_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.BlockchainSyncProto.request_type)
}

// -------------------------------------------------------------------

// StateProofProto

// int32 block_height = 1;
inline void StateProofProto::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = 0;
}
inline ::int32_t StateProofProto::block_height() const {
  // @@protoc_insertion_point(field_get:alyncoin.StateProofProto.block_height)
  return _internal_block_height();
}
inline void StateProofProto::set_block_height(::int32_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:alyncoin.StateProofProto.block_height)
}
inline ::int32_t StateProofProto::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void StateProofProto::_internal_set_block_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// string state_root = 2;
inline void StateProofProto::clear_state_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_root_.ClearToEmpty();
}
inline const std::string& StateProofProto::state_root() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.StateProofProto.state_root)
  return _internal_state_root();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StateProofProto::set_state_root(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_root_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.StateProofProto.state_root)
}
inline std::string* StateProofProto::mutable_state_root() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state_root();
  // @@protoc_insertion_point(field_mutable:alyncoin.StateProofProto.state_root)
  return _s;
}
inline const std::string& StateProofProto::_internal_state_root() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_root_.Get();
}
inline void StateProofProto::_internal_set_state_root(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_root_.Set(value, GetArena());
}
inline std::string* StateProofProto::_internal_mutable_state_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.state_root_.Mutable( GetArena());
}
inline std::string* StateProofProto::release_state_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.StateProofProto.state_root)
  return _impl_.state_root_.Release();
}
inline void StateProofProto::set_allocated_state_root(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_root_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.state_root_.IsDefault()) {
    _impl_.state_root_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.StateProofProto.state_root)
}

// bytes zk_proof = 3;
inline void StateProofProto::clear_zk_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zk_proof_.ClearToEmpty();
}
inline const std::string& StateProofProto::zk_proof() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.StateProofProto.zk_proof)
  return _internal_zk_proof();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StateProofProto::set_zk_proof(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zk_proof_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.StateProofProto.zk_proof)
}
inline std::string* StateProofProto::mutable_zk_proof() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_zk_proof();
  // @@protoc_insertion_point(field_mutable:alyncoin.StateProofProto.zk_proof)
  return _s;
}
inline const std::string& StateProofProto::_internal_zk_proof() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.zk_proof_.Get();
}
inline void StateProofProto::_internal_set_zk_proof(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zk_proof_.Set(value, GetArena());
}
inline std::string* StateProofProto::_internal_mutable_zk_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.zk_proof_.Mutable( GetArena());
}
inline std::string* StateProofProto::release_zk_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.StateProofProto.zk_proof)
  return _impl_.zk_proof_.Release();
}
inline void StateProofProto::set_allocated_zk_proof(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zk_proof_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.zk_proof_.IsDefault()) {
    _impl_.zk_proof_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.StateProofProto.zk_proof)
}

// -------------------------------------------------------------------

// SnapshotProto

// int32 height = 1;
inline void SnapshotProto::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
}
inline ::int32_t SnapshotProto::height() const {
  // @@protoc_insertion_point(field_get:alyncoin.SnapshotProto.height)
  return _internal_height();
}
inline void SnapshotProto::set_height(::int32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:alyncoin.SnapshotProto.height)
}
inline ::int32_t SnapshotProto::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void SnapshotProto::_internal_set_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// repeated .alyncoin.BlockProto blocks = 2;
inline int SnapshotProto::_internal_blocks_size() const {
  return _internal_blocks().size();
}
inline int SnapshotProto::blocks_size() const {
  return _internal_blocks_size();
}
inline ::alyncoin::BlockProto* SnapshotProto::mutable_blocks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:alyncoin.SnapshotProto.blocks)
  return _internal_mutable_blocks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>* SnapshotProto::mutable_blocks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:alyncoin.SnapshotProto.blocks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_blocks();
}
inline const ::alyncoin::BlockProto& SnapshotProto::blocks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.SnapshotProto.blocks)
  return _internal_blocks().Get(index);
}
inline ::alyncoin::BlockProto* SnapshotProto::add_blocks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::alyncoin::BlockProto* _add = _internal_mutable_blocks()->Add();
  // @@protoc_insertion_point(field_add:alyncoin.SnapshotProto.blocks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>& SnapshotProto::blocks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:alyncoin.SnapshotProto.blocks)
  return _internal_blocks();
}
inline const ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>&
SnapshotProto::_internal_blocks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blocks_;
}
inline ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>*
SnapshotProto::_internal_mutable_blocks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.blocks_;
}

// string merkle_root = 3;
inline void SnapshotProto::clear_merkle_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.merkle_root_.ClearToEmpty();
}
inline const std::string& SnapshotProto::merkle_root() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.SnapshotProto.merkle_root)
  return _internal_merkle_root();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SnapshotProto::set_merkle_root(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.merkle_root_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.SnapshotProto.merkle_root)
}
inline std::string* SnapshotProto::mutable_merkle_root() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_merkle_root();
  // @@protoc_insertion_point(field_mutable:alyncoin.SnapshotProto.merkle_root)
  return _s;
}
inline const std::string& SnapshotProto::_internal_merkle_root() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.merkle_root_.Get();
}
inline void SnapshotProto::_internal_set_merkle_root(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.merkle_root_.Set(value, GetArena());
}
inline std::string* SnapshotProto::_internal_mutable_merkle_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.merkle_root_.Mutable( GetArena());
}
inline std::string* SnapshotProto::release_merkle_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.SnapshotProto.merkle_root)
  return _impl_.merkle_root_.Release();
}
inline void SnapshotProto::set_allocated_merkle_root(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.merkle_root_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.merkle_root_.IsDefault()) {
    _impl_.merkle_root_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.SnapshotProto.merkle_root)
}

// -------------------------------------------------------------------

// TailBlocksProto

// repeated .alyncoin.BlockProto blocks = 1;
inline int TailBlocksProto::_internal_blocks_size() const {
  return _internal_blocks().size();
}
inline int TailBlocksProto::blocks_size() const {
  return _internal_blocks_size();
}
inline ::alyncoin::BlockProto* TailBlocksProto::mutable_blocks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:alyncoin.TailBlocksProto.blocks)
  return _internal_mutable_blocks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>* TailBlocksProto::mutable_blocks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:alyncoin.TailBlocksProto.blocks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_blocks();
}
inline const ::alyncoin::BlockProto& TailBlocksProto::blocks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.TailBlocksProto.blocks)
  return _internal_blocks().Get(index);
}
inline ::alyncoin::BlockProto* TailBlocksProto::add_blocks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::alyncoin::BlockProto* _add = _internal_mutable_blocks()->Add();
  // @@protoc_insertion_point(field_add:alyncoin.TailBlocksProto.blocks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>& TailBlocksProto::blocks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:alyncoin.TailBlocksProto.blocks)
  return _internal_blocks();
}
inline const ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>&
TailBlocksProto::_internal_blocks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blocks_;
}
inline ::google::protobuf::RepeatedPtrField<::alyncoin::BlockProto>*
TailBlocksProto::_internal_mutable_blocks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.blocks_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace alyncoin


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // sync_5fprotos_2eproto_2epb_2eh
