// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync_protos.proto

#include "sync_protos.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace alyncoin {
PROTOBUF_CONSTEXPR SyncRequestProto::SyncRequestProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.request_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.block_height_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncRequestProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncRequestProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncRequestProtoDefaultTypeInternal() {}
  union {
    SyncRequestProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncRequestProtoDefaultTypeInternal _SyncRequestProto_default_instance_;
PROTOBUF_CONSTEXPR SyncResponseProto::SyncResponseProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.status_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncResponseProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncResponseProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncResponseProtoDefaultTypeInternal() {}
  union {
    SyncResponseProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncResponseProtoDefaultTypeInternal _SyncResponseProto_default_instance_;
PROTOBUF_CONSTEXPR BlockRequestProto::BlockRequestProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.request_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.block_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BlockRequestProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockRequestProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockRequestProtoDefaultTypeInternal() {}
  union {
    BlockRequestProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockRequestProtoDefaultTypeInternal _BlockRequestProto_default_instance_;
PROTOBUF_CONSTEXPR BlockchainSyncProto::BlockchainSyncProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.request_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BlockchainSyncProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockchainSyncProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockchainSyncProtoDefaultTypeInternal() {}
  union {
    BlockchainSyncProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockchainSyncProtoDefaultTypeInternal _BlockchainSyncProto_default_instance_;
}  // namespace alyncoin
static ::_pb::Metadata file_level_metadata_sync_5fprotos_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_sync_5fprotos_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_sync_5fprotos_2eproto = nullptr;

const uint32_t TableStruct_sync_5fprotos_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alyncoin::SyncRequestProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::alyncoin::SyncRequestProto, _impl_.request_type_),
  PROTOBUF_FIELD_OFFSET(::alyncoin::SyncRequestProto, _impl_.block_height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alyncoin::SyncResponseProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::alyncoin::SyncResponseProto, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::alyncoin::SyncResponseProto, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alyncoin::BlockRequestProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::alyncoin::BlockRequestProto, _impl_.request_type_),
  PROTOBUF_FIELD_OFFSET(::alyncoin::BlockRequestProto, _impl_.block_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alyncoin::BlockchainSyncProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::alyncoin::BlockchainSyncProto, _impl_.request_type_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::alyncoin::SyncRequestProto)},
  { 8, -1, -1, sizeof(::alyncoin::SyncResponseProto)},
  { 16, -1, -1, sizeof(::alyncoin::BlockRequestProto)},
  { 24, -1, -1, sizeof(::alyncoin::BlockchainSyncProto)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::alyncoin::_SyncRequestProto_default_instance_._instance,
  &::alyncoin::_SyncResponseProto_default_instance_._instance,
  &::alyncoin::_BlockRequestProto_default_instance_._instance,
  &::alyncoin::_BlockchainSyncProto_default_instance_._instance,
};

const char descriptor_table_protodef_sync_5fprotos_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021sync_protos.proto\022\010alyncoin\">\n\020SyncReq"
  "uestProto\022\024\n\014request_type\030\001 \001(\t\022\024\n\014block"
  "_height\030\002 \001(\005\"1\n\021SyncResponseProto\022\016\n\006st"
  "atus\030\001 \001(\t\022\014\n\004data\030\002 \001(\t\">\n\021BlockRequest"
  "Proto\022\024\n\014request_type\030\001 \001(\t\022\023\n\013block_ind"
  "ex\030\002 \001(\005\"+\n\023BlockchainSyncProto\022\024\n\014reque"
  "st_type\030\001 \001(\tb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_sync_5fprotos_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sync_5fprotos_2eproto = {
    false, false, 261, descriptor_table_protodef_sync_5fprotos_2eproto,
    "sync_protos.proto",
    &descriptor_table_sync_5fprotos_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_sync_5fprotos_2eproto::offsets,
    file_level_metadata_sync_5fprotos_2eproto, file_level_enum_descriptors_sync_5fprotos_2eproto,
    file_level_service_descriptors_sync_5fprotos_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sync_5fprotos_2eproto_getter() {
  return &descriptor_table_sync_5fprotos_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sync_5fprotos_2eproto(&descriptor_table_sync_5fprotos_2eproto);
namespace alyncoin {

// ===================================================================

class SyncRequestProto::_Internal {
 public:
};

SyncRequestProto::SyncRequestProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:alyncoin.SyncRequestProto)
}
SyncRequestProto::SyncRequestProto(const SyncRequestProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncRequestProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.request_type_){}
    , decltype(_impl_.block_height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.request_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_request_type().empty()) {
    _this->_impl_.request_type_.Set(from._internal_request_type(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.block_height_ = from._impl_.block_height_;
  // @@protoc_insertion_point(copy_constructor:alyncoin.SyncRequestProto)
}

inline void SyncRequestProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.request_type_){}
    , decltype(_impl_.block_height_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.request_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncRequestProto::~SyncRequestProto() {
  // @@protoc_insertion_point(destructor:alyncoin.SyncRequestProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncRequestProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.request_type_.Destroy();
}

void SyncRequestProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.SyncRequestProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_type_.ClearToEmpty();
  _impl_.block_height_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncRequestProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string request_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_request_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "alyncoin.SyncRequestProto.request_type"));
        } else
          goto handle_unusual;
        continue;
      // int32 block_height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.block_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncRequestProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alyncoin.SyncRequestProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_type = 1;
  if (!this->_internal_request_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_type().data(), static_cast<int>(this->_internal_request_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "alyncoin.SyncRequestProto.request_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_type(), target);
  }

  // int32 block_height = 2;
  if (this->_internal_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_block_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alyncoin.SyncRequestProto)
  return target;
}

size_t SyncRequestProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alyncoin.SyncRequestProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string request_type = 1;
  if (!this->_internal_request_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_type());
  }

  // int32 block_height = 2;
  if (this->_internal_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_block_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncRequestProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncRequestProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncRequestProto::GetClassData() const { return &_class_data_; }


void SyncRequestProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncRequestProto*>(&to_msg);
  auto& from = static_cast<const SyncRequestProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.SyncRequestProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_type().empty()) {
    _this->_internal_set_request_type(from._internal_request_type());
  }
  if (from._internal_block_height() != 0) {
    _this->_internal_set_block_height(from._internal_block_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncRequestProto::CopyFrom(const SyncRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.SyncRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncRequestProto::IsInitialized() const {
  return true;
}

void SyncRequestProto::InternalSwap(SyncRequestProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.request_type_, lhs_arena,
      &other->_impl_.request_type_, rhs_arena
  );
  swap(_impl_.block_height_, other->_impl_.block_height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncRequestProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fprotos_2eproto_getter, &descriptor_table_sync_5fprotos_2eproto_once,
      file_level_metadata_sync_5fprotos_2eproto[0]);
}

// ===================================================================

class SyncResponseProto::_Internal {
 public:
};

SyncResponseProto::SyncResponseProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:alyncoin.SyncResponseProto)
}
SyncResponseProto::SyncResponseProto(const SyncResponseProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncResponseProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), 
      _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:alyncoin.SyncResponseProto)
}

inline void SyncResponseProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncResponseProto::~SyncResponseProto() {
  // @@protoc_insertion_point(destructor:alyncoin.SyncResponseProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncResponseProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.status_.Destroy();
  _impl_.data_.Destroy();
}

void SyncResponseProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.SyncResponseProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncResponseProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "alyncoin.SyncResponseProto.status"));
        } else
          goto handle_unusual;
        continue;
      // string data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "alyncoin.SyncResponseProto.data"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncResponseProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alyncoin.SyncResponseProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "alyncoin.SyncResponseProto.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  // string data = 2;
  if (!this->_internal_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "alyncoin.SyncResponseProto.data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alyncoin.SyncResponseProto)
  return target;
}

size_t SyncResponseProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alyncoin.SyncResponseProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncResponseProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncResponseProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncResponseProto::GetClassData() const { return &_class_data_; }


void SyncResponseProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncResponseProto*>(&to_msg);
  auto& from = static_cast<const SyncResponseProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.SyncResponseProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncResponseProto::CopyFrom(const SyncResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.SyncResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncResponseProto::IsInitialized() const {
  return true;
}

void SyncResponseProto::InternalSwap(SyncResponseProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.status_, lhs_arena,
      &other->_impl_.status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncResponseProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fprotos_2eproto_getter, &descriptor_table_sync_5fprotos_2eproto_once,
      file_level_metadata_sync_5fprotos_2eproto[1]);
}

// ===================================================================

class BlockRequestProto::_Internal {
 public:
};

BlockRequestProto::BlockRequestProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:alyncoin.BlockRequestProto)
}
BlockRequestProto::BlockRequestProto(const BlockRequestProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BlockRequestProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.request_type_){}
    , decltype(_impl_.block_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.request_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_request_type().empty()) {
    _this->_impl_.request_type_.Set(from._internal_request_type(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.block_index_ = from._impl_.block_index_;
  // @@protoc_insertion_point(copy_constructor:alyncoin.BlockRequestProto)
}

inline void BlockRequestProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.request_type_){}
    , decltype(_impl_.block_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.request_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BlockRequestProto::~BlockRequestProto() {
  // @@protoc_insertion_point(destructor:alyncoin.BlockRequestProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BlockRequestProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.request_type_.Destroy();
}

void BlockRequestProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BlockRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.BlockRequestProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_type_.ClearToEmpty();
  _impl_.block_index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockRequestProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string request_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_request_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "alyncoin.BlockRequestProto.request_type"));
        } else
          goto handle_unusual;
        continue;
      // int32 block_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.block_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BlockRequestProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alyncoin.BlockRequestProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_type = 1;
  if (!this->_internal_request_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_type().data(), static_cast<int>(this->_internal_request_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "alyncoin.BlockRequestProto.request_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_type(), target);
  }

  // int32 block_index = 2;
  if (this->_internal_block_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_block_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alyncoin.BlockRequestProto)
  return target;
}

size_t BlockRequestProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alyncoin.BlockRequestProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string request_type = 1;
  if (!this->_internal_request_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_type());
  }

  // int32 block_index = 2;
  if (this->_internal_block_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_block_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockRequestProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BlockRequestProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockRequestProto::GetClassData() const { return &_class_data_; }


void BlockRequestProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BlockRequestProto*>(&to_msg);
  auto& from = static_cast<const BlockRequestProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.BlockRequestProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_type().empty()) {
    _this->_internal_set_request_type(from._internal_request_type());
  }
  if (from._internal_block_index() != 0) {
    _this->_internal_set_block_index(from._internal_block_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlockRequestProto::CopyFrom(const BlockRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.BlockRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockRequestProto::IsInitialized() const {
  return true;
}

void BlockRequestProto::InternalSwap(BlockRequestProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.request_type_, lhs_arena,
      &other->_impl_.request_type_, rhs_arena
  );
  swap(_impl_.block_index_, other->_impl_.block_index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockRequestProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fprotos_2eproto_getter, &descriptor_table_sync_5fprotos_2eproto_once,
      file_level_metadata_sync_5fprotos_2eproto[2]);
}

// ===================================================================

class BlockchainSyncProto::_Internal {
 public:
};

BlockchainSyncProto::BlockchainSyncProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:alyncoin.BlockchainSyncProto)
}
BlockchainSyncProto::BlockchainSyncProto(const BlockchainSyncProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BlockchainSyncProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.request_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.request_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_request_type().empty()) {
    _this->_impl_.request_type_.Set(from._internal_request_type(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:alyncoin.BlockchainSyncProto)
}

inline void BlockchainSyncProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.request_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.request_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BlockchainSyncProto::~BlockchainSyncProto() {
  // @@protoc_insertion_point(destructor:alyncoin.BlockchainSyncProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BlockchainSyncProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.request_type_.Destroy();
}

void BlockchainSyncProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BlockchainSyncProto::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.BlockchainSyncProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockchainSyncProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string request_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_request_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "alyncoin.BlockchainSyncProto.request_type"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BlockchainSyncProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alyncoin.BlockchainSyncProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_type = 1;
  if (!this->_internal_request_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_type().data(), static_cast<int>(this->_internal_request_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "alyncoin.BlockchainSyncProto.request_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alyncoin.BlockchainSyncProto)
  return target;
}

size_t BlockchainSyncProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alyncoin.BlockchainSyncProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string request_type = 1;
  if (!this->_internal_request_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockchainSyncProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BlockchainSyncProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockchainSyncProto::GetClassData() const { return &_class_data_; }


void BlockchainSyncProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BlockchainSyncProto*>(&to_msg);
  auto& from = static_cast<const BlockchainSyncProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.BlockchainSyncProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_type().empty()) {
    _this->_internal_set_request_type(from._internal_request_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlockchainSyncProto::CopyFrom(const BlockchainSyncProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.BlockchainSyncProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockchainSyncProto::IsInitialized() const {
  return true;
}

void BlockchainSyncProto::InternalSwap(BlockchainSyncProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.request_type_, lhs_arena,
      &other->_impl_.request_type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockchainSyncProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fprotos_2eproto_getter, &descriptor_table_sync_5fprotos_2eproto_once,
      file_level_metadata_sync_5fprotos_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace alyncoin
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::alyncoin::SyncRequestProto*
Arena::CreateMaybeMessage< ::alyncoin::SyncRequestProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alyncoin::SyncRequestProto >(arena);
}
template<> PROTOBUF_NOINLINE ::alyncoin::SyncResponseProto*
Arena::CreateMaybeMessage< ::alyncoin::SyncResponseProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alyncoin::SyncResponseProto >(arena);
}
template<> PROTOBUF_NOINLINE ::alyncoin::BlockRequestProto*
Arena::CreateMaybeMessage< ::alyncoin::BlockRequestProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alyncoin::BlockRequestProto >(arena);
}
template<> PROTOBUF_NOINLINE ::alyncoin::BlockchainSyncProto*
Arena::CreateMaybeMessage< ::alyncoin::BlockchainSyncProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alyncoin::BlockchainSyncProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
