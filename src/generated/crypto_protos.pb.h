// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: crypto_protos.proto
// Protobuf C++ Version: 5.29.3

#ifndef crypto_5fprotos_2eproto_2epb_2eh
#define crypto_5fprotos_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_crypto_5fprotos_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_crypto_5fprotos_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_crypto_5fprotos_2eproto;
namespace alyncoin {
class AddressProto;
struct AddressProtoDefaultTypeInternal;
extern AddressProtoDefaultTypeInternal _AddressProto_default_instance_;
class CryptoKeysProto;
struct CryptoKeysProtoDefaultTypeInternal;
extern CryptoKeysProtoDefaultTypeInternal _CryptoKeysProto_default_instance_;
class SignatureProto;
struct SignatureProtoDefaultTypeInternal;
extern SignatureProtoDefaultTypeInternal _SignatureProto_default_instance_;
}  // namespace alyncoin
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace alyncoin {

// ===================================================================


// -------------------------------------------------------------------

class SignatureProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:alyncoin.SignatureProto) */ {
 public:
  inline SignatureProto() : SignatureProto(nullptr) {}
  ~SignatureProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SignatureProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SignatureProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignatureProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline SignatureProto(const SignatureProto& from) : SignatureProto(nullptr, from) {}
  inline SignatureProto(SignatureProto&& from) noexcept
      : SignatureProto(nullptr, std::move(from)) {}
  inline SignatureProto& operator=(const SignatureProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignatureProto& operator=(SignatureProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignatureProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignatureProto* internal_default_instance() {
    return reinterpret_cast<const SignatureProto*>(
        &_SignatureProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SignatureProto& a, SignatureProto& b) { a.Swap(&b); }
  inline void Swap(SignatureProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignatureProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignatureProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SignatureProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignatureProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SignatureProto& from) { SignatureProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SignatureProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "alyncoin.SignatureProto"; }

 protected:
  explicit SignatureProto(::google::protobuf::Arena* arena);
  SignatureProto(::google::protobuf::Arena* arena, const SignatureProto& from);
  SignatureProto(::google::protobuf::Arena* arena, SignatureProto&& from) noexcept
      : SignatureProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignatureFieldNumber = 1,
  };
  // bytes signature = 1;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* value);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // @@protoc_insertion_point(class_scope:alyncoin.SignatureProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SignatureProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr signature_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crypto_5fprotos_2eproto;
};
// -------------------------------------------------------------------

class CryptoKeysProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:alyncoin.CryptoKeysProto) */ {
 public:
  inline CryptoKeysProto() : CryptoKeysProto(nullptr) {}
  ~CryptoKeysProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CryptoKeysProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CryptoKeysProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CryptoKeysProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline CryptoKeysProto(const CryptoKeysProto& from) : CryptoKeysProto(nullptr, from) {}
  inline CryptoKeysProto(CryptoKeysProto&& from) noexcept
      : CryptoKeysProto(nullptr, std::move(from)) {}
  inline CryptoKeysProto& operator=(const CryptoKeysProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline CryptoKeysProto& operator=(CryptoKeysProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CryptoKeysProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const CryptoKeysProto* internal_default_instance() {
    return reinterpret_cast<const CryptoKeysProto*>(
        &_CryptoKeysProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CryptoKeysProto& a, CryptoKeysProto& b) { a.Swap(&b); }
  inline void Swap(CryptoKeysProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CryptoKeysProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CryptoKeysProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CryptoKeysProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CryptoKeysProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CryptoKeysProto& from) { CryptoKeysProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CryptoKeysProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "alyncoin.CryptoKeysProto"; }

 protected:
  explicit CryptoKeysProto(::google::protobuf::Arena* arena);
  CryptoKeysProto(::google::protobuf::Arena* arena, const CryptoKeysProto& from);
  CryptoKeysProto(::google::protobuf::Arena* arena, CryptoKeysProto&& from) noexcept
      : CryptoKeysProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPrivateKeyFieldNumber = 1,
    kPublicKeyFieldNumber = 2,
  };
  // bytes private_key = 1;
  void clear_private_key() ;
  const std::string& private_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_private_key(Arg_&& arg, Args_... args);
  std::string* mutable_private_key();
  PROTOBUF_NODISCARD std::string* release_private_key();
  void set_allocated_private_key(std::string* value);

  private:
  const std::string& _internal_private_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_private_key(
      const std::string& value);
  std::string* _internal_mutable_private_key();

  public:
  // bytes public_key = 2;
  void clear_public_key() ;
  const std::string& public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_public_key();
  PROTOBUF_NODISCARD std::string* release_public_key();
  void set_allocated_public_key(std::string* value);

  private:
  const std::string& _internal_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_public_key(
      const std::string& value);
  std::string* _internal_mutable_public_key();

  public:
  // @@protoc_insertion_point(class_scope:alyncoin.CryptoKeysProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CryptoKeysProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr private_key_;
    ::google::protobuf::internal::ArenaStringPtr public_key_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crypto_5fprotos_2eproto;
};
// -------------------------------------------------------------------

class AddressProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:alyncoin.AddressProto) */ {
 public:
  inline AddressProto() : AddressProto(nullptr) {}
  ~AddressProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddressProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddressProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddressProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddressProto(const AddressProto& from) : AddressProto(nullptr, from) {}
  inline AddressProto(AddressProto&& from) noexcept
      : AddressProto(nullptr, std::move(from)) {}
  inline AddressProto& operator=(const AddressProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddressProto& operator=(AddressProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddressProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddressProto* internal_default_instance() {
    return reinterpret_cast<const AddressProto*>(
        &_AddressProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AddressProto& a, AddressProto& b) { a.Swap(&b); }
  inline void Swap(AddressProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddressProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddressProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddressProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddressProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddressProto& from) { AddressProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddressProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "alyncoin.AddressProto"; }

 protected:
  explicit AddressProto(::google::protobuf::Arena* arena);
  AddressProto(::google::protobuf::Arena* arena, const AddressProto& from);
  AddressProto(::google::protobuf::Arena* arena, AddressProto&& from) noexcept
      : AddressProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinerAddressFieldNumber = 1,
  };
  // string miner_address = 1;
  void clear_miner_address() ;
  const std::string& miner_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_miner_address(Arg_&& arg, Args_... args);
  std::string* mutable_miner_address();
  PROTOBUF_NODISCARD std::string* release_miner_address();
  void set_allocated_miner_address(std::string* value);

  private:
  const std::string& _internal_miner_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_miner_address(
      const std::string& value);
  std::string* _internal_mutable_miner_address();

  public:
  // @@protoc_insertion_point(class_scope:alyncoin.AddressProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddressProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr miner_address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crypto_5fprotos_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CryptoKeysProto

// bytes private_key = 1;
inline void CryptoKeysProto::clear_private_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private_key_.ClearToEmpty();
}
inline const std::string& CryptoKeysProto::private_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.CryptoKeysProto.private_key)
  return _internal_private_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CryptoKeysProto::set_private_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.CryptoKeysProto.private_key)
}
inline std::string* CryptoKeysProto::mutable_private_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_private_key();
  // @@protoc_insertion_point(field_mutable:alyncoin.CryptoKeysProto.private_key)
  return _s;
}
inline const std::string& CryptoKeysProto::_internal_private_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.private_key_.Get();
}
inline void CryptoKeysProto::_internal_set_private_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private_key_.Set(value, GetArena());
}
inline std::string* CryptoKeysProto::_internal_mutable_private_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.private_key_.Mutable( GetArena());
}
inline std::string* CryptoKeysProto::release_private_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.CryptoKeysProto.private_key)
  return _impl_.private_key_.Release();
}
inline void CryptoKeysProto::set_allocated_private_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.private_key_.IsDefault()) {
    _impl_.private_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.CryptoKeysProto.private_key)
}

// bytes public_key = 2;
inline void CryptoKeysProto::clear_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.ClearToEmpty();
}
inline const std::string& CryptoKeysProto::public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.CryptoKeysProto.public_key)
  return _internal_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CryptoKeysProto::set_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.CryptoKeysProto.public_key)
}
inline std::string* CryptoKeysProto::mutable_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_public_key();
  // @@protoc_insertion_point(field_mutable:alyncoin.CryptoKeysProto.public_key)
  return _s;
}
inline const std::string& CryptoKeysProto::_internal_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.public_key_.Get();
}
inline void CryptoKeysProto::_internal_set_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.Set(value, GetArena());
}
inline std::string* CryptoKeysProto::_internal_mutable_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.public_key_.Mutable( GetArena());
}
inline std::string* CryptoKeysProto::release_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.CryptoKeysProto.public_key)
  return _impl_.public_key_.Release();
}
inline void CryptoKeysProto::set_allocated_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.public_key_.IsDefault()) {
    _impl_.public_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.CryptoKeysProto.public_key)
}

// -------------------------------------------------------------------

// SignatureProto

// bytes signature = 1;
inline void SignatureProto::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& SignatureProto::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.SignatureProto.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignatureProto::set_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.SignatureProto.signature)
}
inline std::string* SignatureProto::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:alyncoin.SignatureProto.signature)
  return _s;
}
inline const std::string& SignatureProto::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void SignatureProto::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* SignatureProto::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* SignatureProto::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.SignatureProto.signature)
  return _impl_.signature_.Release();
}
inline void SignatureProto::set_allocated_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signature_.IsDefault()) {
    _impl_.signature_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.SignatureProto.signature)
}

// -------------------------------------------------------------------

// AddressProto

// string miner_address = 1;
inline void AddressProto::clear_miner_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.miner_address_.ClearToEmpty();
}
inline const std::string& AddressProto::miner_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:alyncoin.AddressProto.miner_address)
  return _internal_miner_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressProto::set_miner_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.miner_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:alyncoin.AddressProto.miner_address)
}
inline std::string* AddressProto::mutable_miner_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_miner_address();
  // @@protoc_insertion_point(field_mutable:alyncoin.AddressProto.miner_address)
  return _s;
}
inline const std::string& AddressProto::_internal_miner_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.miner_address_.Get();
}
inline void AddressProto::_internal_set_miner_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.miner_address_.Set(value, GetArena());
}
inline std::string* AddressProto::_internal_mutable_miner_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.miner_address_.Mutable( GetArena());
}
inline std::string* AddressProto::release_miner_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:alyncoin.AddressProto.miner_address)
  return _impl_.miner_address_.Release();
}
inline void AddressProto::set_allocated_miner_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.miner_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.miner_address_.IsDefault()) {
    _impl_.miner_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.AddressProto.miner_address)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace alyncoin


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // crypto_5fprotos_2eproto_2epb_2eh
