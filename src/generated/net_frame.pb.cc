// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: net_frame.proto
// Protobuf C++ Version: 5.29.3

#include "net_frame.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace alyncoin {
namespace net {

inline constexpr Whisper::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Whisper::Whisper(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WhisperDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhisperDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhisperDefaultTypeInternal() {}
  union {
    Whisper _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhisperDefaultTypeInternal _Whisper_default_instance_;

inline constexpr TipHashResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TipHashResponse::TipHashResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TipHashResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TipHashResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TipHashResponseDefaultTypeInternal() {}
  union {
    TipHashResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TipHashResponseDefaultTypeInternal _TipHashResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR TipHashRequest::TipHashRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TipHashRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TipHashRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TipHashRequestDefaultTypeInternal() {}
  union {
    TipHashRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TipHashRequestDefaultTypeInternal _TipHashRequest_default_instance_;

inline constexpr TailBlocksRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : anchor_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_height_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TailBlocksRequest::TailBlocksRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TailBlocksRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TailBlocksRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TailBlocksRequestDefaultTypeInternal() {}
  union {
    TailBlocksRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TailBlocksRequestDefaultTypeInternal _TailBlocksRequest_default_instance_;

inline constexpr SnapshotRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : until_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SnapshotRequest::SnapshotRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SnapshotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotRequestDefaultTypeInternal() {}
  union {
    SnapshotRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotRequestDefaultTypeInternal _SnapshotRequest_default_instance_;

inline constexpr SnapshotMeta::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : root_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        height_{::uint64_t{0u}},
        total_bytes_{::uint64_t{0u}},
        chunk_size_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SnapshotMeta::SnapshotMeta(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SnapshotMetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotMetaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotMetaDefaultTypeInternal() {}
  union {
    SnapshotMeta _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotMetaDefaultTypeInternal _SnapshotMeta_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SnapshotEnd::SnapshotEnd(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SnapshotEndDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotEndDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotEndDefaultTypeInternal() {}
  union {
    SnapshotEnd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotEndDefaultTypeInternal _SnapshotEnd_default_instance_;

inline constexpr SnapshotChunk::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SnapshotChunk::SnapshotChunk(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SnapshotChunkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotChunkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotChunkDefaultTypeInternal() {}
  union {
    SnapshotChunk _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotChunkDefaultTypeInternal _SnapshotChunk_default_instance_;

inline constexpr SnapshotAck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : seq_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SnapshotAck::SnapshotAck(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SnapshotAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotAckDefaultTypeInternal() {}
  union {
    SnapshotAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotAckDefaultTypeInternal _SnapshotAck_default_instance_;

inline constexpr RollupBlockMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollupBlockMsg::RollupBlockMsg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollupBlockMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollupBlockMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollupBlockMsgDefaultTypeInternal() {}
  union {
    RollupBlockMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollupBlockMsgDefaultTypeInternal _RollupBlockMsg_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Pong::Pong(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PongDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PongDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PongDefaultTypeInternal() {}
  union {
    Pong _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PongDefaultTypeInternal _Pong_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Ping::Ping(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingDefaultTypeInternal() {}
  union {
    Ping _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingDefaultTypeInternal _Ping_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PeerListRequest::PeerListRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PeerListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerListRequestDefaultTypeInternal() {}
  union {
    PeerListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerListRequestDefaultTypeInternal _PeerListRequest_default_instance_;

inline constexpr PeerList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : peers_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PeerList::PeerList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PeerListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerListDefaultTypeInternal() {}
  union {
    PeerList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerListDefaultTypeInternal _PeerList_default_instance_;

inline constexpr Inventory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hashes_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Inventory::Inventory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InventoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InventoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InventoryDefaultTypeInternal() {}
  union {
    Inventory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InventoryDefaultTypeInternal _Inventory_default_instance_;

inline constexpr HeightResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : height_{::uint64_t{0u}},
        total_work_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HeightResponse::HeightResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeightResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeightResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeightResponseDefaultTypeInternal() {}
  union {
    HeightResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeightResponseDefaultTypeInternal _HeightResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR HeightRequest::HeightRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct HeightRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeightRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeightRequestDefaultTypeInternal() {}
  union {
    HeightRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeightRequestDefaultTypeInternal _HeightRequest_default_instance_;

inline constexpr HeightProbe::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tip_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_work_{::uint64_t{0u}},
        height_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HeightProbe::HeightProbe(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeightProbeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeightProbeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeightProbeDefaultTypeInternal() {}
  union {
    HeightProbe _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeightProbeDefaultTypeInternal _HeightProbe_default_instance_;

inline constexpr Handshake::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : capabilities_{},
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        network_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        genesis_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pub_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        observed_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        height_{::uint64_t{0u}},
        listen_port_{0u},
        frame_rev_{0u},
        total_work_{::uint64_t{0u}},
        want_snapshot_{false},
        snapshot_size_{0u},
        nonce_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Handshake::Handshake(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HandshakeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandshakeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandshakeDefaultTypeInternal() {}
  union {
    Handshake _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandshakeDefaultTypeInternal _Handshake_default_instance_;

inline constexpr GetHeaders::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : from_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetHeaders::GetHeaders(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetHeadersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetHeadersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetHeadersDefaultTypeInternal() {}
  union {
    GetHeaders _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetHeadersDefaultTypeInternal _GetHeaders_default_instance_;

inline constexpr GetData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hashes_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetData::GetData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDataDefaultTypeInternal() {}
  union {
    GetData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDataDefaultTypeInternal _GetData_default_instance_;

inline constexpr EpochProof::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EpochProof::EpochProof(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EpochProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EpochProofDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EpochProofDefaultTypeInternal() {}
  union {
    EpochProof _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EpochProofDefaultTypeInternal _EpochProof_default_instance_;

inline constexpr BlockRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : index_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlockRequest::BlockRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockRequestDefaultTypeInternal() {}
  union {
    BlockRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockRequestDefaultTypeInternal _BlockRequest_default_instance_;

inline constexpr TransactionBroadcast::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tx_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TransactionBroadcast::TransactionBroadcast(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransactionBroadcastDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransactionBroadcastDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransactionBroadcastDefaultTypeInternal() {}
  union {
    TransactionBroadcast _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransactionBroadcastDefaultTypeInternal _TransactionBroadcast_default_instance_;

inline constexpr StateProof::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        proof_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StateProof::StateProof(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StateProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateProofDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateProofDefaultTypeInternal() {}
  union {
    StateProof _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateProofDefaultTypeInternal _StateProof_default_instance_;

inline constexpr TailBlocks::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : blocks_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TailBlocks::TailBlocks(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TailBlocksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TailBlocksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TailBlocksDefaultTypeInternal() {}
  union {
    TailBlocks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TailBlocksDefaultTypeInternal _TailBlocks_default_instance_;

inline constexpr Headers::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : headers_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Headers::Headers(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeadersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeadersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeadersDefaultTypeInternal() {}
  union {
    Headers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeadersDefaultTypeInternal _Headers_default_instance_;

inline constexpr BlockResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        block_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BlockResponse::BlockResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockResponseDefaultTypeInternal() {}
  union {
    BlockResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockResponseDefaultTypeInternal _BlockResponse_default_instance_;

inline constexpr BlockBroadcast::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        block_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BlockBroadcast::BlockBroadcast(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockBroadcastDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockBroadcastDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockBroadcastDefaultTypeInternal() {}
  union {
    BlockBroadcast _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockBroadcastDefaultTypeInternal _BlockBroadcast_default_instance_;

inline constexpr BlockBatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        chain_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BlockBatch::BlockBatch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockBatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockBatchDefaultTypeInternal() {}
  union {
    BlockBatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockBatchDefaultTypeInternal _BlockBatch_default_instance_;

inline constexpr Frame::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Frame::Frame(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FrameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameDefaultTypeInternal() {}
  union {
    Frame _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameDefaultTypeInternal _Frame_default_instance_;
}  // namespace net
}  // namespace alyncoin
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_net_5fframe_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_net_5fframe_2eproto = nullptr;
const ::uint32_t
    TableStruct_net_5fframe_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.network_id_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.listen_port_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.genesis_hash_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.capabilities_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.pub_key_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.frame_rev_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.total_work_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.want_snapshot_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.snapshot_size_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.nonce_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Handshake, _impl_.observed_ip_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Ping, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Pong, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::HeightRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::HeightResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::HeightResponse, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::HeightResponse, _impl_.total_work_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::HeightProbe, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::HeightProbe, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::HeightProbe, _impl_.tip_hash_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::HeightProbe, _impl_.total_work_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::BlockBroadcast, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::BlockBroadcast, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::BlockBroadcast, _impl_.block_),
        0,
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::BlockBatch, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::BlockBatch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::BlockBatch, _impl_.chain_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::BlockRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::BlockRequest, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::BlockResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::BlockResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::BlockResponse, _impl_.block_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotMeta, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotMeta, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotMeta, _impl_.root_hash_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotMeta, _impl_.total_bytes_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotMeta, _impl_.chunk_size_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotChunk, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotChunk, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotAck, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotAck, _impl_.seq_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotEnd, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::TailBlocks, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::TailBlocks, _impl_.blocks_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::EpochProof, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::EpochProof, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Inventory, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Inventory, _impl_.hashes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::TipHashRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::TipHashResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::TipHashResponse, _impl_.hash_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::PeerListRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::PeerList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::PeerList, _impl_.peers_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::RollupBlockMsg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::RollupBlockMsg, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::SnapshotRequest, _impl_.until_hash_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::TailBlocksRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::TailBlocksRequest, _impl_.from_height_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::TailBlocksRequest, _impl_.anchor_hash_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::GetData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::GetData, _impl_.hashes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::GetHeaders, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::GetHeaders, _impl_.from_hash_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Headers, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Headers, _impl_.headers_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::StateProof, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::StateProof, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::StateProof, _impl_.proof_),
        0,
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::TransactionBroadcast, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::TransactionBroadcast, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::TransactionBroadcast, _impl_.tx_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Whisper, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Whisper, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Frame, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Frame, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::alyncoin::net::Frame, _impl_.kind_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::alyncoin::net::Handshake)},
        {22, -1, -1, sizeof(::alyncoin::net::Ping)},
        {30, -1, -1, sizeof(::alyncoin::net::Pong)},
        {38, -1, -1, sizeof(::alyncoin::net::HeightRequest)},
        {46, -1, -1, sizeof(::alyncoin::net::HeightResponse)},
        {56, -1, -1, sizeof(::alyncoin::net::HeightProbe)},
        {67, 76, -1, sizeof(::alyncoin::net::BlockBroadcast)},
        {77, 86, -1, sizeof(::alyncoin::net::BlockBatch)},
        {87, -1, -1, sizeof(::alyncoin::net::BlockRequest)},
        {96, 105, -1, sizeof(::alyncoin::net::BlockResponse)},
        {106, -1, -1, sizeof(::alyncoin::net::SnapshotMeta)},
        {118, -1, -1, sizeof(::alyncoin::net::SnapshotChunk)},
        {127, -1, -1, sizeof(::alyncoin::net::SnapshotAck)},
        {136, -1, -1, sizeof(::alyncoin::net::SnapshotEnd)},
        {144, -1, -1, sizeof(::alyncoin::net::TailBlocks)},
        {153, -1, -1, sizeof(::alyncoin::net::EpochProof)},
        {162, -1, -1, sizeof(::alyncoin::net::Inventory)},
        {171, -1, -1, sizeof(::alyncoin::net::TipHashRequest)},
        {179, -1, -1, sizeof(::alyncoin::net::TipHashResponse)},
        {188, -1, -1, sizeof(::alyncoin::net::PeerListRequest)},
        {196, -1, -1, sizeof(::alyncoin::net::PeerList)},
        {205, -1, -1, sizeof(::alyncoin::net::RollupBlockMsg)},
        {214, -1, -1, sizeof(::alyncoin::net::SnapshotRequest)},
        {223, -1, -1, sizeof(::alyncoin::net::TailBlocksRequest)},
        {233, -1, -1, sizeof(::alyncoin::net::GetData)},
        {242, -1, -1, sizeof(::alyncoin::net::GetHeaders)},
        {251, -1, -1, sizeof(::alyncoin::net::Headers)},
        {260, 269, -1, sizeof(::alyncoin::net::StateProof)},
        {270, 279, -1, sizeof(::alyncoin::net::TransactionBroadcast)},
        {280, -1, -1, sizeof(::alyncoin::net::Whisper)},
        {289, -1, -1, sizeof(::alyncoin::net::Frame)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::alyncoin::net::_Handshake_default_instance_._instance,
    &::alyncoin::net::_Ping_default_instance_._instance,
    &::alyncoin::net::_Pong_default_instance_._instance,
    &::alyncoin::net::_HeightRequest_default_instance_._instance,
    &::alyncoin::net::_HeightResponse_default_instance_._instance,
    &::alyncoin::net::_HeightProbe_default_instance_._instance,
    &::alyncoin::net::_BlockBroadcast_default_instance_._instance,
    &::alyncoin::net::_BlockBatch_default_instance_._instance,
    &::alyncoin::net::_BlockRequest_default_instance_._instance,
    &::alyncoin::net::_BlockResponse_default_instance_._instance,
    &::alyncoin::net::_SnapshotMeta_default_instance_._instance,
    &::alyncoin::net::_SnapshotChunk_default_instance_._instance,
    &::alyncoin::net::_SnapshotAck_default_instance_._instance,
    &::alyncoin::net::_SnapshotEnd_default_instance_._instance,
    &::alyncoin::net::_TailBlocks_default_instance_._instance,
    &::alyncoin::net::_EpochProof_default_instance_._instance,
    &::alyncoin::net::_Inventory_default_instance_._instance,
    &::alyncoin::net::_TipHashRequest_default_instance_._instance,
    &::alyncoin::net::_TipHashResponse_default_instance_._instance,
    &::alyncoin::net::_PeerListRequest_default_instance_._instance,
    &::alyncoin::net::_PeerList_default_instance_._instance,
    &::alyncoin::net::_RollupBlockMsg_default_instance_._instance,
    &::alyncoin::net::_SnapshotRequest_default_instance_._instance,
    &::alyncoin::net::_TailBlocksRequest_default_instance_._instance,
    &::alyncoin::net::_GetData_default_instance_._instance,
    &::alyncoin::net::_GetHeaders_default_instance_._instance,
    &::alyncoin::net::_Headers_default_instance_._instance,
    &::alyncoin::net::_StateProof_default_instance_._instance,
    &::alyncoin::net::_TransactionBroadcast_default_instance_._instance,
    &::alyncoin::net::_Whisper_default_instance_._instance,
    &::alyncoin::net::_Frame_default_instance_._instance,
};
const char descriptor_table_protodef_net_5fframe_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017net_frame.proto\022\014alyncoin.net\032\022block_p"
    "rotos.proto\032\027blockchain_protos.proto\032\021sy"
    "nc_protos.proto\032\030transaction_protos.prot"
    "o\"\234\002\n\tHandshake\022\017\n\007version\030\001 \001(\t\022\022\n\nnetw"
    "ork_id\030\002 \001(\t\022\016\n\006height\030\003 \001(\004\022\023\n\013listen_p"
    "ort\030\004 \001(\r\022\024\n\014genesis_hash\030\005 \001(\014\022\024\n\014capab"
    "ilities\030\006 \003(\t\022\017\n\007pub_key\030\007 \001(\014\022\021\n\tframe_"
    "rev\030\010 \001(\r\022\022\n\ntotal_work\030\t \001(\004\022\025\n\rwant_sn"
    "apshot\030\n \001(\010\022\025\n\rsnapshot_size\030\013 \001(\r\022\017\n\007n"
    "ode_id\030\014 \001(\t\022\r\n\005nonce\030\r \001(\004\022\023\n\013observed_"
    "ip\030\016 \001(\t\"\006\n\004Ping\"\006\n\004Pong\"\017\n\rHeightReques"
    "t\"4\n\016HeightResponse\022\016\n\006height\030\001 \001(\004\022\022\n\nt"
    "otal_work\030\002 \001(\004\"C\n\013HeightProbe\022\016\n\006height"
    "\030\001 \001(\r\022\020\n\010tip_hash\030\002 \001(\014\022\022\n\ntotal_work\030\003"
    " \001(\004\"5\n\016BlockBroadcast\022#\n\005block\030\001 \001(\0132\024."
    "alyncoin.BlockProto\"6\n\nBlockBatch\022(\n\005cha"
    "in\030\001 \001(\0132\031.alyncoin.BlockchainProto\"\035\n\014B"
    "lockRequest\022\r\n\005index\030\001 \001(\004\"4\n\rBlockRespo"
    "nse\022#\n\005block\030\001 \001(\0132\024.alyncoin.BlockProto"
    "\"Z\n\014SnapshotMeta\022\016\n\006height\030\001 \001(\004\022\021\n\troot"
    "_hash\030\002 \001(\t\022\023\n\013total_bytes\030\003 \001(\004\022\022\n\nchun"
    "k_size\030\004 \001(\r\"\035\n\rSnapshotChunk\022\014\n\004data\030\001 "
    "\001(\014\"\032\n\013SnapshotAck\022\013\n\003seq\030\001 \001(\r\"\r\n\013Snaps"
    "hotEnd\"2\n\nTailBlocks\022$\n\006blocks\030\001 \003(\0132\024.a"
    "lyncoin.BlockProto\"\032\n\nEpochProof\022\014\n\004data"
    "\030\001 \001(\014\"\033\n\tInventory\022\016\n\006hashes\030\001 \003(\t\"\020\n\016T"
    "ipHashRequest\"\037\n\017TipHashResponse\022\014\n\004hash"
    "\030\001 \001(\t\"\021\n\017PeerListRequest\"\031\n\010PeerList\022\r\n"
    "\005peers\030\001 \003(\t\"\036\n\016RollupBlockMsg\022\014\n\004data\030\001"
    " \001(\014\"%\n\017SnapshotRequest\022\022\n\nuntil_hash\030\001 "
    "\001(\t\"=\n\021TailBlocksRequest\022\023\n\013from_height\030"
    "\001 \001(\004\022\023\n\013anchor_hash\030\002 \001(\t\"\031\n\007GetData\022\016\n"
    "\006hashes\030\001 \003(\t\"\037\n\nGetHeaders\022\021\n\tfrom_hash"
    "\030\001 \001(\t\"0\n\007Headers\022%\n\007headers\030\001 \003(\0132\024.aly"
    "ncoin.BlockProto\"6\n\nStateProof\022(\n\005proof\030"
    "\001 \001(\0132\031.alyncoin.StateProofProto\">\n\024Tran"
    "sactionBroadcast\022&\n\002tx\030\001 \001(\0132\032.alyncoin."
    "TransactionProto\"\027\n\007Whisper\022\014\n\004data\030\001 \001("
    "\014\"\242\014\n\005Frame\022,\n\thandshake\030\001 \001(\0132\027.alyncoi"
    "n.net.HandshakeH\000\022\"\n\004ping\030\002 \001(\0132\022.alynco"
    "in.net.PingH\000\022\"\n\004pong\030\003 \001(\0132\022.alyncoin.n"
    "et.PongH\000\0221\n\nheight_req\030\004 \001(\0132\033.alyncoin"
    ".net.HeightRequestH\000\0222\n\nheight_res\030\005 \001(\013"
    "2\034.alyncoin.net.HeightResponseH\000\0221\n\014heig"
    "ht_probe\030\037 \001(\0132\031.alyncoin.net.HeightProb"
    "eH\000\0227\n\017block_broadcast\030\006 \001(\0132\034.alyncoin."
    "net.BlockBroadcastH\000\022/\n\013block_batch\030\007 \001("
    "\0132\030.alyncoin.net.BlockBatchH\000\0223\n\rblock_r"
    "equest\030\035 \001(\0132\032.alyncoin.net.BlockRequest"
    "H\000\0225\n\016block_response\030\036 \001(\0132\033.alyncoin.ne"
    "t.BlockResponseH\000\0223\n\rsnapshot_meta\030\010 \001(\013"
    "2\032.alyncoin.net.SnapshotMetaH\000\0225\n\016snapsh"
    "ot_chunk\030\t \001(\0132\033.alyncoin.net.SnapshotCh"
    "unkH\000\0221\n\014snapshot_ack\030\n \001(\0132\031.alyncoin.n"
    "et.SnapshotAckH\000\0221\n\014snapshot_end\030\013 \001(\0132\031"
    ".alyncoin.net.SnapshotEndH\000\022/\n\013tail_bloc"
    "ks\030\014 \001(\0132\030.alyncoin.net.TailBlocksH\000\022-\n\t"
    "agg_proof\030\r \001(\0132\030.alyncoin.net.EpochProo"
    "fH\000\022&\n\003inv\030\016 \001(\0132\027.alyncoin.net.Inventor"
    "yH\000\0224\n\014tip_hash_req\030\017 \001(\0132\034.alyncoin.net"
    ".TipHashRequestH\000\0225\n\014tip_hash_res\030\020 \001(\0132"
    "\035.alyncoin.net.TipHashResponseH\000\0226\n\rpeer"
    "_list_req\030\021 \001(\0132\035.alyncoin.net.PeerListR"
    "equestH\000\022+\n\tpeer_list\030\022 \001(\0132\026.alyncoin.n"
    "et.PeerListH\000\0224\n\014rollup_block\030\023 \001(\0132\034.al"
    "yncoin.net.RollupBlockMsgH\000\0225\n\014snapshot_"
    "req\030\024 \001(\0132\035.alyncoin.net.SnapshotRequest"
    "H\000\0223\n\010tail_req\030\025 \001(\0132\037.alyncoin.net.Tail"
    "BlocksRequestH\000\022/\n\013state_proof\030\026 \001(\0132\030.a"
    "lyncoin.net.StateProofH\000\022)\n\010get_data\030\027 \001"
    "(\0132\025.alyncoin.net.GetDataH\000\022@\n\027blockchai"
    "n_sync_request\030\030 \001(\0132\035.alyncoin.Blockcha"
    "inSyncProtoH\000\022:\n\014tx_broadcast\030\031 \001(\0132\".al"
    "yncoin.net.TransactionBroadcastH\000\022(\n\007whi"
    "sper\030\032 \001(\0132\025.alyncoin.net.WhisperH\000\022/\n\013g"
    "et_headers\030\033 \001(\0132\030.alyncoin.net.GetHeade"
    "rsH\000\022(\n\007headers\030\034 \001(\0132\025.alyncoin.net.Hea"
    "dersH\000B\006\n\004kindb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_net_5fframe_2eproto_deps[4] =
    {
        &::descriptor_table_block_5fprotos_2eproto,
        &::descriptor_table_blockchain_5fprotos_2eproto,
        &::descriptor_table_sync_5fprotos_2eproto,
        &::descriptor_table_transaction_5fprotos_2eproto,
};
static ::absl::once_flag descriptor_table_net_5fframe_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_net_5fframe_2eproto = {
    false,
    false,
    3102,
    descriptor_table_protodef_net_5fframe_2eproto,
    "net_frame.proto",
    &descriptor_table_net_5fframe_2eproto_once,
    descriptor_table_net_5fframe_2eproto_deps,
    4,
    31,
    schemas,
    file_default_instances,
    TableStruct_net_5fframe_2eproto::offsets,
    file_level_enum_descriptors_net_5fframe_2eproto,
    file_level_service_descriptors_net_5fframe_2eproto,
};
namespace alyncoin {
namespace net {
// ===================================================================

class Handshake::_Internal {
 public:
};

Handshake::Handshake(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.Handshake)
}
inline PROTOBUF_NDEBUG_INLINE Handshake::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::Handshake& from_msg)
      : capabilities_{visibility, arena, from.capabilities_},
        version_(arena, from.version_),
        network_id_(arena, from.network_id_),
        genesis_hash_(arena, from.genesis_hash_),
        pub_key_(arena, from.pub_key_),
        node_id_(arena, from.node_id_),
        observed_ip_(arena, from.observed_ip_),
        _cached_size_{0} {}

Handshake::Handshake(
    ::google::protobuf::Arena* arena,
    const Handshake& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Handshake* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, nonce_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::nonce_));

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.Handshake)
}
inline PROTOBUF_NDEBUG_INLINE Handshake::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : capabilities_{visibility, arena},
        version_(arena),
        network_id_(arena),
        genesis_hash_(arena),
        pub_key_(arena),
        node_id_(arena),
        observed_ip_(arena),
        _cached_size_{0} {}

inline void Handshake::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, nonce_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::nonce_));
}
Handshake::~Handshake() {
  // @@protoc_insertion_point(destructor:alyncoin.net.Handshake)
  SharedDtor(*this);
}
inline void Handshake::SharedDtor(MessageLite& self) {
  Handshake& this_ = static_cast<Handshake&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.version_.Destroy();
  this_._impl_.network_id_.Destroy();
  this_._impl_.genesis_hash_.Destroy();
  this_._impl_.pub_key_.Destroy();
  this_._impl_.node_id_.Destroy();
  this_._impl_.observed_ip_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Handshake::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Handshake(arena);
}
constexpr auto Handshake::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Handshake, _impl_.capabilities_) +
          decltype(Handshake::_impl_.capabilities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Handshake), alignof(Handshake), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Handshake::PlacementNew_,
                                 sizeof(Handshake),
                                 alignof(Handshake));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Handshake::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Handshake_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Handshake::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Handshake>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Handshake::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Handshake>(), &Handshake::ByteSizeLong,
            &Handshake::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Handshake, _impl_._cached_size_),
        false,
    },
    &Handshake::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Handshake::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 86, 2> Handshake::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::Handshake>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string version = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.version_)}},
    // string network_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.network_id_)}},
    // uint64 height = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Handshake, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.height_)}},
    // uint32 listen_port = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Handshake, _impl_.listen_port_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.listen_port_)}},
    // bytes genesis_hash = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.genesis_hash_)}},
    // repeated string capabilities = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.capabilities_)}},
    // bytes pub_key = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.pub_key_)}},
    // uint32 frame_rev = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Handshake, _impl_.frame_rev_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.frame_rev_)}},
    // uint64 total_work = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Handshake, _impl_.total_work_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.total_work_)}},
    // bool want_snapshot = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Handshake, _impl_.want_snapshot_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.want_snapshot_)}},
    // uint32 snapshot_size = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Handshake, _impl_.snapshot_size_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.snapshot_size_)}},
    // string node_id = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.node_id_)}},
    // uint64 nonce = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Handshake, _impl_.nonce_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.nonce_)}},
    // string observed_ip = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Handshake, _impl_.observed_ip_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string version = 1;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string network_id = 2;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.network_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 height = 3;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 listen_port = 4;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.listen_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes genesis_hash = 5;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.genesis_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated string capabilities = 6;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.capabilities_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bytes pub_key = 7;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.pub_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 frame_rev = 8;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.frame_rev_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 total_work = 9;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.total_work_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool want_snapshot = 10;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.want_snapshot_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 snapshot_size = 11;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.snapshot_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string node_id = 12;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 nonce = 13;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.nonce_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string observed_ip = 14;
    {PROTOBUF_FIELD_OFFSET(Handshake, _impl_.observed_ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\7\12\0\0\0\14\0\0\0\0\0\7\0\13\0"
    "alyncoin.net.Handshake"
    "version"
    "network_id"
    "capabilities"
    "node_id"
    "observed_ip"
  }},
};

PROTOBUF_NOINLINE void Handshake::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.Handshake)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capabilities_.Clear();
  _impl_.version_.ClearToEmpty();
  _impl_.network_id_.ClearToEmpty();
  _impl_.genesis_hash_.ClearToEmpty();
  _impl_.pub_key_.ClearToEmpty();
  _impl_.node_id_.ClearToEmpty();
  _impl_.observed_ip_.ClearToEmpty();
  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.nonce_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.nonce_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Handshake::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Handshake& this_ = static_cast<const Handshake&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Handshake::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Handshake& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.Handshake)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string version = 1;
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.Handshake.version");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string network_id = 2;
          if (!this_._internal_network_id().empty()) {
            const std::string& _s = this_._internal_network_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.Handshake.network_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 height = 3;
          if (this_._internal_height() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_height(), target);
          }

          // uint32 listen_port = 4;
          if (this_._internal_listen_port() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_listen_port(), target);
          }

          // bytes genesis_hash = 5;
          if (!this_._internal_genesis_hash().empty()) {
            const std::string& _s = this_._internal_genesis_hash();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          // repeated string capabilities = 6;
          for (int i = 0, n = this_._internal_capabilities_size(); i < n; ++i) {
            const auto& s = this_._internal_capabilities().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.Handshake.capabilities");
            target = stream->WriteString(6, s, target);
          }

          // bytes pub_key = 7;
          if (!this_._internal_pub_key().empty()) {
            const std::string& _s = this_._internal_pub_key();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          // uint32 frame_rev = 8;
          if (this_._internal_frame_rev() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_frame_rev(), target);
          }

          // uint64 total_work = 9;
          if (this_._internal_total_work() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                9, this_._internal_total_work(), target);
          }

          // bool want_snapshot = 10;
          if (this_._internal_want_snapshot() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_want_snapshot(), target);
          }

          // uint32 snapshot_size = 11;
          if (this_._internal_snapshot_size() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                11, this_._internal_snapshot_size(), target);
          }

          // string node_id = 12;
          if (!this_._internal_node_id().empty()) {
            const std::string& _s = this_._internal_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.Handshake.node_id");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // uint64 nonce = 13;
          if (this_._internal_nonce() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                13, this_._internal_nonce(), target);
          }

          // string observed_ip = 14;
          if (!this_._internal_observed_ip().empty()) {
            const std::string& _s = this_._internal_observed_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.Handshake.observed_ip");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.Handshake)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Handshake::ByteSizeLong(const MessageLite& base) {
          const Handshake& this_ = static_cast<const Handshake&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Handshake::ByteSizeLong() const {
          const Handshake& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.Handshake)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string capabilities = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_capabilities().size());
              for (int i = 0, n = this_._internal_capabilities().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_capabilities().Get(i));
              }
            }
          }
           {
            // string version = 1;
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // string network_id = 2;
            if (!this_._internal_network_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_network_id());
            }
            // bytes genesis_hash = 5;
            if (!this_._internal_genesis_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_genesis_hash());
            }
            // bytes pub_key = 7;
            if (!this_._internal_pub_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_pub_key());
            }
            // string node_id = 12;
            if (!this_._internal_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node_id());
            }
            // string observed_ip = 14;
            if (!this_._internal_observed_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_observed_ip());
            }
            // uint64 height = 3;
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_height());
            }
            // uint32 listen_port = 4;
            if (this_._internal_listen_port() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_listen_port());
            }
            // uint32 frame_rev = 8;
            if (this_._internal_frame_rev() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_frame_rev());
            }
            // uint64 total_work = 9;
            if (this_._internal_total_work() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_total_work());
            }
            // bool want_snapshot = 10;
            if (this_._internal_want_snapshot() != 0) {
              total_size += 2;
            }
            // uint32 snapshot_size = 11;
            if (this_._internal_snapshot_size() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_snapshot_size());
            }
            // uint64 nonce = 13;
            if (this_._internal_nonce() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_nonce());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Handshake::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Handshake*>(&to_msg);
  auto& from = static_cast<const Handshake&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.Handshake)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_capabilities()->MergeFrom(from._internal_capabilities());
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_network_id().empty()) {
    _this->_internal_set_network_id(from._internal_network_id());
  }
  if (!from._internal_genesis_hash().empty()) {
    _this->_internal_set_genesis_hash(from._internal_genesis_hash());
  }
  if (!from._internal_pub_key().empty()) {
    _this->_internal_set_pub_key(from._internal_pub_key());
  }
  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  if (!from._internal_observed_ip().empty()) {
    _this->_internal_set_observed_ip(from._internal_observed_ip());
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_listen_port() != 0) {
    _this->_impl_.listen_port_ = from._impl_.listen_port_;
  }
  if (from._internal_frame_rev() != 0) {
    _this->_impl_.frame_rev_ = from._impl_.frame_rev_;
  }
  if (from._internal_total_work() != 0) {
    _this->_impl_.total_work_ = from._impl_.total_work_;
  }
  if (from._internal_want_snapshot() != 0) {
    _this->_impl_.want_snapshot_ = from._impl_.want_snapshot_;
  }
  if (from._internal_snapshot_size() != 0) {
    _this->_impl_.snapshot_size_ = from._impl_.snapshot_size_;
  }
  if (from._internal_nonce() != 0) {
    _this->_impl_.nonce_ = from._impl_.nonce_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Handshake::CopyFrom(const Handshake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.Handshake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Handshake::InternalSwap(Handshake* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.capabilities_.InternalSwap(&other->_impl_.capabilities_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.network_id_, &other->_impl_.network_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.genesis_hash_, &other->_impl_.genesis_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pub_key_, &other->_impl_.pub_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.observed_ip_, &other->_impl_.observed_ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Handshake, _impl_.nonce_)
      + sizeof(Handshake::_impl_.nonce_)
      - PROTOBUF_FIELD_OFFSET(Handshake, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata Handshake::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Ping::_Internal {
 public:
};

Ping::Ping(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.Ping)
}
Ping::Ping(
    ::google::protobuf::Arena* arena,
    const Ping& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Ping* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.Ping)
}

inline void* Ping::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Ping(arena);
}
constexpr auto Ping::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Ping),
                                            alignof(Ping));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Ping::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Ping_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Ping::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Ping>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Ping::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Ping>(), &Ping::ByteSizeLong,
            &Ping::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Ping, _impl_._cached_size_),
        false,
    },
    &Ping::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Ping::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Ping::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::Ping>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Ping::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Pong::_Internal {
 public:
};

Pong::Pong(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.Pong)
}
Pong::Pong(
    ::google::protobuf::Arena* arena,
    const Pong& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Pong* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.Pong)
}

inline void* Pong::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Pong(arena);
}
constexpr auto Pong::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Pong),
                                            alignof(Pong));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Pong::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Pong_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Pong::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Pong>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Pong::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Pong>(), &Pong::ByteSizeLong,
            &Pong::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Pong, _impl_._cached_size_),
        false,
    },
    &Pong::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Pong::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Pong::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::Pong>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Pong::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeightRequest::_Internal {
 public:
};

HeightRequest::HeightRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.HeightRequest)
}
HeightRequest::HeightRequest(
    ::google::protobuf::Arena* arena,
    const HeightRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeightRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.HeightRequest)
}

inline void* HeightRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HeightRequest(arena);
}
constexpr auto HeightRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HeightRequest),
                                            alignof(HeightRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HeightRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HeightRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HeightRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<HeightRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HeightRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<HeightRequest>(), &HeightRequest::ByteSizeLong,
            &HeightRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HeightRequest, _impl_._cached_size_),
        false,
    },
    &HeightRequest::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HeightRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> HeightRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::HeightRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata HeightRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeightResponse::_Internal {
 public:
};

HeightResponse::HeightResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.HeightResponse)
}
HeightResponse::HeightResponse(
    ::google::protobuf::Arena* arena, const HeightResponse& from)
    : HeightResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE HeightResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HeightResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, total_work_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::total_work_));
}
HeightResponse::~HeightResponse() {
  // @@protoc_insertion_point(destructor:alyncoin.net.HeightResponse)
  SharedDtor(*this);
}
inline void HeightResponse::SharedDtor(MessageLite& self) {
  HeightResponse& this_ = static_cast<HeightResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HeightResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HeightResponse(arena);
}
constexpr auto HeightResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HeightResponse),
                                            alignof(HeightResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HeightResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HeightResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HeightResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HeightResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HeightResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HeightResponse>(), &HeightResponse::ByteSizeLong,
            &HeightResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HeightResponse, _impl_._cached_size_),
        false,
    },
    &HeightResponse::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HeightResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> HeightResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::HeightResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 total_work = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HeightResponse, _impl_.total_work_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HeightResponse, _impl_.total_work_)}},
    // uint64 height = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HeightResponse, _impl_.height_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HeightResponse, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 height = 1;
    {PROTOBUF_FIELD_OFFSET(HeightResponse, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 total_work = 2;
    {PROTOBUF_FIELD_OFFSET(HeightResponse, _impl_.total_work_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HeightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.HeightResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_work_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.total_work_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeightResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeightResponse& this_ = static_cast<const HeightResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeightResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeightResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.HeightResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 height = 1;
          if (this_._internal_height() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_height(), target);
          }

          // uint64 total_work = 2;
          if (this_._internal_total_work() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_total_work(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.HeightResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeightResponse::ByteSizeLong(const MessageLite& base) {
          const HeightResponse& this_ = static_cast<const HeightResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeightResponse::ByteSizeLong() const {
          const HeightResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.HeightResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 height = 1;
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_height());
            }
            // uint64 total_work = 2;
            if (this_._internal_total_work() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_total_work());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeightResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeightResponse*>(&to_msg);
  auto& from = static_cast<const HeightResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.HeightResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_total_work() != 0) {
    _this->_impl_.total_work_ = from._impl_.total_work_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeightResponse::CopyFrom(const HeightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.HeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeightResponse::InternalSwap(HeightResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HeightResponse, _impl_.total_work_)
      + sizeof(HeightResponse::_impl_.total_work_)
      - PROTOBUF_FIELD_OFFSET(HeightResponse, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata HeightResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeightProbe::_Internal {
 public:
};

HeightProbe::HeightProbe(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.HeightProbe)
}
inline PROTOBUF_NDEBUG_INLINE HeightProbe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::HeightProbe& from_msg)
      : tip_hash_(arena, from.tip_hash_),
        _cached_size_{0} {}

HeightProbe::HeightProbe(
    ::google::protobuf::Arena* arena,
    const HeightProbe& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeightProbe* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_work_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_work_),
           offsetof(Impl_, height_) -
               offsetof(Impl_, total_work_) +
               sizeof(Impl_::height_));

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.HeightProbe)
}
inline PROTOBUF_NDEBUG_INLINE HeightProbe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tip_hash_(arena),
        _cached_size_{0} {}

inline void HeightProbe::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_work_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, total_work_) +
               sizeof(Impl_::height_));
}
HeightProbe::~HeightProbe() {
  // @@protoc_insertion_point(destructor:alyncoin.net.HeightProbe)
  SharedDtor(*this);
}
inline void HeightProbe::SharedDtor(MessageLite& self) {
  HeightProbe& this_ = static_cast<HeightProbe&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tip_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HeightProbe::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HeightProbe(arena);
}
constexpr auto HeightProbe::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HeightProbe),
                                            alignof(HeightProbe));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HeightProbe::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HeightProbe_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HeightProbe::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HeightProbe>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HeightProbe::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HeightProbe>(), &HeightProbe::ByteSizeLong,
            &HeightProbe::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HeightProbe, _impl_._cached_size_),
        false,
    },
    &HeightProbe::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HeightProbe::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> HeightProbe::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::HeightProbe>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 height = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HeightProbe, _impl_.height_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HeightProbe, _impl_.height_)}},
    // bytes tip_hash = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HeightProbe, _impl_.tip_hash_)}},
    // uint64 total_work = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HeightProbe, _impl_.total_work_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HeightProbe, _impl_.total_work_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 height = 1;
    {PROTOBUF_FIELD_OFFSET(HeightProbe, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes tip_hash = 2;
    {PROTOBUF_FIELD_OFFSET(HeightProbe, _impl_.tip_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 total_work = 3;
    {PROTOBUF_FIELD_OFFSET(HeightProbe, _impl_.total_work_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HeightProbe::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.HeightProbe)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tip_hash_.ClearToEmpty();
  ::memset(&_impl_.total_work_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.total_work_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeightProbe::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeightProbe& this_ = static_cast<const HeightProbe&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeightProbe::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeightProbe& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.HeightProbe)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 height = 1;
          if (this_._internal_height() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_height(), target);
          }

          // bytes tip_hash = 2;
          if (!this_._internal_tip_hash().empty()) {
            const std::string& _s = this_._internal_tip_hash();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // uint64 total_work = 3;
          if (this_._internal_total_work() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_total_work(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.HeightProbe)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeightProbe::ByteSizeLong(const MessageLite& base) {
          const HeightProbe& this_ = static_cast<const HeightProbe&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeightProbe::ByteSizeLong() const {
          const HeightProbe& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.HeightProbe)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes tip_hash = 2;
            if (!this_._internal_tip_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_tip_hash());
            }
            // uint64 total_work = 3;
            if (this_._internal_total_work() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_total_work());
            }
            // uint32 height = 1;
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeightProbe::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeightProbe*>(&to_msg);
  auto& from = static_cast<const HeightProbe&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.HeightProbe)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tip_hash().empty()) {
    _this->_internal_set_tip_hash(from._internal_tip_hash());
  }
  if (from._internal_total_work() != 0) {
    _this->_impl_.total_work_ = from._impl_.total_work_;
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeightProbe::CopyFrom(const HeightProbe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.HeightProbe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeightProbe::InternalSwap(HeightProbe* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tip_hash_, &other->_impl_.tip_hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HeightProbe, _impl_.height_)
      + sizeof(HeightProbe::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(HeightProbe, _impl_.total_work_)>(
          reinterpret_cast<char*>(&_impl_.total_work_),
          reinterpret_cast<char*>(&other->_impl_.total_work_));
}

::google::protobuf::Metadata HeightProbe::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockBroadcast::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlockBroadcast>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlockBroadcast, _impl_._has_bits_);
};

void BlockBroadcast::clear_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_ != nullptr) _impl_.block_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BlockBroadcast::BlockBroadcast(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.BlockBroadcast)
}
inline PROTOBUF_NDEBUG_INLINE BlockBroadcast::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::BlockBroadcast& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BlockBroadcast::BlockBroadcast(
    ::google::protobuf::Arena* arena,
    const BlockBroadcast& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlockBroadcast* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.block_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::alyncoin::BlockProto>(
                              arena, *from._impl_.block_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.BlockBroadcast)
}
inline PROTOBUF_NDEBUG_INLINE BlockBroadcast::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlockBroadcast::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.block_ = {};
}
BlockBroadcast::~BlockBroadcast() {
  // @@protoc_insertion_point(destructor:alyncoin.net.BlockBroadcast)
  SharedDtor(*this);
}
inline void BlockBroadcast::SharedDtor(MessageLite& self) {
  BlockBroadcast& this_ = static_cast<BlockBroadcast&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.block_;
  this_._impl_.~Impl_();
}

inline void* BlockBroadcast::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlockBroadcast(arena);
}
constexpr auto BlockBroadcast::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlockBroadcast),
                                            alignof(BlockBroadcast));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlockBroadcast::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlockBroadcast_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlockBroadcast::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlockBroadcast>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlockBroadcast::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlockBroadcast>(), &BlockBroadcast::ByteSizeLong,
            &BlockBroadcast::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlockBroadcast, _impl_._cached_size_),
        false,
    },
    &BlockBroadcast::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlockBroadcast::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BlockBroadcast::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlockBroadcast, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::BlockBroadcast>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .alyncoin.BlockProto block = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BlockBroadcast, _impl_.block_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .alyncoin.BlockProto block = 1;
    {PROTOBUF_FIELD_OFFSET(BlockBroadcast, _impl_.block_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::alyncoin::BlockProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlockBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.BlockBroadcast)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.block_ != nullptr);
    _impl_.block_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlockBroadcast::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlockBroadcast& this_ = static_cast<const BlockBroadcast&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlockBroadcast::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlockBroadcast& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.BlockBroadcast)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .alyncoin.BlockProto block = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.block_, this_._impl_.block_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.BlockBroadcast)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlockBroadcast::ByteSizeLong(const MessageLite& base) {
          const BlockBroadcast& this_ = static_cast<const BlockBroadcast&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlockBroadcast::ByteSizeLong() const {
          const BlockBroadcast& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.BlockBroadcast)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .alyncoin.BlockProto block = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.block_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlockBroadcast::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockBroadcast*>(&to_msg);
  auto& from = static_cast<const BlockBroadcast&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.BlockBroadcast)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.block_ != nullptr);
    if (_this->_impl_.block_ == nullptr) {
      _this->_impl_.block_ =
          ::google::protobuf::Message::CopyConstruct<::alyncoin::BlockProto>(arena, *from._impl_.block_);
    } else {
      _this->_impl_.block_->MergeFrom(*from._impl_.block_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockBroadcast::CopyFrom(const BlockBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.BlockBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockBroadcast::InternalSwap(BlockBroadcast* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.block_, other->_impl_.block_);
}

::google::protobuf::Metadata BlockBroadcast::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockBatch::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlockBatch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlockBatch, _impl_._has_bits_);
};

void BlockBatch::clear_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chain_ != nullptr) _impl_.chain_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BlockBatch::BlockBatch(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.BlockBatch)
}
inline PROTOBUF_NDEBUG_INLINE BlockBatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::BlockBatch& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BlockBatch::BlockBatch(
    ::google::protobuf::Arena* arena,
    const BlockBatch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlockBatch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.chain_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::alyncoin::BlockchainProto>(
                              arena, *from._impl_.chain_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.BlockBatch)
}
inline PROTOBUF_NDEBUG_INLINE BlockBatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlockBatch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.chain_ = {};
}
BlockBatch::~BlockBatch() {
  // @@protoc_insertion_point(destructor:alyncoin.net.BlockBatch)
  SharedDtor(*this);
}
inline void BlockBatch::SharedDtor(MessageLite& self) {
  BlockBatch& this_ = static_cast<BlockBatch&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.chain_;
  this_._impl_.~Impl_();
}

inline void* BlockBatch::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlockBatch(arena);
}
constexpr auto BlockBatch::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlockBatch),
                                            alignof(BlockBatch));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlockBatch::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlockBatch_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlockBatch::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlockBatch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlockBatch::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlockBatch>(), &BlockBatch::ByteSizeLong,
            &BlockBatch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlockBatch, _impl_._cached_size_),
        false,
    },
    &BlockBatch::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlockBatch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BlockBatch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlockBatch, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::BlockBatch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .alyncoin.BlockchainProto chain = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BlockBatch, _impl_.chain_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .alyncoin.BlockchainProto chain = 1;
    {PROTOBUF_FIELD_OFFSET(BlockBatch, _impl_.chain_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::alyncoin::BlockchainProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlockBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.BlockBatch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.chain_ != nullptr);
    _impl_.chain_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlockBatch::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlockBatch& this_ = static_cast<const BlockBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlockBatch::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlockBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.BlockBatch)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .alyncoin.BlockchainProto chain = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.chain_, this_._impl_.chain_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.BlockBatch)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlockBatch::ByteSizeLong(const MessageLite& base) {
          const BlockBatch& this_ = static_cast<const BlockBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlockBatch::ByteSizeLong() const {
          const BlockBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.BlockBatch)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .alyncoin.BlockchainProto chain = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.chain_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlockBatch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockBatch*>(&to_msg);
  auto& from = static_cast<const BlockBatch&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.BlockBatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.chain_ != nullptr);
    if (_this->_impl_.chain_ == nullptr) {
      _this->_impl_.chain_ =
          ::google::protobuf::Message::CopyConstruct<::alyncoin::BlockchainProto>(arena, *from._impl_.chain_);
    } else {
      _this->_impl_.chain_->MergeFrom(*from._impl_.chain_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockBatch::CopyFrom(const BlockBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.BlockBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockBatch::InternalSwap(BlockBatch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.chain_, other->_impl_.chain_);
}

::google::protobuf::Metadata BlockBatch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockRequest::_Internal {
 public:
};

BlockRequest::BlockRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.BlockRequest)
}
BlockRequest::BlockRequest(
    ::google::protobuf::Arena* arena, const BlockRequest& from)
    : BlockRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BlockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlockRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
BlockRequest::~BlockRequest() {
  // @@protoc_insertion_point(destructor:alyncoin.net.BlockRequest)
  SharedDtor(*this);
}
inline void BlockRequest::SharedDtor(MessageLite& self) {
  BlockRequest& this_ = static_cast<BlockRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlockRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlockRequest(arena);
}
constexpr auto BlockRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlockRequest),
                                            alignof(BlockRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlockRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlockRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlockRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlockRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlockRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlockRequest>(), &BlockRequest::ByteSizeLong,
            &BlockRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlockRequest, _impl_._cached_size_),
        false,
    },
    &BlockRequest::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlockRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BlockRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::BlockRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockRequest, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlockRequest, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 index = 1;
    {PROTOBUF_FIELD_OFFSET(BlockRequest, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.BlockRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlockRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlockRequest& this_ = static_cast<const BlockRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlockRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlockRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.BlockRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 index = 1;
          if (this_._internal_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.BlockRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlockRequest::ByteSizeLong(const MessageLite& base) {
          const BlockRequest& this_ = static_cast<const BlockRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlockRequest::ByteSizeLong() const {
          const BlockRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.BlockRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 index = 1;
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlockRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockRequest*>(&to_msg);
  auto& from = static_cast<const BlockRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.BlockRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockRequest::CopyFrom(const BlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.BlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockRequest::InternalSwap(BlockRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata BlockRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlockResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlockResponse, _impl_._has_bits_);
};

void BlockResponse::clear_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_ != nullptr) _impl_.block_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BlockResponse::BlockResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.BlockResponse)
}
inline PROTOBUF_NDEBUG_INLINE BlockResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::BlockResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BlockResponse::BlockResponse(
    ::google::protobuf::Arena* arena,
    const BlockResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlockResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.block_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::alyncoin::BlockProto>(
                              arena, *from._impl_.block_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.BlockResponse)
}
inline PROTOBUF_NDEBUG_INLINE BlockResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlockResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.block_ = {};
}
BlockResponse::~BlockResponse() {
  // @@protoc_insertion_point(destructor:alyncoin.net.BlockResponse)
  SharedDtor(*this);
}
inline void BlockResponse::SharedDtor(MessageLite& self) {
  BlockResponse& this_ = static_cast<BlockResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.block_;
  this_._impl_.~Impl_();
}

inline void* BlockResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlockResponse(arena);
}
constexpr auto BlockResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlockResponse),
                                            alignof(BlockResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlockResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlockResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlockResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlockResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlockResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlockResponse>(), &BlockResponse::ByteSizeLong,
            &BlockResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlockResponse, _impl_._cached_size_),
        false,
    },
    &BlockResponse::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlockResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BlockResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlockResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::BlockResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .alyncoin.BlockProto block = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BlockResponse, _impl_.block_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .alyncoin.BlockProto block = 1;
    {PROTOBUF_FIELD_OFFSET(BlockResponse, _impl_.block_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::alyncoin::BlockProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.BlockResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.block_ != nullptr);
    _impl_.block_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlockResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlockResponse& this_ = static_cast<const BlockResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlockResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlockResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.BlockResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .alyncoin.BlockProto block = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.block_, this_._impl_.block_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.BlockResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlockResponse::ByteSizeLong(const MessageLite& base) {
          const BlockResponse& this_ = static_cast<const BlockResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlockResponse::ByteSizeLong() const {
          const BlockResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.BlockResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .alyncoin.BlockProto block = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.block_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlockResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockResponse*>(&to_msg);
  auto& from = static_cast<const BlockResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.BlockResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.block_ != nullptr);
    if (_this->_impl_.block_ == nullptr) {
      _this->_impl_.block_ =
          ::google::protobuf::Message::CopyConstruct<::alyncoin::BlockProto>(arena, *from._impl_.block_);
    } else {
      _this->_impl_.block_->MergeFrom(*from._impl_.block_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockResponse::CopyFrom(const BlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.BlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockResponse::InternalSwap(BlockResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.block_, other->_impl_.block_);
}

::google::protobuf::Metadata BlockResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SnapshotMeta::_Internal {
 public:
};

SnapshotMeta::SnapshotMeta(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.SnapshotMeta)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotMeta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::SnapshotMeta& from_msg)
      : root_hash_(arena, from.root_hash_),
        _cached_size_{0} {}

SnapshotMeta::SnapshotMeta(
    ::google::protobuf::Arena* arena,
    const SnapshotMeta& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SnapshotMeta* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, chunk_size_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::chunk_size_));

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.SnapshotMeta)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotMeta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : root_hash_(arena),
        _cached_size_{0} {}

inline void SnapshotMeta::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, chunk_size_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::chunk_size_));
}
SnapshotMeta::~SnapshotMeta() {
  // @@protoc_insertion_point(destructor:alyncoin.net.SnapshotMeta)
  SharedDtor(*this);
}
inline void SnapshotMeta::SharedDtor(MessageLite& self) {
  SnapshotMeta& this_ = static_cast<SnapshotMeta&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.root_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SnapshotMeta::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SnapshotMeta(arena);
}
constexpr auto SnapshotMeta::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SnapshotMeta),
                                            alignof(SnapshotMeta));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SnapshotMeta::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SnapshotMeta_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SnapshotMeta::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SnapshotMeta>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SnapshotMeta::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SnapshotMeta>(), &SnapshotMeta::ByteSizeLong,
            &SnapshotMeta::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SnapshotMeta, _impl_._cached_size_),
        false,
    },
    &SnapshotMeta::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SnapshotMeta::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 43, 2> SnapshotMeta::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::SnapshotMeta>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 chunk_size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SnapshotMeta, _impl_.chunk_size_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SnapshotMeta, _impl_.chunk_size_)}},
    // uint64 height = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SnapshotMeta, _impl_.height_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SnapshotMeta, _impl_.height_)}},
    // string root_hash = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SnapshotMeta, _impl_.root_hash_)}},
    // uint64 total_bytes = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SnapshotMeta, _impl_.total_bytes_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SnapshotMeta, _impl_.total_bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 height = 1;
    {PROTOBUF_FIELD_OFFSET(SnapshotMeta, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string root_hash = 2;
    {PROTOBUF_FIELD_OFFSET(SnapshotMeta, _impl_.root_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 total_bytes = 3;
    {PROTOBUF_FIELD_OFFSET(SnapshotMeta, _impl_.total_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 chunk_size = 4;
    {PROTOBUF_FIELD_OFFSET(SnapshotMeta, _impl_.chunk_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\31\0\11\0\0\0\0\0"
    "alyncoin.net.SnapshotMeta"
    "root_hash"
  }},
};

PROTOBUF_NOINLINE void SnapshotMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.SnapshotMeta)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.root_hash_.ClearToEmpty();
  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.chunk_size_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.chunk_size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SnapshotMeta::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SnapshotMeta& this_ = static_cast<const SnapshotMeta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SnapshotMeta::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SnapshotMeta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.SnapshotMeta)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 height = 1;
          if (this_._internal_height() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_height(), target);
          }

          // string root_hash = 2;
          if (!this_._internal_root_hash().empty()) {
            const std::string& _s = this_._internal_root_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.SnapshotMeta.root_hash");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 total_bytes = 3;
          if (this_._internal_total_bytes() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_total_bytes(), target);
          }

          // uint32 chunk_size = 4;
          if (this_._internal_chunk_size() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_chunk_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.SnapshotMeta)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SnapshotMeta::ByteSizeLong(const MessageLite& base) {
          const SnapshotMeta& this_ = static_cast<const SnapshotMeta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SnapshotMeta::ByteSizeLong() const {
          const SnapshotMeta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.SnapshotMeta)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string root_hash = 2;
            if (!this_._internal_root_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_root_hash());
            }
            // uint64 height = 1;
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_height());
            }
            // uint64 total_bytes = 3;
            if (this_._internal_total_bytes() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_total_bytes());
            }
            // uint32 chunk_size = 4;
            if (this_._internal_chunk_size() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_chunk_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SnapshotMeta::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SnapshotMeta*>(&to_msg);
  auto& from = static_cast<const SnapshotMeta&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.SnapshotMeta)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_root_hash().empty()) {
    _this->_internal_set_root_hash(from._internal_root_hash());
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_total_bytes() != 0) {
    _this->_impl_.total_bytes_ = from._impl_.total_bytes_;
  }
  if (from._internal_chunk_size() != 0) {
    _this->_impl_.chunk_size_ = from._impl_.chunk_size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SnapshotMeta::CopyFrom(const SnapshotMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.SnapshotMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SnapshotMeta::InternalSwap(SnapshotMeta* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.root_hash_, &other->_impl_.root_hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SnapshotMeta, _impl_.chunk_size_)
      + sizeof(SnapshotMeta::_impl_.chunk_size_)
      - PROTOBUF_FIELD_OFFSET(SnapshotMeta, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata SnapshotMeta::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SnapshotChunk::_Internal {
 public:
};

SnapshotChunk::SnapshotChunk(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.SnapshotChunk)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::SnapshotChunk& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

SnapshotChunk::SnapshotChunk(
    ::google::protobuf::Arena* arena,
    const SnapshotChunk& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SnapshotChunk* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.SnapshotChunk)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void SnapshotChunk::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SnapshotChunk::~SnapshotChunk() {
  // @@protoc_insertion_point(destructor:alyncoin.net.SnapshotChunk)
  SharedDtor(*this);
}
inline void SnapshotChunk::SharedDtor(MessageLite& self) {
  SnapshotChunk& this_ = static_cast<SnapshotChunk&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SnapshotChunk::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SnapshotChunk(arena);
}
constexpr auto SnapshotChunk::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SnapshotChunk),
                                            alignof(SnapshotChunk));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SnapshotChunk::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SnapshotChunk_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SnapshotChunk::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SnapshotChunk>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SnapshotChunk::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SnapshotChunk>(), &SnapshotChunk::ByteSizeLong,
            &SnapshotChunk::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SnapshotChunk, _impl_._cached_size_),
        false,
    },
    &SnapshotChunk::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SnapshotChunk::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SnapshotChunk::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::SnapshotChunk>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SnapshotChunk, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(SnapshotChunk, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SnapshotChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.SnapshotChunk)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SnapshotChunk::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SnapshotChunk& this_ = static_cast<const SnapshotChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SnapshotChunk::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SnapshotChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.SnapshotChunk)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.SnapshotChunk)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SnapshotChunk::ByteSizeLong(const MessageLite& base) {
          const SnapshotChunk& this_ = static_cast<const SnapshotChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SnapshotChunk::ByteSizeLong() const {
          const SnapshotChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.SnapshotChunk)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes data = 1;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SnapshotChunk::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SnapshotChunk*>(&to_msg);
  auto& from = static_cast<const SnapshotChunk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.SnapshotChunk)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SnapshotChunk::CopyFrom(const SnapshotChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.SnapshotChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SnapshotChunk::InternalSwap(SnapshotChunk* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata SnapshotChunk::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SnapshotAck::_Internal {
 public:
};

SnapshotAck::SnapshotAck(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.SnapshotAck)
}
SnapshotAck::SnapshotAck(
    ::google::protobuf::Arena* arena, const SnapshotAck& from)
    : SnapshotAck(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SnapshotAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SnapshotAck::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.seq_ = {};
}
SnapshotAck::~SnapshotAck() {
  // @@protoc_insertion_point(destructor:alyncoin.net.SnapshotAck)
  SharedDtor(*this);
}
inline void SnapshotAck::SharedDtor(MessageLite& self) {
  SnapshotAck& this_ = static_cast<SnapshotAck&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SnapshotAck::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SnapshotAck(arena);
}
constexpr auto SnapshotAck::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SnapshotAck),
                                            alignof(SnapshotAck));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SnapshotAck::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SnapshotAck_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SnapshotAck::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SnapshotAck>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SnapshotAck::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SnapshotAck>(), &SnapshotAck::ByteSizeLong,
            &SnapshotAck::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SnapshotAck, _impl_._cached_size_),
        false,
    },
    &SnapshotAck::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SnapshotAck::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SnapshotAck::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::SnapshotAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 seq = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SnapshotAck, _impl_.seq_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SnapshotAck, _impl_.seq_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 seq = 1;
    {PROTOBUF_FIELD_OFFSET(SnapshotAck, _impl_.seq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SnapshotAck::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.SnapshotAck)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.seq_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SnapshotAck::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SnapshotAck& this_ = static_cast<const SnapshotAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SnapshotAck::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SnapshotAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.SnapshotAck)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 seq = 1;
          if (this_._internal_seq() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_seq(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.SnapshotAck)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SnapshotAck::ByteSizeLong(const MessageLite& base) {
          const SnapshotAck& this_ = static_cast<const SnapshotAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SnapshotAck::ByteSizeLong() const {
          const SnapshotAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.SnapshotAck)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 seq = 1;
            if (this_._internal_seq() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_seq());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SnapshotAck::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SnapshotAck*>(&to_msg);
  auto& from = static_cast<const SnapshotAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.SnapshotAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_seq() != 0) {
    _this->_impl_.seq_ = from._impl_.seq_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SnapshotAck::CopyFrom(const SnapshotAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.SnapshotAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SnapshotAck::InternalSwap(SnapshotAck* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.seq_, other->_impl_.seq_);
}

::google::protobuf::Metadata SnapshotAck::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SnapshotEnd::_Internal {
 public:
};

SnapshotEnd::SnapshotEnd(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.SnapshotEnd)
}
SnapshotEnd::SnapshotEnd(
    ::google::protobuf::Arena* arena,
    const SnapshotEnd& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SnapshotEnd* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.SnapshotEnd)
}

inline void* SnapshotEnd::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SnapshotEnd(arena);
}
constexpr auto SnapshotEnd::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SnapshotEnd),
                                            alignof(SnapshotEnd));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SnapshotEnd::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SnapshotEnd_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SnapshotEnd::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SnapshotEnd>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SnapshotEnd::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SnapshotEnd>(), &SnapshotEnd::ByteSizeLong,
            &SnapshotEnd::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SnapshotEnd, _impl_._cached_size_),
        false,
    },
    &SnapshotEnd::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SnapshotEnd::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SnapshotEnd::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::SnapshotEnd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SnapshotEnd::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TailBlocks::_Internal {
 public:
};

void TailBlocks::clear_blocks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocks_.Clear();
}
TailBlocks::TailBlocks(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.TailBlocks)
}
inline PROTOBUF_NDEBUG_INLINE TailBlocks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::TailBlocks& from_msg)
      : blocks_{visibility, arena, from.blocks_},
        _cached_size_{0} {}

TailBlocks::TailBlocks(
    ::google::protobuf::Arena* arena,
    const TailBlocks& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TailBlocks* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.TailBlocks)
}
inline PROTOBUF_NDEBUG_INLINE TailBlocks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : blocks_{visibility, arena},
        _cached_size_{0} {}

inline void TailBlocks::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TailBlocks::~TailBlocks() {
  // @@protoc_insertion_point(destructor:alyncoin.net.TailBlocks)
  SharedDtor(*this);
}
inline void TailBlocks::SharedDtor(MessageLite& self) {
  TailBlocks& this_ = static_cast<TailBlocks&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TailBlocks::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TailBlocks(arena);
}
constexpr auto TailBlocks::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TailBlocks, _impl_.blocks_) +
          decltype(TailBlocks::_impl_.blocks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TailBlocks), alignof(TailBlocks), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TailBlocks::PlacementNew_,
                                 sizeof(TailBlocks),
                                 alignof(TailBlocks));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TailBlocks::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TailBlocks_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TailBlocks::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TailBlocks>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TailBlocks::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TailBlocks>(), &TailBlocks::ByteSizeLong,
            &TailBlocks::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TailBlocks, _impl_._cached_size_),
        false,
    },
    &TailBlocks::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TailBlocks::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TailBlocks::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::TailBlocks>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .alyncoin.BlockProto blocks = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TailBlocks, _impl_.blocks_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .alyncoin.BlockProto blocks = 1;
    {PROTOBUF_FIELD_OFFSET(TailBlocks, _impl_.blocks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::alyncoin::BlockProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TailBlocks::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.TailBlocks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blocks_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TailBlocks::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TailBlocks& this_ = static_cast<const TailBlocks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TailBlocks::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TailBlocks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.TailBlocks)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .alyncoin.BlockProto blocks = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_blocks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_blocks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.TailBlocks)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TailBlocks::ByteSizeLong(const MessageLite& base) {
          const TailBlocks& this_ = static_cast<const TailBlocks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TailBlocks::ByteSizeLong() const {
          const TailBlocks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.TailBlocks)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .alyncoin.BlockProto blocks = 1;
            {
              total_size += 1UL * this_._internal_blocks_size();
              for (const auto& msg : this_._internal_blocks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TailBlocks::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TailBlocks*>(&to_msg);
  auto& from = static_cast<const TailBlocks&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.TailBlocks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_blocks()->MergeFrom(
      from._internal_blocks());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TailBlocks::CopyFrom(const TailBlocks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.TailBlocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TailBlocks::InternalSwap(TailBlocks* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.blocks_.InternalSwap(&other->_impl_.blocks_);
}

::google::protobuf::Metadata TailBlocks::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EpochProof::_Internal {
 public:
};

EpochProof::EpochProof(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.EpochProof)
}
inline PROTOBUF_NDEBUG_INLINE EpochProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::EpochProof& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

EpochProof::EpochProof(
    ::google::protobuf::Arena* arena,
    const EpochProof& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EpochProof* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.EpochProof)
}
inline PROTOBUF_NDEBUG_INLINE EpochProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void EpochProof::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EpochProof::~EpochProof() {
  // @@protoc_insertion_point(destructor:alyncoin.net.EpochProof)
  SharedDtor(*this);
}
inline void EpochProof::SharedDtor(MessageLite& self) {
  EpochProof& this_ = static_cast<EpochProof&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EpochProof::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EpochProof(arena);
}
constexpr auto EpochProof::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EpochProof),
                                            alignof(EpochProof));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EpochProof::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EpochProof_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EpochProof::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EpochProof>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EpochProof::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EpochProof>(), &EpochProof::ByteSizeLong,
            &EpochProof::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EpochProof, _impl_._cached_size_),
        false,
    },
    &EpochProof::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EpochProof::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> EpochProof::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::EpochProof>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EpochProof, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(EpochProof, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EpochProof::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.EpochProof)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EpochProof::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EpochProof& this_ = static_cast<const EpochProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EpochProof::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EpochProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.EpochProof)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.EpochProof)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EpochProof::ByteSizeLong(const MessageLite& base) {
          const EpochProof& this_ = static_cast<const EpochProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EpochProof::ByteSizeLong() const {
          const EpochProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.EpochProof)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes data = 1;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EpochProof::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EpochProof*>(&to_msg);
  auto& from = static_cast<const EpochProof&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.EpochProof)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EpochProof::CopyFrom(const EpochProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.EpochProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EpochProof::InternalSwap(EpochProof* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata EpochProof::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Inventory::_Internal {
 public:
};

Inventory::Inventory(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.Inventory)
}
inline PROTOBUF_NDEBUG_INLINE Inventory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::Inventory& from_msg)
      : hashes_{visibility, arena, from.hashes_},
        _cached_size_{0} {}

Inventory::Inventory(
    ::google::protobuf::Arena* arena,
    const Inventory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Inventory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.Inventory)
}
inline PROTOBUF_NDEBUG_INLINE Inventory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hashes_{visibility, arena},
        _cached_size_{0} {}

inline void Inventory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Inventory::~Inventory() {
  // @@protoc_insertion_point(destructor:alyncoin.net.Inventory)
  SharedDtor(*this);
}
inline void Inventory::SharedDtor(MessageLite& self) {
  Inventory& this_ = static_cast<Inventory&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Inventory::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Inventory(arena);
}
constexpr auto Inventory::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Inventory, _impl_.hashes_) +
          decltype(Inventory::_impl_.hashes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Inventory), alignof(Inventory), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Inventory::PlacementNew_,
                                 sizeof(Inventory),
                                 alignof(Inventory));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Inventory::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Inventory_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Inventory::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Inventory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Inventory::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Inventory>(), &Inventory::ByteSizeLong,
            &Inventory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Inventory, _impl_._cached_size_),
        false,
    },
    &Inventory::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Inventory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 37, 2> Inventory::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::Inventory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string hashes = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Inventory, _impl_.hashes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string hashes = 1;
    {PROTOBUF_FIELD_OFFSET(Inventory, _impl_.hashes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\26\6\0\0\0\0\0\0"
    "alyncoin.net.Inventory"
    "hashes"
  }},
};

PROTOBUF_NOINLINE void Inventory::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.Inventory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hashes_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Inventory::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Inventory& this_ = static_cast<const Inventory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Inventory::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Inventory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.Inventory)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string hashes = 1;
          for (int i = 0, n = this_._internal_hashes_size(); i < n; ++i) {
            const auto& s = this_._internal_hashes().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.Inventory.hashes");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.Inventory)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Inventory::ByteSizeLong(const MessageLite& base) {
          const Inventory& this_ = static_cast<const Inventory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Inventory::ByteSizeLong() const {
          const Inventory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.Inventory)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string hashes = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_hashes().size());
              for (int i = 0, n = this_._internal_hashes().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_hashes().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Inventory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Inventory*>(&to_msg);
  auto& from = static_cast<const Inventory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.Inventory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hashes()->MergeFrom(from._internal_hashes());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Inventory::CopyFrom(const Inventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.Inventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Inventory::InternalSwap(Inventory* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hashes_.InternalSwap(&other->_impl_.hashes_);
}

::google::protobuf::Metadata Inventory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TipHashRequest::_Internal {
 public:
};

TipHashRequest::TipHashRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.TipHashRequest)
}
TipHashRequest::TipHashRequest(
    ::google::protobuf::Arena* arena,
    const TipHashRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TipHashRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.TipHashRequest)
}

inline void* TipHashRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TipHashRequest(arena);
}
constexpr auto TipHashRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TipHashRequest),
                                            alignof(TipHashRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TipHashRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TipHashRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TipHashRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<TipHashRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TipHashRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<TipHashRequest>(), &TipHashRequest::ByteSizeLong,
            &TipHashRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TipHashRequest, _impl_._cached_size_),
        false,
    },
    &TipHashRequest::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TipHashRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TipHashRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::TipHashRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata TipHashRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TipHashResponse::_Internal {
 public:
};

TipHashResponse::TipHashResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.TipHashResponse)
}
inline PROTOBUF_NDEBUG_INLINE TipHashResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::TipHashResponse& from_msg)
      : hash_(arena, from.hash_),
        _cached_size_{0} {}

TipHashResponse::TipHashResponse(
    ::google::protobuf::Arena* arena,
    const TipHashResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TipHashResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.TipHashResponse)
}
inline PROTOBUF_NDEBUG_INLINE TipHashResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hash_(arena),
        _cached_size_{0} {}

inline void TipHashResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TipHashResponse::~TipHashResponse() {
  // @@protoc_insertion_point(destructor:alyncoin.net.TipHashResponse)
  SharedDtor(*this);
}
inline void TipHashResponse::SharedDtor(MessageLite& self) {
  TipHashResponse& this_ = static_cast<TipHashResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TipHashResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TipHashResponse(arena);
}
constexpr auto TipHashResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TipHashResponse),
                                            alignof(TipHashResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TipHashResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TipHashResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TipHashResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TipHashResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TipHashResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TipHashResponse>(), &TipHashResponse::ByteSizeLong,
            &TipHashResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TipHashResponse, _impl_._cached_size_),
        false,
    },
    &TipHashResponse::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TipHashResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2> TipHashResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::TipHashResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string hash = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TipHashResponse, _impl_.hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string hash = 1;
    {PROTOBUF_FIELD_OFFSET(TipHashResponse, _impl_.hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\4\0\0\0\0\0\0"
    "alyncoin.net.TipHashResponse"
    "hash"
  }},
};

PROTOBUF_NOINLINE void TipHashResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.TipHashResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hash_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TipHashResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TipHashResponse& this_ = static_cast<const TipHashResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TipHashResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TipHashResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.TipHashResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string hash = 1;
          if (!this_._internal_hash().empty()) {
            const std::string& _s = this_._internal_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.TipHashResponse.hash");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.TipHashResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TipHashResponse::ByteSizeLong(const MessageLite& base) {
          const TipHashResponse& this_ = static_cast<const TipHashResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TipHashResponse::ByteSizeLong() const {
          const TipHashResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.TipHashResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string hash = 1;
            if (!this_._internal_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hash());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TipHashResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TipHashResponse*>(&to_msg);
  auto& from = static_cast<const TipHashResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.TipHashResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TipHashResponse::CopyFrom(const TipHashResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.TipHashResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TipHashResponse::InternalSwap(TipHashResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
}

::google::protobuf::Metadata TipHashResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerListRequest::_Internal {
 public:
};

PeerListRequest::PeerListRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.PeerListRequest)
}
PeerListRequest::PeerListRequest(
    ::google::protobuf::Arena* arena,
    const PeerListRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PeerListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.PeerListRequest)
}

inline void* PeerListRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PeerListRequest(arena);
}
constexpr auto PeerListRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PeerListRequest),
                                            alignof(PeerListRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PeerListRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PeerListRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PeerListRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<PeerListRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PeerListRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<PeerListRequest>(), &PeerListRequest::ByteSizeLong,
            &PeerListRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PeerListRequest, _impl_._cached_size_),
        false,
    },
    &PeerListRequest::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PeerListRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> PeerListRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::PeerListRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata PeerListRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerList::_Internal {
 public:
};

PeerList::PeerList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.PeerList)
}
inline PROTOBUF_NDEBUG_INLINE PeerList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::PeerList& from_msg)
      : peers_{visibility, arena, from.peers_},
        _cached_size_{0} {}

PeerList::PeerList(
    ::google::protobuf::Arena* arena,
    const PeerList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PeerList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.PeerList)
}
inline PROTOBUF_NDEBUG_INLINE PeerList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : peers_{visibility, arena},
        _cached_size_{0} {}

inline void PeerList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PeerList::~PeerList() {
  // @@protoc_insertion_point(destructor:alyncoin.net.PeerList)
  SharedDtor(*this);
}
inline void PeerList::SharedDtor(MessageLite& self) {
  PeerList& this_ = static_cast<PeerList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PeerList::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PeerList(arena);
}
constexpr auto PeerList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PeerList, _impl_.peers_) +
          decltype(PeerList::_impl_.peers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PeerList), alignof(PeerList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PeerList::PlacementNew_,
                                 sizeof(PeerList),
                                 alignof(PeerList));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PeerList::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PeerList_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PeerList::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PeerList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PeerList::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PeerList>(), &PeerList::ByteSizeLong,
            &PeerList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PeerList, _impl_._cached_size_),
        false,
    },
    &PeerList::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PeerList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 35, 2> PeerList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::PeerList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string peers = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PeerList, _impl_.peers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string peers = 1;
    {PROTOBUF_FIELD_OFFSET(PeerList, _impl_.peers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\25\5\0\0\0\0\0\0"
    "alyncoin.net.PeerList"
    "peers"
  }},
};

PROTOBUF_NOINLINE void PeerList::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.PeerList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.peers_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PeerList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PeerList& this_ = static_cast<const PeerList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PeerList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PeerList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.PeerList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string peers = 1;
          for (int i = 0, n = this_._internal_peers_size(); i < n; ++i) {
            const auto& s = this_._internal_peers().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.PeerList.peers");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.PeerList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PeerList::ByteSizeLong(const MessageLite& base) {
          const PeerList& this_ = static_cast<const PeerList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PeerList::ByteSizeLong() const {
          const PeerList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.PeerList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string peers = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_peers().size());
              for (int i = 0, n = this_._internal_peers().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_peers().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PeerList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PeerList*>(&to_msg);
  auto& from = static_cast<const PeerList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.PeerList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_peers()->MergeFrom(from._internal_peers());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PeerList::CopyFrom(const PeerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.PeerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeerList::InternalSwap(PeerList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.peers_.InternalSwap(&other->_impl_.peers_);
}

::google::protobuf::Metadata PeerList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollupBlockMsg::_Internal {
 public:
};

RollupBlockMsg::RollupBlockMsg(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.RollupBlockMsg)
}
inline PROTOBUF_NDEBUG_INLINE RollupBlockMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::RollupBlockMsg& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

RollupBlockMsg::RollupBlockMsg(
    ::google::protobuf::Arena* arena,
    const RollupBlockMsg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollupBlockMsg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.RollupBlockMsg)
}
inline PROTOBUF_NDEBUG_INLINE RollupBlockMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void RollupBlockMsg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RollupBlockMsg::~RollupBlockMsg() {
  // @@protoc_insertion_point(destructor:alyncoin.net.RollupBlockMsg)
  SharedDtor(*this);
}
inline void RollupBlockMsg::SharedDtor(MessageLite& self) {
  RollupBlockMsg& this_ = static_cast<RollupBlockMsg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RollupBlockMsg::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RollupBlockMsg(arena);
}
constexpr auto RollupBlockMsg::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollupBlockMsg),
                                            alignof(RollupBlockMsg));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RollupBlockMsg::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RollupBlockMsg_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RollupBlockMsg::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RollupBlockMsg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RollupBlockMsg::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RollupBlockMsg>(), &RollupBlockMsg::ByteSizeLong,
            &RollupBlockMsg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RollupBlockMsg, _impl_._cached_size_),
        false,
    },
    &RollupBlockMsg::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RollupBlockMsg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RollupBlockMsg::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::RollupBlockMsg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollupBlockMsg, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(RollupBlockMsg, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RollupBlockMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.RollupBlockMsg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RollupBlockMsg::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RollupBlockMsg& this_ = static_cast<const RollupBlockMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RollupBlockMsg::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RollupBlockMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.RollupBlockMsg)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.RollupBlockMsg)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RollupBlockMsg::ByteSizeLong(const MessageLite& base) {
          const RollupBlockMsg& this_ = static_cast<const RollupBlockMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RollupBlockMsg::ByteSizeLong() const {
          const RollupBlockMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.RollupBlockMsg)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes data = 1;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RollupBlockMsg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollupBlockMsg*>(&to_msg);
  auto& from = static_cast<const RollupBlockMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.RollupBlockMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollupBlockMsg::CopyFrom(const RollupBlockMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.RollupBlockMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollupBlockMsg::InternalSwap(RollupBlockMsg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata RollupBlockMsg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SnapshotRequest::_Internal {
 public:
};

SnapshotRequest::SnapshotRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.SnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::SnapshotRequest& from_msg)
      : until_hash_(arena, from.until_hash_),
        _cached_size_{0} {}

SnapshotRequest::SnapshotRequest(
    ::google::protobuf::Arena* arena,
    const SnapshotRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SnapshotRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.SnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : until_hash_(arena),
        _cached_size_{0} {}

inline void SnapshotRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SnapshotRequest::~SnapshotRequest() {
  // @@protoc_insertion_point(destructor:alyncoin.net.SnapshotRequest)
  SharedDtor(*this);
}
inline void SnapshotRequest::SharedDtor(MessageLite& self) {
  SnapshotRequest& this_ = static_cast<SnapshotRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.until_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SnapshotRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SnapshotRequest(arena);
}
constexpr auto SnapshotRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SnapshotRequest),
                                            alignof(SnapshotRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SnapshotRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SnapshotRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SnapshotRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SnapshotRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SnapshotRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SnapshotRequest>(), &SnapshotRequest::ByteSizeLong,
            &SnapshotRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SnapshotRequest, _impl_._cached_size_),
        false,
    },
    &SnapshotRequest::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SnapshotRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 47, 2> SnapshotRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::SnapshotRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string until_hash = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SnapshotRequest, _impl_.until_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string until_hash = 1;
    {PROTOBUF_FIELD_OFFSET(SnapshotRequest, _impl_.until_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\12\0\0\0\0\0\0"
    "alyncoin.net.SnapshotRequest"
    "until_hash"
  }},
};

PROTOBUF_NOINLINE void SnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.SnapshotRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.until_hash_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SnapshotRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SnapshotRequest& this_ = static_cast<const SnapshotRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SnapshotRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SnapshotRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.SnapshotRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string until_hash = 1;
          if (!this_._internal_until_hash().empty()) {
            const std::string& _s = this_._internal_until_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.SnapshotRequest.until_hash");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.SnapshotRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SnapshotRequest::ByteSizeLong(const MessageLite& base) {
          const SnapshotRequest& this_ = static_cast<const SnapshotRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SnapshotRequest::ByteSizeLong() const {
          const SnapshotRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.SnapshotRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string until_hash = 1;
            if (!this_._internal_until_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_until_hash());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SnapshotRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SnapshotRequest*>(&to_msg);
  auto& from = static_cast<const SnapshotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.SnapshotRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_until_hash().empty()) {
    _this->_internal_set_until_hash(from._internal_until_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SnapshotRequest::CopyFrom(const SnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.SnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SnapshotRequest::InternalSwap(SnapshotRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.until_hash_, &other->_impl_.until_hash_, arena);
}

::google::protobuf::Metadata SnapshotRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TailBlocksRequest::_Internal {
 public:
};

TailBlocksRequest::TailBlocksRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.TailBlocksRequest)
}
inline PROTOBUF_NDEBUG_INLINE TailBlocksRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::TailBlocksRequest& from_msg)
      : anchor_hash_(arena, from.anchor_hash_),
        _cached_size_{0} {}

TailBlocksRequest::TailBlocksRequest(
    ::google::protobuf::Arena* arena,
    const TailBlocksRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TailBlocksRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.from_height_ = from._impl_.from_height_;

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.TailBlocksRequest)
}
inline PROTOBUF_NDEBUG_INLINE TailBlocksRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : anchor_hash_(arena),
        _cached_size_{0} {}

inline void TailBlocksRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.from_height_ = {};
}
TailBlocksRequest::~TailBlocksRequest() {
  // @@protoc_insertion_point(destructor:alyncoin.net.TailBlocksRequest)
  SharedDtor(*this);
}
inline void TailBlocksRequest::SharedDtor(MessageLite& self) {
  TailBlocksRequest& this_ = static_cast<TailBlocksRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.anchor_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TailBlocksRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TailBlocksRequest(arena);
}
constexpr auto TailBlocksRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TailBlocksRequest),
                                            alignof(TailBlocksRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TailBlocksRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TailBlocksRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TailBlocksRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TailBlocksRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TailBlocksRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TailBlocksRequest>(), &TailBlocksRequest::ByteSizeLong,
            &TailBlocksRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TailBlocksRequest, _impl_._cached_size_),
        false,
    },
    &TailBlocksRequest::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TailBlocksRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2> TailBlocksRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::TailBlocksRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string anchor_hash = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TailBlocksRequest, _impl_.anchor_hash_)}},
    // uint64 from_height = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TailBlocksRequest, _impl_.from_height_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TailBlocksRequest, _impl_.from_height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 from_height = 1;
    {PROTOBUF_FIELD_OFFSET(TailBlocksRequest, _impl_.from_height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string anchor_hash = 2;
    {PROTOBUF_FIELD_OFFSET(TailBlocksRequest, _impl_.anchor_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\13\0\0\0\0\0"
    "alyncoin.net.TailBlocksRequest"
    "anchor_hash"
  }},
};

PROTOBUF_NOINLINE void TailBlocksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.TailBlocksRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.anchor_hash_.ClearToEmpty();
  _impl_.from_height_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TailBlocksRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TailBlocksRequest& this_ = static_cast<const TailBlocksRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TailBlocksRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TailBlocksRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.TailBlocksRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 from_height = 1;
          if (this_._internal_from_height() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_from_height(), target);
          }

          // string anchor_hash = 2;
          if (!this_._internal_anchor_hash().empty()) {
            const std::string& _s = this_._internal_anchor_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.TailBlocksRequest.anchor_hash");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.TailBlocksRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TailBlocksRequest::ByteSizeLong(const MessageLite& base) {
          const TailBlocksRequest& this_ = static_cast<const TailBlocksRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TailBlocksRequest::ByteSizeLong() const {
          const TailBlocksRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.TailBlocksRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string anchor_hash = 2;
            if (!this_._internal_anchor_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_anchor_hash());
            }
            // uint64 from_height = 1;
            if (this_._internal_from_height() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_from_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TailBlocksRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TailBlocksRequest*>(&to_msg);
  auto& from = static_cast<const TailBlocksRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.TailBlocksRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_anchor_hash().empty()) {
    _this->_internal_set_anchor_hash(from._internal_anchor_hash());
  }
  if (from._internal_from_height() != 0) {
    _this->_impl_.from_height_ = from._impl_.from_height_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TailBlocksRequest::CopyFrom(const TailBlocksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.TailBlocksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TailBlocksRequest::InternalSwap(TailBlocksRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.anchor_hash_, &other->_impl_.anchor_hash_, arena);
        swap(_impl_.from_height_, other->_impl_.from_height_);
}

::google::protobuf::Metadata TailBlocksRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetData::_Internal {
 public:
};

GetData::GetData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.GetData)
}
inline PROTOBUF_NDEBUG_INLINE GetData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::GetData& from_msg)
      : hashes_{visibility, arena, from.hashes_},
        _cached_size_{0} {}

GetData::GetData(
    ::google::protobuf::Arena* arena,
    const GetData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.GetData)
}
inline PROTOBUF_NDEBUG_INLINE GetData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hashes_{visibility, arena},
        _cached_size_{0} {}

inline void GetData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetData::~GetData() {
  // @@protoc_insertion_point(destructor:alyncoin.net.GetData)
  SharedDtor(*this);
}
inline void GetData::SharedDtor(MessageLite& self) {
  GetData& this_ = static_cast<GetData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetData(arena);
}
constexpr auto GetData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetData, _impl_.hashes_) +
          decltype(GetData::_impl_.hashes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetData), alignof(GetData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetData::PlacementNew_,
                                 sizeof(GetData),
                                 alignof(GetData));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetData>(), &GetData::ByteSizeLong,
            &GetData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetData, _impl_._cached_size_),
        false,
    },
    &GetData::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 35, 2> GetData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::GetData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string hashes = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetData, _impl_.hashes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string hashes = 1;
    {PROTOBUF_FIELD_OFFSET(GetData, _impl_.hashes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\24\6\0\0\0\0\0\0"
    "alyncoin.net.GetData"
    "hashes"
  }},
};

PROTOBUF_NOINLINE void GetData::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.GetData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hashes_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetData& this_ = static_cast<const GetData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.GetData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string hashes = 1;
          for (int i = 0, n = this_._internal_hashes_size(); i < n; ++i) {
            const auto& s = this_._internal_hashes().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.GetData.hashes");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.GetData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetData::ByteSizeLong(const MessageLite& base) {
          const GetData& this_ = static_cast<const GetData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetData::ByteSizeLong() const {
          const GetData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.GetData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string hashes = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_hashes().size());
              for (int i = 0, n = this_._internal_hashes().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_hashes().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetData*>(&to_msg);
  auto& from = static_cast<const GetData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.GetData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hashes()->MergeFrom(from._internal_hashes());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetData::CopyFrom(const GetData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.GetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetData::InternalSwap(GetData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hashes_.InternalSwap(&other->_impl_.hashes_);
}

::google::protobuf::Metadata GetData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetHeaders::_Internal {
 public:
};

GetHeaders::GetHeaders(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.GetHeaders)
}
inline PROTOBUF_NDEBUG_INLINE GetHeaders::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::GetHeaders& from_msg)
      : from_hash_(arena, from.from_hash_),
        _cached_size_{0} {}

GetHeaders::GetHeaders(
    ::google::protobuf::Arena* arena,
    const GetHeaders& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetHeaders* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.GetHeaders)
}
inline PROTOBUF_NDEBUG_INLINE GetHeaders::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : from_hash_(arena),
        _cached_size_{0} {}

inline void GetHeaders::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetHeaders::~GetHeaders() {
  // @@protoc_insertion_point(destructor:alyncoin.net.GetHeaders)
  SharedDtor(*this);
}
inline void GetHeaders::SharedDtor(MessageLite& self) {
  GetHeaders& this_ = static_cast<GetHeaders&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.from_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetHeaders::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetHeaders(arena);
}
constexpr auto GetHeaders::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetHeaders),
                                            alignof(GetHeaders));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetHeaders::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetHeaders_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetHeaders::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetHeaders>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetHeaders::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetHeaders>(), &GetHeaders::ByteSizeLong,
            &GetHeaders::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetHeaders, _impl_._cached_size_),
        false,
    },
    &GetHeaders::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetHeaders::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2> GetHeaders::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::GetHeaders>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string from_hash = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetHeaders, _impl_.from_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string from_hash = 1;
    {PROTOBUF_FIELD_OFFSET(GetHeaders, _impl_.from_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\11\0\0\0\0\0\0"
    "alyncoin.net.GetHeaders"
    "from_hash"
  }},
};

PROTOBUF_NOINLINE void GetHeaders::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.GetHeaders)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.from_hash_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetHeaders::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetHeaders& this_ = static_cast<const GetHeaders&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetHeaders::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetHeaders& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.GetHeaders)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string from_hash = 1;
          if (!this_._internal_from_hash().empty()) {
            const std::string& _s = this_._internal_from_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alyncoin.net.GetHeaders.from_hash");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.GetHeaders)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetHeaders::ByteSizeLong(const MessageLite& base) {
          const GetHeaders& this_ = static_cast<const GetHeaders&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetHeaders::ByteSizeLong() const {
          const GetHeaders& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.GetHeaders)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string from_hash = 1;
            if (!this_._internal_from_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_from_hash());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetHeaders::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetHeaders*>(&to_msg);
  auto& from = static_cast<const GetHeaders&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.GetHeaders)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_from_hash().empty()) {
    _this->_internal_set_from_hash(from._internal_from_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetHeaders::CopyFrom(const GetHeaders& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.GetHeaders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetHeaders::InternalSwap(GetHeaders* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_hash_, &other->_impl_.from_hash_, arena);
}

::google::protobuf::Metadata GetHeaders::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Headers::_Internal {
 public:
};

void Headers::clear_headers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.headers_.Clear();
}
Headers::Headers(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.Headers)
}
inline PROTOBUF_NDEBUG_INLINE Headers::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::Headers& from_msg)
      : headers_{visibility, arena, from.headers_},
        _cached_size_{0} {}

Headers::Headers(
    ::google::protobuf::Arena* arena,
    const Headers& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Headers* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.Headers)
}
inline PROTOBUF_NDEBUG_INLINE Headers::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : headers_{visibility, arena},
        _cached_size_{0} {}

inline void Headers::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Headers::~Headers() {
  // @@protoc_insertion_point(destructor:alyncoin.net.Headers)
  SharedDtor(*this);
}
inline void Headers::SharedDtor(MessageLite& self) {
  Headers& this_ = static_cast<Headers&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Headers::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Headers(arena);
}
constexpr auto Headers::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Headers, _impl_.headers_) +
          decltype(Headers::_impl_.headers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Headers), alignof(Headers), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Headers::PlacementNew_,
                                 sizeof(Headers),
                                 alignof(Headers));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Headers::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Headers_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Headers::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Headers>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Headers::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Headers>(), &Headers::ByteSizeLong,
            &Headers::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Headers, _impl_._cached_size_),
        false,
    },
    &Headers::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Headers::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Headers::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::Headers>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .alyncoin.BlockProto headers = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Headers, _impl_.headers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .alyncoin.BlockProto headers = 1;
    {PROTOBUF_FIELD_OFFSET(Headers, _impl_.headers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::alyncoin::BlockProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Headers::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.Headers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.headers_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Headers::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Headers& this_ = static_cast<const Headers&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Headers::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Headers& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.Headers)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .alyncoin.BlockProto headers = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_headers_size());
               i < n; i++) {
            const auto& repfield = this_._internal_headers().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.Headers)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Headers::ByteSizeLong(const MessageLite& base) {
          const Headers& this_ = static_cast<const Headers&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Headers::ByteSizeLong() const {
          const Headers& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.Headers)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .alyncoin.BlockProto headers = 1;
            {
              total_size += 1UL * this_._internal_headers_size();
              for (const auto& msg : this_._internal_headers()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Headers::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Headers*>(&to_msg);
  auto& from = static_cast<const Headers&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.Headers)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_headers()->MergeFrom(
      from._internal_headers());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Headers::CopyFrom(const Headers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.Headers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Headers::InternalSwap(Headers* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
}

::google::protobuf::Metadata Headers::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StateProof::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StateProof>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StateProof, _impl_._has_bits_);
};

void StateProof::clear_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.proof_ != nullptr) _impl_.proof_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StateProof::StateProof(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.StateProof)
}
inline PROTOBUF_NDEBUG_INLINE StateProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::StateProof& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StateProof::StateProof(
    ::google::protobuf::Arena* arena,
    const StateProof& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StateProof* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.proof_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::alyncoin::StateProofProto>(
                              arena, *from._impl_.proof_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.StateProof)
}
inline PROTOBUF_NDEBUG_INLINE StateProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StateProof::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proof_ = {};
}
StateProof::~StateProof() {
  // @@protoc_insertion_point(destructor:alyncoin.net.StateProof)
  SharedDtor(*this);
}
inline void StateProof::SharedDtor(MessageLite& self) {
  StateProof& this_ = static_cast<StateProof&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.proof_;
  this_._impl_.~Impl_();
}

inline void* StateProof::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StateProof(arena);
}
constexpr auto StateProof::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StateProof),
                                            alignof(StateProof));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StateProof::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StateProof_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StateProof::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StateProof>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StateProof::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StateProof>(), &StateProof::ByteSizeLong,
            &StateProof::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StateProof, _impl_._cached_size_),
        false,
    },
    &StateProof::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StateProof::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StateProof::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StateProof, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::StateProof>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .alyncoin.StateProofProto proof = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StateProof, _impl_.proof_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .alyncoin.StateProofProto proof = 1;
    {PROTOBUF_FIELD_OFFSET(StateProof, _impl_.proof_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::alyncoin::StateProofProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StateProof::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.StateProof)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.proof_ != nullptr);
    _impl_.proof_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StateProof::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StateProof& this_ = static_cast<const StateProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StateProof::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StateProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.StateProof)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .alyncoin.StateProofProto proof = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.proof_, this_._impl_.proof_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.StateProof)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StateProof::ByteSizeLong(const MessageLite& base) {
          const StateProof& this_ = static_cast<const StateProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StateProof::ByteSizeLong() const {
          const StateProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.StateProof)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .alyncoin.StateProofProto proof = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proof_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StateProof::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StateProof*>(&to_msg);
  auto& from = static_cast<const StateProof&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.StateProof)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.proof_ != nullptr);
    if (_this->_impl_.proof_ == nullptr) {
      _this->_impl_.proof_ =
          ::google::protobuf::Message::CopyConstruct<::alyncoin::StateProofProto>(arena, *from._impl_.proof_);
    } else {
      _this->_impl_.proof_->MergeFrom(*from._impl_.proof_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateProof::CopyFrom(const StateProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.StateProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StateProof::InternalSwap(StateProof* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.proof_, other->_impl_.proof_);
}

::google::protobuf::Metadata StateProof::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TransactionBroadcast::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TransactionBroadcast>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TransactionBroadcast, _impl_._has_bits_);
};

void TransactionBroadcast::clear_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_ != nullptr) _impl_.tx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TransactionBroadcast::TransactionBroadcast(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.TransactionBroadcast)
}
inline PROTOBUF_NDEBUG_INLINE TransactionBroadcast::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::TransactionBroadcast& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TransactionBroadcast::TransactionBroadcast(
    ::google::protobuf::Arena* arena,
    const TransactionBroadcast& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TransactionBroadcast* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tx_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::alyncoin::TransactionProto>(
                              arena, *from._impl_.tx_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.TransactionBroadcast)
}
inline PROTOBUF_NDEBUG_INLINE TransactionBroadcast::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TransactionBroadcast::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tx_ = {};
}
TransactionBroadcast::~TransactionBroadcast() {
  // @@protoc_insertion_point(destructor:alyncoin.net.TransactionBroadcast)
  SharedDtor(*this);
}
inline void TransactionBroadcast::SharedDtor(MessageLite& self) {
  TransactionBroadcast& this_ = static_cast<TransactionBroadcast&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tx_;
  this_._impl_.~Impl_();
}

inline void* TransactionBroadcast::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TransactionBroadcast(arena);
}
constexpr auto TransactionBroadcast::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TransactionBroadcast),
                                            alignof(TransactionBroadcast));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TransactionBroadcast::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TransactionBroadcast_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TransactionBroadcast::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TransactionBroadcast>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TransactionBroadcast::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TransactionBroadcast>(), &TransactionBroadcast::ByteSizeLong,
            &TransactionBroadcast::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TransactionBroadcast, _impl_._cached_size_),
        false,
    },
    &TransactionBroadcast::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TransactionBroadcast::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TransactionBroadcast::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TransactionBroadcast, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::TransactionBroadcast>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .alyncoin.TransactionProto tx = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TransactionBroadcast, _impl_.tx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .alyncoin.TransactionProto tx = 1;
    {PROTOBUF_FIELD_OFFSET(TransactionBroadcast, _impl_.tx_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::alyncoin::TransactionProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TransactionBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.TransactionBroadcast)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tx_ != nullptr);
    _impl_.tx_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TransactionBroadcast::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TransactionBroadcast& this_ = static_cast<const TransactionBroadcast&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TransactionBroadcast::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TransactionBroadcast& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.TransactionBroadcast)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .alyncoin.TransactionProto tx = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.tx_, this_._impl_.tx_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.TransactionBroadcast)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TransactionBroadcast::ByteSizeLong(const MessageLite& base) {
          const TransactionBroadcast& this_ = static_cast<const TransactionBroadcast&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TransactionBroadcast::ByteSizeLong() const {
          const TransactionBroadcast& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.TransactionBroadcast)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .alyncoin.TransactionProto tx = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tx_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TransactionBroadcast::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransactionBroadcast*>(&to_msg);
  auto& from = static_cast<const TransactionBroadcast&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.TransactionBroadcast)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.tx_ != nullptr);
    if (_this->_impl_.tx_ == nullptr) {
      _this->_impl_.tx_ =
          ::google::protobuf::Message::CopyConstruct<::alyncoin::TransactionProto>(arena, *from._impl_.tx_);
    } else {
      _this->_impl_.tx_->MergeFrom(*from._impl_.tx_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransactionBroadcast::CopyFrom(const TransactionBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.TransactionBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransactionBroadcast::InternalSwap(TransactionBroadcast* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.tx_, other->_impl_.tx_);
}

::google::protobuf::Metadata TransactionBroadcast::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Whisper::_Internal {
 public:
};

Whisper::Whisper(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.Whisper)
}
inline PROTOBUF_NDEBUG_INLINE Whisper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::Whisper& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

Whisper::Whisper(
    ::google::protobuf::Arena* arena,
    const Whisper& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Whisper* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.Whisper)
}
inline PROTOBUF_NDEBUG_INLINE Whisper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void Whisper::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Whisper::~Whisper() {
  // @@protoc_insertion_point(destructor:alyncoin.net.Whisper)
  SharedDtor(*this);
}
inline void Whisper::SharedDtor(MessageLite& self) {
  Whisper& this_ = static_cast<Whisper&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Whisper::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Whisper(arena);
}
constexpr auto Whisper::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Whisper),
                                            alignof(Whisper));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Whisper::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Whisper_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Whisper::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Whisper>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Whisper::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Whisper>(), &Whisper::ByteSizeLong,
            &Whisper::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Whisper, _impl_._cached_size_),
        false,
    },
    &Whisper::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Whisper::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Whisper::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::Whisper>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Whisper, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(Whisper, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Whisper::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.Whisper)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Whisper::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Whisper& this_ = static_cast<const Whisper&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Whisper::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Whisper& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.Whisper)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.Whisper)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Whisper::ByteSizeLong(const MessageLite& base) {
          const Whisper& this_ = static_cast<const Whisper&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Whisper::ByteSizeLong() const {
          const Whisper& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.Whisper)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes data = 1;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Whisper::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Whisper*>(&to_msg);
  auto& from = static_cast<const Whisper&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.Whisper)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Whisper::CopyFrom(const Whisper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.Whisper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Whisper::InternalSwap(Whisper* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata Whisper::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Frame::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::alyncoin::net::Frame, _impl_._oneof_case_);
};

void Frame::set_allocated_handshake(::alyncoin::net::Handshake* handshake) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (handshake) {
    ::google::protobuf::Arena* submessage_arena = handshake->GetArena();
    if (message_arena != submessage_arena) {
      handshake = ::google::protobuf::internal::GetOwnedMessage(message_arena, handshake, submessage_arena);
    }
    set_has_handshake();
    _impl_.kind_.handshake_ = handshake;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.handshake)
}
void Frame::set_allocated_ping(::alyncoin::net::Ping* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = ping->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.kind_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.ping)
}
void Frame::set_allocated_pong(::alyncoin::net::Pong* pong) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (pong) {
    ::google::protobuf::Arena* submessage_arena = pong->GetArena();
    if (message_arena != submessage_arena) {
      pong = ::google::protobuf::internal::GetOwnedMessage(message_arena, pong, submessage_arena);
    }
    set_has_pong();
    _impl_.kind_.pong_ = pong;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.pong)
}
void Frame::set_allocated_height_req(::alyncoin::net::HeightRequest* height_req) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (height_req) {
    ::google::protobuf::Arena* submessage_arena = height_req->GetArena();
    if (message_arena != submessage_arena) {
      height_req = ::google::protobuf::internal::GetOwnedMessage(message_arena, height_req, submessage_arena);
    }
    set_has_height_req();
    _impl_.kind_.height_req_ = height_req;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.height_req)
}
void Frame::set_allocated_height_res(::alyncoin::net::HeightResponse* height_res) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (height_res) {
    ::google::protobuf::Arena* submessage_arena = height_res->GetArena();
    if (message_arena != submessage_arena) {
      height_res = ::google::protobuf::internal::GetOwnedMessage(message_arena, height_res, submessage_arena);
    }
    set_has_height_res();
    _impl_.kind_.height_res_ = height_res;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.height_res)
}
void Frame::set_allocated_height_probe(::alyncoin::net::HeightProbe* height_probe) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (height_probe) {
    ::google::protobuf::Arena* submessage_arena = height_probe->GetArena();
    if (message_arena != submessage_arena) {
      height_probe = ::google::protobuf::internal::GetOwnedMessage(message_arena, height_probe, submessage_arena);
    }
    set_has_height_probe();
    _impl_.kind_.height_probe_ = height_probe;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.height_probe)
}
void Frame::set_allocated_block_broadcast(::alyncoin::net::BlockBroadcast* block_broadcast) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (block_broadcast) {
    ::google::protobuf::Arena* submessage_arena = block_broadcast->GetArena();
    if (message_arena != submessage_arena) {
      block_broadcast = ::google::protobuf::internal::GetOwnedMessage(message_arena, block_broadcast, submessage_arena);
    }
    set_has_block_broadcast();
    _impl_.kind_.block_broadcast_ = block_broadcast;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.block_broadcast)
}
void Frame::set_allocated_block_batch(::alyncoin::net::BlockBatch* block_batch) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (block_batch) {
    ::google::protobuf::Arena* submessage_arena = block_batch->GetArena();
    if (message_arena != submessage_arena) {
      block_batch = ::google::protobuf::internal::GetOwnedMessage(message_arena, block_batch, submessage_arena);
    }
    set_has_block_batch();
    _impl_.kind_.block_batch_ = block_batch;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.block_batch)
}
void Frame::set_allocated_block_request(::alyncoin::net::BlockRequest* block_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (block_request) {
    ::google::protobuf::Arena* submessage_arena = block_request->GetArena();
    if (message_arena != submessage_arena) {
      block_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, block_request, submessage_arena);
    }
    set_has_block_request();
    _impl_.kind_.block_request_ = block_request;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.block_request)
}
void Frame::set_allocated_block_response(::alyncoin::net::BlockResponse* block_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (block_response) {
    ::google::protobuf::Arena* submessage_arena = block_response->GetArena();
    if (message_arena != submessage_arena) {
      block_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, block_response, submessage_arena);
    }
    set_has_block_response();
    _impl_.kind_.block_response_ = block_response;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.block_response)
}
void Frame::set_allocated_snapshot_meta(::alyncoin::net::SnapshotMeta* snapshot_meta) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (snapshot_meta) {
    ::google::protobuf::Arena* submessage_arena = snapshot_meta->GetArena();
    if (message_arena != submessage_arena) {
      snapshot_meta = ::google::protobuf::internal::GetOwnedMessage(message_arena, snapshot_meta, submessage_arena);
    }
    set_has_snapshot_meta();
    _impl_.kind_.snapshot_meta_ = snapshot_meta;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.snapshot_meta)
}
void Frame::set_allocated_snapshot_chunk(::alyncoin::net::SnapshotChunk* snapshot_chunk) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (snapshot_chunk) {
    ::google::protobuf::Arena* submessage_arena = snapshot_chunk->GetArena();
    if (message_arena != submessage_arena) {
      snapshot_chunk = ::google::protobuf::internal::GetOwnedMessage(message_arena, snapshot_chunk, submessage_arena);
    }
    set_has_snapshot_chunk();
    _impl_.kind_.snapshot_chunk_ = snapshot_chunk;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.snapshot_chunk)
}
void Frame::set_allocated_snapshot_ack(::alyncoin::net::SnapshotAck* snapshot_ack) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (snapshot_ack) {
    ::google::protobuf::Arena* submessage_arena = snapshot_ack->GetArena();
    if (message_arena != submessage_arena) {
      snapshot_ack = ::google::protobuf::internal::GetOwnedMessage(message_arena, snapshot_ack, submessage_arena);
    }
    set_has_snapshot_ack();
    _impl_.kind_.snapshot_ack_ = snapshot_ack;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.snapshot_ack)
}
void Frame::set_allocated_snapshot_end(::alyncoin::net::SnapshotEnd* snapshot_end) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (snapshot_end) {
    ::google::protobuf::Arena* submessage_arena = snapshot_end->GetArena();
    if (message_arena != submessage_arena) {
      snapshot_end = ::google::protobuf::internal::GetOwnedMessage(message_arena, snapshot_end, submessage_arena);
    }
    set_has_snapshot_end();
    _impl_.kind_.snapshot_end_ = snapshot_end;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.snapshot_end)
}
void Frame::set_allocated_tail_blocks(::alyncoin::net::TailBlocks* tail_blocks) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (tail_blocks) {
    ::google::protobuf::Arena* submessage_arena = tail_blocks->GetArena();
    if (message_arena != submessage_arena) {
      tail_blocks = ::google::protobuf::internal::GetOwnedMessage(message_arena, tail_blocks, submessage_arena);
    }
    set_has_tail_blocks();
    _impl_.kind_.tail_blocks_ = tail_blocks;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.tail_blocks)
}
void Frame::set_allocated_agg_proof(::alyncoin::net::EpochProof* agg_proof) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (agg_proof) {
    ::google::protobuf::Arena* submessage_arena = agg_proof->GetArena();
    if (message_arena != submessage_arena) {
      agg_proof = ::google::protobuf::internal::GetOwnedMessage(message_arena, agg_proof, submessage_arena);
    }
    set_has_agg_proof();
    _impl_.kind_.agg_proof_ = agg_proof;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.agg_proof)
}
void Frame::set_allocated_inv(::alyncoin::net::Inventory* inv) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (inv) {
    ::google::protobuf::Arena* submessage_arena = inv->GetArena();
    if (message_arena != submessage_arena) {
      inv = ::google::protobuf::internal::GetOwnedMessage(message_arena, inv, submessage_arena);
    }
    set_has_inv();
    _impl_.kind_.inv_ = inv;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.inv)
}
void Frame::set_allocated_tip_hash_req(::alyncoin::net::TipHashRequest* tip_hash_req) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (tip_hash_req) {
    ::google::protobuf::Arena* submessage_arena = tip_hash_req->GetArena();
    if (message_arena != submessage_arena) {
      tip_hash_req = ::google::protobuf::internal::GetOwnedMessage(message_arena, tip_hash_req, submessage_arena);
    }
    set_has_tip_hash_req();
    _impl_.kind_.tip_hash_req_ = tip_hash_req;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.tip_hash_req)
}
void Frame::set_allocated_tip_hash_res(::alyncoin::net::TipHashResponse* tip_hash_res) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (tip_hash_res) {
    ::google::protobuf::Arena* submessage_arena = tip_hash_res->GetArena();
    if (message_arena != submessage_arena) {
      tip_hash_res = ::google::protobuf::internal::GetOwnedMessage(message_arena, tip_hash_res, submessage_arena);
    }
    set_has_tip_hash_res();
    _impl_.kind_.tip_hash_res_ = tip_hash_res;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.tip_hash_res)
}
void Frame::set_allocated_peer_list_req(::alyncoin::net::PeerListRequest* peer_list_req) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (peer_list_req) {
    ::google::protobuf::Arena* submessage_arena = peer_list_req->GetArena();
    if (message_arena != submessage_arena) {
      peer_list_req = ::google::protobuf::internal::GetOwnedMessage(message_arena, peer_list_req, submessage_arena);
    }
    set_has_peer_list_req();
    _impl_.kind_.peer_list_req_ = peer_list_req;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.peer_list_req)
}
void Frame::set_allocated_peer_list(::alyncoin::net::PeerList* peer_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (peer_list) {
    ::google::protobuf::Arena* submessage_arena = peer_list->GetArena();
    if (message_arena != submessage_arena) {
      peer_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, peer_list, submessage_arena);
    }
    set_has_peer_list();
    _impl_.kind_.peer_list_ = peer_list;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.peer_list)
}
void Frame::set_allocated_rollup_block(::alyncoin::net::RollupBlockMsg* rollup_block) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (rollup_block) {
    ::google::protobuf::Arena* submessage_arena = rollup_block->GetArena();
    if (message_arena != submessage_arena) {
      rollup_block = ::google::protobuf::internal::GetOwnedMessage(message_arena, rollup_block, submessage_arena);
    }
    set_has_rollup_block();
    _impl_.kind_.rollup_block_ = rollup_block;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.rollup_block)
}
void Frame::set_allocated_snapshot_req(::alyncoin::net::SnapshotRequest* snapshot_req) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (snapshot_req) {
    ::google::protobuf::Arena* submessage_arena = snapshot_req->GetArena();
    if (message_arena != submessage_arena) {
      snapshot_req = ::google::protobuf::internal::GetOwnedMessage(message_arena, snapshot_req, submessage_arena);
    }
    set_has_snapshot_req();
    _impl_.kind_.snapshot_req_ = snapshot_req;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.snapshot_req)
}
void Frame::set_allocated_tail_req(::alyncoin::net::TailBlocksRequest* tail_req) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (tail_req) {
    ::google::protobuf::Arena* submessage_arena = tail_req->GetArena();
    if (message_arena != submessage_arena) {
      tail_req = ::google::protobuf::internal::GetOwnedMessage(message_arena, tail_req, submessage_arena);
    }
    set_has_tail_req();
    _impl_.kind_.tail_req_ = tail_req;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.tail_req)
}
void Frame::set_allocated_state_proof(::alyncoin::net::StateProof* state_proof) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (state_proof) {
    ::google::protobuf::Arena* submessage_arena = state_proof->GetArena();
    if (message_arena != submessage_arena) {
      state_proof = ::google::protobuf::internal::GetOwnedMessage(message_arena, state_proof, submessage_arena);
    }
    set_has_state_proof();
    _impl_.kind_.state_proof_ = state_proof;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.state_proof)
}
void Frame::set_allocated_get_data(::alyncoin::net::GetData* get_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (get_data) {
    ::google::protobuf::Arena* submessage_arena = get_data->GetArena();
    if (message_arena != submessage_arena) {
      get_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_data, submessage_arena);
    }
    set_has_get_data();
    _impl_.kind_.get_data_ = get_data;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.get_data)
}
void Frame::set_allocated_blockchain_sync_request(::alyncoin::BlockchainSyncProto* blockchain_sync_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (blockchain_sync_request) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(blockchain_sync_request)->GetArena();
    if (message_arena != submessage_arena) {
      blockchain_sync_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, blockchain_sync_request, submessage_arena);
    }
    set_has_blockchain_sync_request();
    _impl_.kind_.blockchain_sync_request_ = blockchain_sync_request;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.blockchain_sync_request)
}
void Frame::clear_blockchain_sync_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (kind_case() == kBlockchainSyncRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.blockchain_sync_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.blockchain_sync_request_);
    }
    clear_has_kind();
  }
}
void Frame::set_allocated_tx_broadcast(::alyncoin::net::TransactionBroadcast* tx_broadcast) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (tx_broadcast) {
    ::google::protobuf::Arena* submessage_arena = tx_broadcast->GetArena();
    if (message_arena != submessage_arena) {
      tx_broadcast = ::google::protobuf::internal::GetOwnedMessage(message_arena, tx_broadcast, submessage_arena);
    }
    set_has_tx_broadcast();
    _impl_.kind_.tx_broadcast_ = tx_broadcast;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.tx_broadcast)
}
void Frame::set_allocated_whisper(::alyncoin::net::Whisper* whisper) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (whisper) {
    ::google::protobuf::Arena* submessage_arena = whisper->GetArena();
    if (message_arena != submessage_arena) {
      whisper = ::google::protobuf::internal::GetOwnedMessage(message_arena, whisper, submessage_arena);
    }
    set_has_whisper();
    _impl_.kind_.whisper_ = whisper;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.whisper)
}
void Frame::set_allocated_get_headers(::alyncoin::net::GetHeaders* get_headers) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (get_headers) {
    ::google::protobuf::Arena* submessage_arena = get_headers->GetArena();
    if (message_arena != submessage_arena) {
      get_headers = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_headers, submessage_arena);
    }
    set_has_get_headers();
    _impl_.kind_.get_headers_ = get_headers;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.get_headers)
}
void Frame::set_allocated_headers(::alyncoin::net::Headers* headers) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (headers) {
    ::google::protobuf::Arena* submessage_arena = headers->GetArena();
    if (message_arena != submessage_arena) {
      headers = ::google::protobuf::internal::GetOwnedMessage(message_arena, headers, submessage_arena);
    }
    set_has_headers();
    _impl_.kind_.headers_ = headers;
  }
  // @@protoc_insertion_point(field_set_allocated:alyncoin.net.Frame.headers)
}
Frame::Frame(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alyncoin.net.Frame)
}
inline PROTOBUF_NDEBUG_INLINE Frame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::alyncoin::net::Frame& from_msg)
      : kind_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Frame::Frame(
    ::google::protobuf::Arena* arena,
    const Frame& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Frame* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (kind_case()) {
    case KIND_NOT_SET:
      break;
      case kHandshake:
        _impl_.kind_.handshake_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Handshake>(arena, *from._impl_.kind_.handshake_);
        break;
      case kPing:
        _impl_.kind_.ping_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Ping>(arena, *from._impl_.kind_.ping_);
        break;
      case kPong:
        _impl_.kind_.pong_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Pong>(arena, *from._impl_.kind_.pong_);
        break;
      case kHeightReq:
        _impl_.kind_.height_req_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::HeightRequest>(arena, *from._impl_.kind_.height_req_);
        break;
      case kHeightRes:
        _impl_.kind_.height_res_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::HeightResponse>(arena, *from._impl_.kind_.height_res_);
        break;
      case kHeightProbe:
        _impl_.kind_.height_probe_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::HeightProbe>(arena, *from._impl_.kind_.height_probe_);
        break;
      case kBlockBroadcast:
        _impl_.kind_.block_broadcast_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::BlockBroadcast>(arena, *from._impl_.kind_.block_broadcast_);
        break;
      case kBlockBatch:
        _impl_.kind_.block_batch_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::BlockBatch>(arena, *from._impl_.kind_.block_batch_);
        break;
      case kBlockRequest:
        _impl_.kind_.block_request_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::BlockRequest>(arena, *from._impl_.kind_.block_request_);
        break;
      case kBlockResponse:
        _impl_.kind_.block_response_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::BlockResponse>(arena, *from._impl_.kind_.block_response_);
        break;
      case kSnapshotMeta:
        _impl_.kind_.snapshot_meta_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::SnapshotMeta>(arena, *from._impl_.kind_.snapshot_meta_);
        break;
      case kSnapshotChunk:
        _impl_.kind_.snapshot_chunk_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::SnapshotChunk>(arena, *from._impl_.kind_.snapshot_chunk_);
        break;
      case kSnapshotAck:
        _impl_.kind_.snapshot_ack_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::SnapshotAck>(arena, *from._impl_.kind_.snapshot_ack_);
        break;
      case kSnapshotEnd:
        _impl_.kind_.snapshot_end_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::SnapshotEnd>(arena, *from._impl_.kind_.snapshot_end_);
        break;
      case kTailBlocks:
        _impl_.kind_.tail_blocks_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::TailBlocks>(arena, *from._impl_.kind_.tail_blocks_);
        break;
      case kAggProof:
        _impl_.kind_.agg_proof_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::EpochProof>(arena, *from._impl_.kind_.agg_proof_);
        break;
      case kInv:
        _impl_.kind_.inv_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Inventory>(arena, *from._impl_.kind_.inv_);
        break;
      case kTipHashReq:
        _impl_.kind_.tip_hash_req_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::TipHashRequest>(arena, *from._impl_.kind_.tip_hash_req_);
        break;
      case kTipHashRes:
        _impl_.kind_.tip_hash_res_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::TipHashResponse>(arena, *from._impl_.kind_.tip_hash_res_);
        break;
      case kPeerListReq:
        _impl_.kind_.peer_list_req_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::PeerListRequest>(arena, *from._impl_.kind_.peer_list_req_);
        break;
      case kPeerList:
        _impl_.kind_.peer_list_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::PeerList>(arena, *from._impl_.kind_.peer_list_);
        break;
      case kRollupBlock:
        _impl_.kind_.rollup_block_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::RollupBlockMsg>(arena, *from._impl_.kind_.rollup_block_);
        break;
      case kSnapshotReq:
        _impl_.kind_.snapshot_req_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::SnapshotRequest>(arena, *from._impl_.kind_.snapshot_req_);
        break;
      case kTailReq:
        _impl_.kind_.tail_req_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::TailBlocksRequest>(arena, *from._impl_.kind_.tail_req_);
        break;
      case kStateProof:
        _impl_.kind_.state_proof_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::StateProof>(arena, *from._impl_.kind_.state_proof_);
        break;
      case kGetData:
        _impl_.kind_.get_data_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::GetData>(arena, *from._impl_.kind_.get_data_);
        break;
      case kBlockchainSyncRequest:
        _impl_.kind_.blockchain_sync_request_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::BlockchainSyncProto>(arena, *from._impl_.kind_.blockchain_sync_request_);
        break;
      case kTxBroadcast:
        _impl_.kind_.tx_broadcast_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::TransactionBroadcast>(arena, *from._impl_.kind_.tx_broadcast_);
        break;
      case kWhisper:
        _impl_.kind_.whisper_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Whisper>(arena, *from._impl_.kind_.whisper_);
        break;
      case kGetHeaders:
        _impl_.kind_.get_headers_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::GetHeaders>(arena, *from._impl_.kind_.get_headers_);
        break;
      case kHeaders:
        _impl_.kind_.headers_ = ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Headers>(arena, *from._impl_.kind_.headers_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:alyncoin.net.Frame)
}
inline PROTOBUF_NDEBUG_INLINE Frame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Frame::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Frame::~Frame() {
  // @@protoc_insertion_point(destructor:alyncoin.net.Frame)
  SharedDtor(*this);
}
inline void Frame::SharedDtor(MessageLite& self) {
  Frame& this_ = static_cast<Frame&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_kind()) {
    this_.clear_kind();
  }
  this_._impl_.~Impl_();
}

void Frame::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:alyncoin.net.Frame)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (kind_case()) {
    case kHandshake: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.handshake_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.handshake_);
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.ping_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.ping_);
      }
      break;
    }
    case kPong: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.pong_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.pong_);
      }
      break;
    }
    case kHeightReq: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.height_req_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.height_req_);
      }
      break;
    }
    case kHeightRes: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.height_res_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.height_res_);
      }
      break;
    }
    case kHeightProbe: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.height_probe_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.height_probe_);
      }
      break;
    }
    case kBlockBroadcast: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.block_broadcast_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.block_broadcast_);
      }
      break;
    }
    case kBlockBatch: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.block_batch_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.block_batch_);
      }
      break;
    }
    case kBlockRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.block_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.block_request_);
      }
      break;
    }
    case kBlockResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.block_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.block_response_);
      }
      break;
    }
    case kSnapshotMeta: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.snapshot_meta_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.snapshot_meta_);
      }
      break;
    }
    case kSnapshotChunk: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.snapshot_chunk_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.snapshot_chunk_);
      }
      break;
    }
    case kSnapshotAck: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.snapshot_ack_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.snapshot_ack_);
      }
      break;
    }
    case kSnapshotEnd: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.snapshot_end_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.snapshot_end_);
      }
      break;
    }
    case kTailBlocks: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.tail_blocks_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.tail_blocks_);
      }
      break;
    }
    case kAggProof: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.agg_proof_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.agg_proof_);
      }
      break;
    }
    case kInv: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.inv_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.inv_);
      }
      break;
    }
    case kTipHashReq: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.tip_hash_req_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.tip_hash_req_);
      }
      break;
    }
    case kTipHashRes: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.tip_hash_res_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.tip_hash_res_);
      }
      break;
    }
    case kPeerListReq: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.peer_list_req_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.peer_list_req_);
      }
      break;
    }
    case kPeerList: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.peer_list_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.peer_list_);
      }
      break;
    }
    case kRollupBlock: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.rollup_block_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.rollup_block_);
      }
      break;
    }
    case kSnapshotReq: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.snapshot_req_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.snapshot_req_);
      }
      break;
    }
    case kTailReq: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.tail_req_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.tail_req_);
      }
      break;
    }
    case kStateProof: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.state_proof_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.state_proof_);
      }
      break;
    }
    case kGetData: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.get_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.get_data_);
      }
      break;
    }
    case kBlockchainSyncRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.blockchain_sync_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.blockchain_sync_request_);
      }
      break;
    }
    case kTxBroadcast: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.tx_broadcast_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.tx_broadcast_);
      }
      break;
    }
    case kWhisper: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.whisper_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.whisper_);
      }
      break;
    }
    case kGetHeaders: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.get_headers_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.get_headers_);
      }
      break;
    }
    case kHeaders: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.headers_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.headers_);
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}


inline void* Frame::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Frame(arena);
}
constexpr auto Frame::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Frame),
                                            alignof(Frame));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Frame::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Frame_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Frame::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Frame>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Frame::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Frame>(), &Frame::ByteSizeLong,
            &Frame::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Frame, _impl_._cached_size_),
        false,
    },
    &Frame::kDescriptorMethods,
    &descriptor_table_net_5fframe_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Frame::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 31, 31, 0, 2> Frame::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    31, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    2147483648,  // skipmap
    offsetof(decltype(_table_), field_entries),
    31,  // num_field_entries
    31,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::alyncoin::net::Frame>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .alyncoin.net.Handshake handshake = 1;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.handshake_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.Ping ping = 2;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.ping_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.Pong pong = 3;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.pong_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.HeightRequest height_req = 4;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.height_req_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.HeightResponse height_res = 5;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.height_res_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.BlockBroadcast block_broadcast = 6;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.block_broadcast_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.BlockBatch block_batch = 7;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.block_batch_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.SnapshotMeta snapshot_meta = 8;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.snapshot_meta_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.SnapshotChunk snapshot_chunk = 9;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.snapshot_chunk_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.SnapshotAck snapshot_ack = 10;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.snapshot_ack_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.SnapshotEnd snapshot_end = 11;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.snapshot_end_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.TailBlocks tail_blocks = 12;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.tail_blocks_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.EpochProof agg_proof = 13;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.agg_proof_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.Inventory inv = 14;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.inv_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.TipHashRequest tip_hash_req = 15;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.tip_hash_req_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.TipHashResponse tip_hash_res = 16;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.tip_hash_res_), _Internal::kOneofCaseOffset + 0, 15,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.PeerListRequest peer_list_req = 17;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.peer_list_req_), _Internal::kOneofCaseOffset + 0, 16,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.PeerList peer_list = 18;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.peer_list_), _Internal::kOneofCaseOffset + 0, 17,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.RollupBlockMsg rollup_block = 19;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.rollup_block_), _Internal::kOneofCaseOffset + 0, 18,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.SnapshotRequest snapshot_req = 20;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.snapshot_req_), _Internal::kOneofCaseOffset + 0, 19,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.TailBlocksRequest tail_req = 21;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.tail_req_), _Internal::kOneofCaseOffset + 0, 20,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.StateProof state_proof = 22;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.state_proof_), _Internal::kOneofCaseOffset + 0, 21,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.GetData get_data = 23;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.get_data_), _Internal::kOneofCaseOffset + 0, 22,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.BlockchainSyncProto blockchain_sync_request = 24;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.blockchain_sync_request_), _Internal::kOneofCaseOffset + 0, 23,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.TransactionBroadcast tx_broadcast = 25;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.tx_broadcast_), _Internal::kOneofCaseOffset + 0, 24,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.Whisper whisper = 26;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.whisper_), _Internal::kOneofCaseOffset + 0, 25,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.GetHeaders get_headers = 27;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.get_headers_), _Internal::kOneofCaseOffset + 0, 26,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.Headers headers = 28;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.headers_), _Internal::kOneofCaseOffset + 0, 27,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.BlockRequest block_request = 29;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.block_request_), _Internal::kOneofCaseOffset + 0, 28,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.BlockResponse block_response = 30;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.block_response_), _Internal::kOneofCaseOffset + 0, 29,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .alyncoin.net.HeightProbe height_probe = 31;
    {PROTOBUF_FIELD_OFFSET(Frame, _impl_.kind_.height_probe_), _Internal::kOneofCaseOffset + 0, 30,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::alyncoin::net::Handshake>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::Ping>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::Pong>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::HeightRequest>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::HeightResponse>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::BlockBroadcast>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::BlockBatch>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::SnapshotMeta>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::SnapshotChunk>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::SnapshotAck>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::SnapshotEnd>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::TailBlocks>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::EpochProof>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::Inventory>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::TipHashRequest>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::TipHashResponse>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::PeerListRequest>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::PeerList>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::RollupBlockMsg>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::SnapshotRequest>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::TailBlocksRequest>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::StateProof>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::GetData>()},
    {::_pbi::TcParser::GetTable<::alyncoin::BlockchainSyncProto>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::TransactionBroadcast>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::Whisper>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::GetHeaders>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::Headers>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::BlockRequest>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::BlockResponse>()},
    {::_pbi::TcParser::GetTable<::alyncoin::net::HeightProbe>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Frame::Clear() {
// @@protoc_insertion_point(message_clear_start:alyncoin.net.Frame)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Frame::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Frame& this_ = static_cast<const Frame&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Frame::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Frame& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:alyncoin.net.Frame)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.kind_case()) {
            case kHandshake: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.kind_.handshake_, this_._impl_.kind_.handshake_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPing: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.kind_.ping_, this_._impl_.kind_.ping_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPong: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.kind_.pong_, this_._impl_.kind_.pong_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kHeightReq: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.kind_.height_req_, this_._impl_.kind_.height_req_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kHeightRes: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.kind_.height_res_, this_._impl_.kind_.height_res_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBlockBroadcast: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.kind_.block_broadcast_, this_._impl_.kind_.block_broadcast_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBlockBatch: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.kind_.block_batch_, this_._impl_.kind_.block_batch_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSnapshotMeta: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  8, *this_._impl_.kind_.snapshot_meta_, this_._impl_.kind_.snapshot_meta_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSnapshotChunk: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  9, *this_._impl_.kind_.snapshot_chunk_, this_._impl_.kind_.snapshot_chunk_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSnapshotAck: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.kind_.snapshot_ack_, this_._impl_.kind_.snapshot_ack_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSnapshotEnd: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.kind_.snapshot_end_, this_._impl_.kind_.snapshot_end_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kTailBlocks: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.kind_.tail_blocks_, this_._impl_.kind_.tail_blocks_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kAggProof: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  13, *this_._impl_.kind_.agg_proof_, this_._impl_.kind_.agg_proof_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kInv: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  14, *this_._impl_.kind_.inv_, this_._impl_.kind_.inv_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kTipHashReq: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  15, *this_._impl_.kind_.tip_hash_req_, this_._impl_.kind_.tip_hash_req_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kTipHashRes: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  16, *this_._impl_.kind_.tip_hash_res_, this_._impl_.kind_.tip_hash_res_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPeerListReq: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  17, *this_._impl_.kind_.peer_list_req_, this_._impl_.kind_.peer_list_req_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPeerList: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  18, *this_._impl_.kind_.peer_list_, this_._impl_.kind_.peer_list_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kRollupBlock: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  19, *this_._impl_.kind_.rollup_block_, this_._impl_.kind_.rollup_block_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSnapshotReq: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  20, *this_._impl_.kind_.snapshot_req_, this_._impl_.kind_.snapshot_req_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kTailReq: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  21, *this_._impl_.kind_.tail_req_, this_._impl_.kind_.tail_req_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kStateProof: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  22, *this_._impl_.kind_.state_proof_, this_._impl_.kind_.state_proof_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kGetData: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  23, *this_._impl_.kind_.get_data_, this_._impl_.kind_.get_data_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBlockchainSyncRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  24, *this_._impl_.kind_.blockchain_sync_request_, this_._impl_.kind_.blockchain_sync_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kTxBroadcast: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  25, *this_._impl_.kind_.tx_broadcast_, this_._impl_.kind_.tx_broadcast_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kWhisper: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  26, *this_._impl_.kind_.whisper_, this_._impl_.kind_.whisper_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kGetHeaders: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  27, *this_._impl_.kind_.get_headers_, this_._impl_.kind_.get_headers_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kHeaders: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  28, *this_._impl_.kind_.headers_, this_._impl_.kind_.headers_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBlockRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  29, *this_._impl_.kind_.block_request_, this_._impl_.kind_.block_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBlockResponse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  30, *this_._impl_.kind_.block_response_, this_._impl_.kind_.block_response_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kHeightProbe: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  31, *this_._impl_.kind_.height_probe_, this_._impl_.kind_.height_probe_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:alyncoin.net.Frame)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Frame::ByteSizeLong(const MessageLite& base) {
          const Frame& this_ = static_cast<const Frame&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Frame::ByteSizeLong() const {
          const Frame& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:alyncoin.net.Frame)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.kind_case()) {
            // .alyncoin.net.Handshake handshake = 1;
            case kHandshake: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.handshake_);
              break;
            }
            // .alyncoin.net.Ping ping = 2;
            case kPing: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.ping_);
              break;
            }
            // .alyncoin.net.Pong pong = 3;
            case kPong: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.pong_);
              break;
            }
            // .alyncoin.net.HeightRequest height_req = 4;
            case kHeightReq: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.height_req_);
              break;
            }
            // .alyncoin.net.HeightResponse height_res = 5;
            case kHeightRes: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.height_res_);
              break;
            }
            // .alyncoin.net.HeightProbe height_probe = 31;
            case kHeightProbe: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.height_probe_);
              break;
            }
            // .alyncoin.net.BlockBroadcast block_broadcast = 6;
            case kBlockBroadcast: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.block_broadcast_);
              break;
            }
            // .alyncoin.net.BlockBatch block_batch = 7;
            case kBlockBatch: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.block_batch_);
              break;
            }
            // .alyncoin.net.BlockRequest block_request = 29;
            case kBlockRequest: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.block_request_);
              break;
            }
            // .alyncoin.net.BlockResponse block_response = 30;
            case kBlockResponse: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.block_response_);
              break;
            }
            // .alyncoin.net.SnapshotMeta snapshot_meta = 8;
            case kSnapshotMeta: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.snapshot_meta_);
              break;
            }
            // .alyncoin.net.SnapshotChunk snapshot_chunk = 9;
            case kSnapshotChunk: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.snapshot_chunk_);
              break;
            }
            // .alyncoin.net.SnapshotAck snapshot_ack = 10;
            case kSnapshotAck: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.snapshot_ack_);
              break;
            }
            // .alyncoin.net.SnapshotEnd snapshot_end = 11;
            case kSnapshotEnd: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.snapshot_end_);
              break;
            }
            // .alyncoin.net.TailBlocks tail_blocks = 12;
            case kTailBlocks: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.tail_blocks_);
              break;
            }
            // .alyncoin.net.EpochProof agg_proof = 13;
            case kAggProof: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.agg_proof_);
              break;
            }
            // .alyncoin.net.Inventory inv = 14;
            case kInv: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.inv_);
              break;
            }
            // .alyncoin.net.TipHashRequest tip_hash_req = 15;
            case kTipHashReq: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.tip_hash_req_);
              break;
            }
            // .alyncoin.net.TipHashResponse tip_hash_res = 16;
            case kTipHashRes: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.tip_hash_res_);
              break;
            }
            // .alyncoin.net.PeerListRequest peer_list_req = 17;
            case kPeerListReq: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.peer_list_req_);
              break;
            }
            // .alyncoin.net.PeerList peer_list = 18;
            case kPeerList: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.peer_list_);
              break;
            }
            // .alyncoin.net.RollupBlockMsg rollup_block = 19;
            case kRollupBlock: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.rollup_block_);
              break;
            }
            // .alyncoin.net.SnapshotRequest snapshot_req = 20;
            case kSnapshotReq: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.snapshot_req_);
              break;
            }
            // .alyncoin.net.TailBlocksRequest tail_req = 21;
            case kTailReq: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.tail_req_);
              break;
            }
            // .alyncoin.net.StateProof state_proof = 22;
            case kStateProof: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.state_proof_);
              break;
            }
            // .alyncoin.net.GetData get_data = 23;
            case kGetData: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.get_data_);
              break;
            }
            // .alyncoin.BlockchainSyncProto blockchain_sync_request = 24;
            case kBlockchainSyncRequest: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.blockchain_sync_request_);
              break;
            }
            // .alyncoin.net.TransactionBroadcast tx_broadcast = 25;
            case kTxBroadcast: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.tx_broadcast_);
              break;
            }
            // .alyncoin.net.Whisper whisper = 26;
            case kWhisper: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.whisper_);
              break;
            }
            // .alyncoin.net.GetHeaders get_headers = 27;
            case kGetHeaders: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.get_headers_);
              break;
            }
            // .alyncoin.net.Headers headers = 28;
            case kHeaders: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.headers_);
              break;
            }
            case KIND_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Frame::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Frame*>(&to_msg);
  auto& from = static_cast<const Frame&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:alyncoin.net.Frame)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_kind();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kHandshake: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.handshake_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Handshake>(arena, *from._impl_.kind_.handshake_);
        } else {
          _this->_impl_.kind_.handshake_->MergeFrom(from._internal_handshake());
        }
        break;
      }
      case kPing: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.ping_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Ping>(arena, *from._impl_.kind_.ping_);
        } else {
          _this->_impl_.kind_.ping_->MergeFrom(from._internal_ping());
        }
        break;
      }
      case kPong: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.pong_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Pong>(arena, *from._impl_.kind_.pong_);
        } else {
          _this->_impl_.kind_.pong_->MergeFrom(from._internal_pong());
        }
        break;
      }
      case kHeightReq: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.height_req_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::HeightRequest>(arena, *from._impl_.kind_.height_req_);
        } else {
          _this->_impl_.kind_.height_req_->MergeFrom(from._internal_height_req());
        }
        break;
      }
      case kHeightRes: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.height_res_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::HeightResponse>(arena, *from._impl_.kind_.height_res_);
        } else {
          _this->_impl_.kind_.height_res_->MergeFrom(from._internal_height_res());
        }
        break;
      }
      case kHeightProbe: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.height_probe_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::HeightProbe>(arena, *from._impl_.kind_.height_probe_);
        } else {
          _this->_impl_.kind_.height_probe_->MergeFrom(from._internal_height_probe());
        }
        break;
      }
      case kBlockBroadcast: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.block_broadcast_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::BlockBroadcast>(arena, *from._impl_.kind_.block_broadcast_);
        } else {
          _this->_impl_.kind_.block_broadcast_->MergeFrom(from._internal_block_broadcast());
        }
        break;
      }
      case kBlockBatch: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.block_batch_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::BlockBatch>(arena, *from._impl_.kind_.block_batch_);
        } else {
          _this->_impl_.kind_.block_batch_->MergeFrom(from._internal_block_batch());
        }
        break;
      }
      case kBlockRequest: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.block_request_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::BlockRequest>(arena, *from._impl_.kind_.block_request_);
        } else {
          _this->_impl_.kind_.block_request_->MergeFrom(from._internal_block_request());
        }
        break;
      }
      case kBlockResponse: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.block_response_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::BlockResponse>(arena, *from._impl_.kind_.block_response_);
        } else {
          _this->_impl_.kind_.block_response_->MergeFrom(from._internal_block_response());
        }
        break;
      }
      case kSnapshotMeta: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.snapshot_meta_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::SnapshotMeta>(arena, *from._impl_.kind_.snapshot_meta_);
        } else {
          _this->_impl_.kind_.snapshot_meta_->MergeFrom(from._internal_snapshot_meta());
        }
        break;
      }
      case kSnapshotChunk: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.snapshot_chunk_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::SnapshotChunk>(arena, *from._impl_.kind_.snapshot_chunk_);
        } else {
          _this->_impl_.kind_.snapshot_chunk_->MergeFrom(from._internal_snapshot_chunk());
        }
        break;
      }
      case kSnapshotAck: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.snapshot_ack_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::SnapshotAck>(arena, *from._impl_.kind_.snapshot_ack_);
        } else {
          _this->_impl_.kind_.snapshot_ack_->MergeFrom(from._internal_snapshot_ack());
        }
        break;
      }
      case kSnapshotEnd: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.snapshot_end_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::SnapshotEnd>(arena, *from._impl_.kind_.snapshot_end_);
        } else {
          _this->_impl_.kind_.snapshot_end_->MergeFrom(from._internal_snapshot_end());
        }
        break;
      }
      case kTailBlocks: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.tail_blocks_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::TailBlocks>(arena, *from._impl_.kind_.tail_blocks_);
        } else {
          _this->_impl_.kind_.tail_blocks_->MergeFrom(from._internal_tail_blocks());
        }
        break;
      }
      case kAggProof: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.agg_proof_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::EpochProof>(arena, *from._impl_.kind_.agg_proof_);
        } else {
          _this->_impl_.kind_.agg_proof_->MergeFrom(from._internal_agg_proof());
        }
        break;
      }
      case kInv: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.inv_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Inventory>(arena, *from._impl_.kind_.inv_);
        } else {
          _this->_impl_.kind_.inv_->MergeFrom(from._internal_inv());
        }
        break;
      }
      case kTipHashReq: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.tip_hash_req_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::TipHashRequest>(arena, *from._impl_.kind_.tip_hash_req_);
        } else {
          _this->_impl_.kind_.tip_hash_req_->MergeFrom(from._internal_tip_hash_req());
        }
        break;
      }
      case kTipHashRes: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.tip_hash_res_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::TipHashResponse>(arena, *from._impl_.kind_.tip_hash_res_);
        } else {
          _this->_impl_.kind_.tip_hash_res_->MergeFrom(from._internal_tip_hash_res());
        }
        break;
      }
      case kPeerListReq: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.peer_list_req_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::PeerListRequest>(arena, *from._impl_.kind_.peer_list_req_);
        } else {
          _this->_impl_.kind_.peer_list_req_->MergeFrom(from._internal_peer_list_req());
        }
        break;
      }
      case kPeerList: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.peer_list_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::PeerList>(arena, *from._impl_.kind_.peer_list_);
        } else {
          _this->_impl_.kind_.peer_list_->MergeFrom(from._internal_peer_list());
        }
        break;
      }
      case kRollupBlock: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.rollup_block_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::RollupBlockMsg>(arena, *from._impl_.kind_.rollup_block_);
        } else {
          _this->_impl_.kind_.rollup_block_->MergeFrom(from._internal_rollup_block());
        }
        break;
      }
      case kSnapshotReq: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.snapshot_req_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::SnapshotRequest>(arena, *from._impl_.kind_.snapshot_req_);
        } else {
          _this->_impl_.kind_.snapshot_req_->MergeFrom(from._internal_snapshot_req());
        }
        break;
      }
      case kTailReq: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.tail_req_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::TailBlocksRequest>(arena, *from._impl_.kind_.tail_req_);
        } else {
          _this->_impl_.kind_.tail_req_->MergeFrom(from._internal_tail_req());
        }
        break;
      }
      case kStateProof: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.state_proof_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::StateProof>(arena, *from._impl_.kind_.state_proof_);
        } else {
          _this->_impl_.kind_.state_proof_->MergeFrom(from._internal_state_proof());
        }
        break;
      }
      case kGetData: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.get_data_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::GetData>(arena, *from._impl_.kind_.get_data_);
        } else {
          _this->_impl_.kind_.get_data_->MergeFrom(from._internal_get_data());
        }
        break;
      }
      case kBlockchainSyncRequest: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.blockchain_sync_request_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::BlockchainSyncProto>(arena, *from._impl_.kind_.blockchain_sync_request_);
        } else {
          _this->_impl_.kind_.blockchain_sync_request_->MergeFrom(from._internal_blockchain_sync_request());
        }
        break;
      }
      case kTxBroadcast: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.tx_broadcast_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::TransactionBroadcast>(arena, *from._impl_.kind_.tx_broadcast_);
        } else {
          _this->_impl_.kind_.tx_broadcast_->MergeFrom(from._internal_tx_broadcast());
        }
        break;
      }
      case kWhisper: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.whisper_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Whisper>(arena, *from._impl_.kind_.whisper_);
        } else {
          _this->_impl_.kind_.whisper_->MergeFrom(from._internal_whisper());
        }
        break;
      }
      case kGetHeaders: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.get_headers_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::GetHeaders>(arena, *from._impl_.kind_.get_headers_);
        } else {
          _this->_impl_.kind_.get_headers_->MergeFrom(from._internal_get_headers());
        }
        break;
      }
      case kHeaders: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.headers_ =
              ::google::protobuf::Message::CopyConstruct<::alyncoin::net::Headers>(arena, *from._impl_.kind_.headers_);
        } else {
          _this->_impl_.kind_.headers_->MergeFrom(from._internal_headers());
        }
        break;
      }
      case KIND_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Frame::CopyFrom(const Frame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alyncoin.net.Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Frame::InternalSwap(Frame* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.kind_, other->_impl_.kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Frame::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace net
}  // namespace alyncoin
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_net_5fframe_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
