// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: atomic_swap.proto
// Protobuf C++ Version: 5.29.3

#include "atomic_swap.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace atomic {

inline constexpr AtomicSwapProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        senderaddress_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        receiveraddress_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        secrethash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        secret_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        zkproof_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        falconsignature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dilithiumsignature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{::uint64_t{0u}},
        createdat_{::int64_t{0}},
        expiresat_{::int64_t{0}},
        state_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AtomicSwapProto::AtomicSwapProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AtomicSwapProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AtomicSwapProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AtomicSwapProtoDefaultTypeInternal() {}
  union {
    AtomicSwapProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AtomicSwapProtoDefaultTypeInternal _AtomicSwapProto_default_instance_;
}  // namespace atomic
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_atomic_5fswap_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_atomic_5fswap_2eproto = nullptr;
const ::uint32_t
    TableStruct_atomic_5fswap_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.uuid_),
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.senderaddress_),
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.receiveraddress_),
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.secrethash_),
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.secret_),
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.createdat_),
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.expiresat_),
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.zkproof_),
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.falconsignature_),
        PROTOBUF_FIELD_OFFSET(::atomic::AtomicSwapProto, _impl_.dilithiumsignature_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::atomic::AtomicSwapProto)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::atomic::_AtomicSwapProto_default_instance_._instance,
};
const char descriptor_table_protodef_atomic_5fswap_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021atomic_swap.proto\022\006atomic\"\376\001\n\017AtomicSw"
    "apProto\022\014\n\004uuid\030\001 \001(\t\022\025\n\rsenderAddress\030\002"
    " \001(\t\022\027\n\017receiverAddress\030\003 \001(\t\022\016\n\006amount\030"
    "\004 \001(\004\022\022\n\nsecretHash\030\005 \001(\t\022\016\n\006secret\030\006 \001("
    "\t\022\021\n\tcreatedAt\030\007 \001(\003\022\021\n\texpiresAt\030\010 \001(\003\022"
    "\r\n\005state\030\t \001(\005\022\017\n\007zkProof\030\n \001(\014\022\027\n\017falco"
    "nSignature\030\013 \001(\014\022\032\n\022dilithiumSignature\030\014"
    " \001(\014b\006proto3"
};
static ::absl::once_flag descriptor_table_atomic_5fswap_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_atomic_5fswap_2eproto = {
    false,
    false,
    292,
    descriptor_table_protodef_atomic_5fswap_2eproto,
    "atomic_swap.proto",
    &descriptor_table_atomic_5fswap_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_atomic_5fswap_2eproto::offsets,
    file_level_enum_descriptors_atomic_5fswap_2eproto,
    file_level_service_descriptors_atomic_5fswap_2eproto,
};
namespace atomic {
// ===================================================================

class AtomicSwapProto::_Internal {
 public:
};

AtomicSwapProto::AtomicSwapProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:atomic.AtomicSwapProto)
}
inline PROTOBUF_NDEBUG_INLINE AtomicSwapProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::atomic::AtomicSwapProto& from_msg)
      : uuid_(arena, from.uuid_),
        senderaddress_(arena, from.senderaddress_),
        receiveraddress_(arena, from.receiveraddress_),
        secrethash_(arena, from.secrethash_),
        secret_(arena, from.secret_),
        zkproof_(arena, from.zkproof_),
        falconsignature_(arena, from.falconsignature_),
        dilithiumsignature_(arena, from.dilithiumsignature_),
        _cached_size_{0} {}

AtomicSwapProto::AtomicSwapProto(
    ::google::protobuf::Arena* arena,
    const AtomicSwapProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AtomicSwapProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, amount_),
           offsetof(Impl_, state_) -
               offsetof(Impl_, amount_) +
               sizeof(Impl_::state_));

  // @@protoc_insertion_point(copy_constructor:atomic.AtomicSwapProto)
}
inline PROTOBUF_NDEBUG_INLINE AtomicSwapProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uuid_(arena),
        senderaddress_(arena),
        receiveraddress_(arena),
        secrethash_(arena),
        secret_(arena),
        zkproof_(arena),
        falconsignature_(arena),
        dilithiumsignature_(arena),
        _cached_size_{0} {}

inline void AtomicSwapProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount_),
           0,
           offsetof(Impl_, state_) -
               offsetof(Impl_, amount_) +
               sizeof(Impl_::state_));
}
AtomicSwapProto::~AtomicSwapProto() {
  // @@protoc_insertion_point(destructor:atomic.AtomicSwapProto)
  SharedDtor(*this);
}
inline void AtomicSwapProto::SharedDtor(MessageLite& self) {
  AtomicSwapProto& this_ = static_cast<AtomicSwapProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.uuid_.Destroy();
  this_._impl_.senderaddress_.Destroy();
  this_._impl_.receiveraddress_.Destroy();
  this_._impl_.secrethash_.Destroy();
  this_._impl_.secret_.Destroy();
  this_._impl_.zkproof_.Destroy();
  this_._impl_.falconsignature_.Destroy();
  this_._impl_.dilithiumsignature_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AtomicSwapProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AtomicSwapProto(arena);
}
constexpr auto AtomicSwapProto::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AtomicSwapProto),
                                            alignof(AtomicSwapProto));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AtomicSwapProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AtomicSwapProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AtomicSwapProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AtomicSwapProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AtomicSwapProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AtomicSwapProto>(), &AtomicSwapProto::ByteSizeLong,
            &AtomicSwapProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_._cached_size_),
        false,
    },
    &AtomicSwapProto::kDescriptorMethods,
    &descriptor_table_atomic_5fswap_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AtomicSwapProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 87, 2> AtomicSwapProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::atomic::AtomicSwapProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string uuid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.uuid_)}},
    // string senderAddress = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.senderaddress_)}},
    // string receiverAddress = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.receiveraddress_)}},
    // uint64 amount = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AtomicSwapProto, _impl_.amount_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.amount_)}},
    // string secretHash = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.secrethash_)}},
    // string secret = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.secret_)}},
    // int64 createdAt = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AtomicSwapProto, _impl_.createdat_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.createdat_)}},
    // int64 expiresAt = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AtomicSwapProto, _impl_.expiresat_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.expiresat_)}},
    // int32 state = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AtomicSwapProto, _impl_.state_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.state_)}},
    // bytes zkProof = 10;
    {::_pbi::TcParser::FastBS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.zkproof_)}},
    // bytes falconSignature = 11;
    {::_pbi::TcParser::FastBS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.falconsignature_)}},
    // bytes dilithiumSignature = 12;
    {::_pbi::TcParser::FastBS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.dilithiumsignature_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string uuid = 1;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.uuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string senderAddress = 2;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.senderaddress_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string receiverAddress = 3;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.receiveraddress_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 amount = 4;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string secretHash = 5;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.secrethash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string secret = 6;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.secret_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 createdAt = 7;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.createdat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 expiresAt = 8;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.expiresat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 state = 9;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes zkProof = 10;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.zkproof_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes falconSignature = 11;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.falconsignature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes dilithiumSignature = 12;
    {PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.dilithiumsignature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\4\15\17\0\12\6\0\0\0\0\0\0\0\0\0"
    "atomic.AtomicSwapProto"
    "uuid"
    "senderAddress"
    "receiverAddress"
    "secretHash"
    "secret"
  }},
};

PROTOBUF_NOINLINE void AtomicSwapProto::Clear() {
// @@protoc_insertion_point(message_clear_start:atomic.AtomicSwapProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uuid_.ClearToEmpty();
  _impl_.senderaddress_.ClearToEmpty();
  _impl_.receiveraddress_.ClearToEmpty();
  _impl_.secrethash_.ClearToEmpty();
  _impl_.secret_.ClearToEmpty();
  _impl_.zkproof_.ClearToEmpty();
  _impl_.falconsignature_.ClearToEmpty();
  _impl_.dilithiumsignature_.ClearToEmpty();
  ::memset(&_impl_.amount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.state_) -
      reinterpret_cast<char*>(&_impl_.amount_)) + sizeof(_impl_.state_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AtomicSwapProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AtomicSwapProto& this_ = static_cast<const AtomicSwapProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AtomicSwapProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AtomicSwapProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:atomic.AtomicSwapProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string uuid = 1;
          if (!this_._internal_uuid().empty()) {
            const std::string& _s = this_._internal_uuid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "atomic.AtomicSwapProto.uuid");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string senderAddress = 2;
          if (!this_._internal_senderaddress().empty()) {
            const std::string& _s = this_._internal_senderaddress();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "atomic.AtomicSwapProto.senderAddress");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string receiverAddress = 3;
          if (!this_._internal_receiveraddress().empty()) {
            const std::string& _s = this_._internal_receiveraddress();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "atomic.AtomicSwapProto.receiverAddress");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint64 amount = 4;
          if (this_._internal_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_amount(), target);
          }

          // string secretHash = 5;
          if (!this_._internal_secrethash().empty()) {
            const std::string& _s = this_._internal_secrethash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "atomic.AtomicSwapProto.secretHash");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string secret = 6;
          if (!this_._internal_secret().empty()) {
            const std::string& _s = this_._internal_secret();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "atomic.AtomicSwapProto.secret");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // int64 createdAt = 7;
          if (this_._internal_createdat() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_createdat(), target);
          }

          // int64 expiresAt = 8;
          if (this_._internal_expiresat() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_expiresat(), target);
          }

          // int32 state = 9;
          if (this_._internal_state() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_state(), target);
          }

          // bytes zkProof = 10;
          if (!this_._internal_zkproof().empty()) {
            const std::string& _s = this_._internal_zkproof();
            target = stream->WriteBytesMaybeAliased(10, _s, target);
          }

          // bytes falconSignature = 11;
          if (!this_._internal_falconsignature().empty()) {
            const std::string& _s = this_._internal_falconsignature();
            target = stream->WriteBytesMaybeAliased(11, _s, target);
          }

          // bytes dilithiumSignature = 12;
          if (!this_._internal_dilithiumsignature().empty()) {
            const std::string& _s = this_._internal_dilithiumsignature();
            target = stream->WriteBytesMaybeAliased(12, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:atomic.AtomicSwapProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AtomicSwapProto::ByteSizeLong(const MessageLite& base) {
          const AtomicSwapProto& this_ = static_cast<const AtomicSwapProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AtomicSwapProto::ByteSizeLong() const {
          const AtomicSwapProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:atomic.AtomicSwapProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string uuid = 1;
            if (!this_._internal_uuid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_uuid());
            }
            // string senderAddress = 2;
            if (!this_._internal_senderaddress().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_senderaddress());
            }
            // string receiverAddress = 3;
            if (!this_._internal_receiveraddress().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_receiveraddress());
            }
            // string secretHash = 5;
            if (!this_._internal_secrethash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_secrethash());
            }
            // string secret = 6;
            if (!this_._internal_secret().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_secret());
            }
            // bytes zkProof = 10;
            if (!this_._internal_zkproof().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_zkproof());
            }
            // bytes falconSignature = 11;
            if (!this_._internal_falconsignature().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_falconsignature());
            }
            // bytes dilithiumSignature = 12;
            if (!this_._internal_dilithiumsignature().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_dilithiumsignature());
            }
            // uint64 amount = 4;
            if (this_._internal_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_amount());
            }
            // int64 createdAt = 7;
            if (this_._internal_createdat() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_createdat());
            }
            // int64 expiresAt = 8;
            if (this_._internal_expiresat() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_expiresat());
            }
            // int32 state = 9;
            if (this_._internal_state() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_state());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AtomicSwapProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AtomicSwapProto*>(&to_msg);
  auto& from = static_cast<const AtomicSwapProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:atomic.AtomicSwapProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  if (!from._internal_senderaddress().empty()) {
    _this->_internal_set_senderaddress(from._internal_senderaddress());
  }
  if (!from._internal_receiveraddress().empty()) {
    _this->_internal_set_receiveraddress(from._internal_receiveraddress());
  }
  if (!from._internal_secrethash().empty()) {
    _this->_internal_set_secrethash(from._internal_secrethash());
  }
  if (!from._internal_secret().empty()) {
    _this->_internal_set_secret(from._internal_secret());
  }
  if (!from._internal_zkproof().empty()) {
    _this->_internal_set_zkproof(from._internal_zkproof());
  }
  if (!from._internal_falconsignature().empty()) {
    _this->_internal_set_falconsignature(from._internal_falconsignature());
  }
  if (!from._internal_dilithiumsignature().empty()) {
    _this->_internal_set_dilithiumsignature(from._internal_dilithiumsignature());
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  if (from._internal_createdat() != 0) {
    _this->_impl_.createdat_ = from._impl_.createdat_;
  }
  if (from._internal_expiresat() != 0) {
    _this->_impl_.expiresat_ = from._impl_.expiresat_;
  }
  if (from._internal_state() != 0) {
    _this->_impl_.state_ = from._impl_.state_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AtomicSwapProto::CopyFrom(const AtomicSwapProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atomic.AtomicSwapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AtomicSwapProto::InternalSwap(AtomicSwapProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uuid_, &other->_impl_.uuid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.senderaddress_, &other->_impl_.senderaddress_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.receiveraddress_, &other->_impl_.receiveraddress_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secrethash_, &other->_impl_.secrethash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secret_, &other->_impl_.secret_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.zkproof_, &other->_impl_.zkproof_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.falconsignature_, &other->_impl_.falconsignature_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dilithiumsignature_, &other->_impl_.dilithiumsignature_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.state_)
      + sizeof(AtomicSwapProto::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(AtomicSwapProto, _impl_.amount_)>(
          reinterpret_cast<char*>(&_impl_.amount_),
          reinterpret_cast<char*>(&other->_impl_.amount_));
}

::google::protobuf::Metadata AtomicSwapProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace atomic
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_atomic_5fswap_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
